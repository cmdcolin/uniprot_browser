{"version":3,"file":"AboutDialog-Dz7qxUMu.js","sources":["../../node_modules/@jbrowse/product-core/esm/ui/FileInfoPanel.js","../../node_modules/@jbrowse/product-core/esm/ui/util.js","../../node_modules/@jbrowse/product-core/esm/ui/HeaderButtons.js","../../node_modules/@jbrowse/product-core/esm/ui/RefNameInfoDialog.js","../../node_modules/@jbrowse/product-core/esm/ui/AboutDialogContents.js","../../node_modules/@jbrowse/product-core/esm/ui/AboutDialog.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState } from 'react';\nimport Attributes from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/Attributes';\nimport BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard';\nimport { readConfObject } from '@jbrowse/core/configuration';\nimport { ErrorMessage, LoadingEllipses } from '@jbrowse/core/ui';\nimport { getSession } from '@jbrowse/core/util';\nexport default function FileInfoPanel({ config, }) {\n    const [error, setError] = useState();\n    const [info, setInfo] = useState();\n    const session = getSession(config);\n    const { rpcManager } = session;\n    useEffect(() => {\n        ;\n        (async () => {\n            try {\n                const adapterConfig = readConfObject(config, 'adapter');\n                const result = await rpcManager.call(config.trackId, 'CoreGetInfo', {\n                    adapterConfig,\n                });\n                setInfo(result);\n            }\n            catch (e) {\n                console.error(e);\n                setError(e);\n            }\n        })();\n    }, [config, rpcManager]);\n    const details = typeof info === 'string'\n        ? {\n            header: `<pre>${info\n                .replaceAll('<', '&lt;')\n                .replaceAll('>', '&gt;')}</pre>`,\n        }\n        : info || {};\n    return (_jsx(BaseCard, { title: \"File info\", children: error ? (_jsx(ErrorMessage, { error: error })) : info === undefined ? (_jsx(LoadingEllipses, { message: \"Loading file data\" })) : (_jsx(Attributes, { attributes: details })) }));\n}\n","import { getConf, readConfObject } from '@jbrowse/core/configuration';\nimport { getSession } from '@jbrowse/core/util';\nexport function removeAttr(obj, attr) {\n    for (const prop in obj) {\n        if (prop === attr) {\n            delete obj[prop];\n        }\n        else if (typeof obj[prop] === 'object') {\n            removeAttr(obj[prop], attr);\n        }\n    }\n    return obj;\n}\nexport function generateDisplayableConfig({ config, pluginManager, }) {\n    const session = getSession(config);\n    const conf = readConfObject(config);\n    return pluginManager.evaluateExtensionPoint('Core-customizeAbout', {\n        config: {\n            ...conf,\n            ...getConf(session, ['formatAbout', 'config'], { config: conf }),\n            ...readConfObject(config, ['formatAbout', 'config'], { config: conf }),\n        },\n    }, { session, config });\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { Button } from '@mui/material';\nimport copy from 'copy-to-clipboard';\nimport { makeStyles } from 'tss-react/mui';\nimport { removeAttr } from './util';\nconst useStyles = makeStyles()({\n    button: {\n        float: 'right',\n    },\n});\nfunction HeaderButtons({ conf, setShowRefNames }) {\n    const [copied, setCopied] = useState(false);\n    const { classes } = useStyles();\n    return (_jsxs(\"span\", { className: classes.button, children: [_jsx(Button, { variant: \"contained\", color: \"secondary\", onClick: () => {\n                    setShowRefNames(true);\n                }, children: \"Show ref names\" }), _jsx(Button, { variant: \"contained\", onClick: () => {\n                    const snap = removeAttr(structuredClone(conf), 'baseUri');\n                    copy(JSON.stringify(snap, null, 2));\n                    setCopied(true);\n                    setTimeout(() => {\n                        setCopied(false);\n                    }, 1000);\n                }, children: copied ? 'Copied to clipboard!' : 'Copy config' })] }));\n}\nexport default HeaderButtons;\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useState } from 'react';\nimport { readConfObject } from '@jbrowse/core/configuration';\nimport { Dialog, ErrorMessage, LoadingEllipses } from '@jbrowse/core/ui';\nimport { getSession } from '@jbrowse/core/util';\nimport { getConfAssemblyNames } from '@jbrowse/core/util/tracks';\nimport { Button, DialogContent } from '@mui/material';\nimport copy from 'copy-to-clipboard';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nconst MAX_REF_NAMES = 10000;\nconst useStyles = makeStyles()(theme => ({\n    container: {\n        minWidth: 800,\n    },\n    refNames: {\n        maxHeight: 300,\n        overflow: 'auto',\n        flexGrow: 1,\n        background: theme.palette.background.default,\n    },\n}));\nconst RefNameInfoDialog = observer(function ({ config, onClose, }) {\n    const { classes } = useStyles();\n    const [error, setError] = useState();\n    const [refNames, setRefNames] = useState();\n    const [copied, setCopied] = useState(false);\n    const { rpcManager } = getSession(config);\n    useEffect(() => {\n        ;\n        (async () => {\n            try {\n                const map = await Promise.all([...new Set(getConfAssemblyNames(config))].map(async (assemblyName) => {\n                    const adapterConfig = readConfObject(config, 'adapter');\n                    return [\n                        assemblyName,\n                        (await rpcManager.call(config.trackId, 'CoreGetRefNames', {\n                            adapterConfig,\n                            regions: [\n                                {\n                                    assemblyName,\n                                },\n                            ],\n                        })),\n                    ];\n                }));\n                setRefNames(Object.fromEntries(map));\n            }\n            catch (e) {\n                console.error(e);\n                setError(e);\n            }\n        })();\n    }, [config, rpcManager]);\n    const names = refNames ? Object.entries(refNames) : [];\n    const result = names\n        .flatMap(([assemblyName, refNames]) => {\n        return [\n            `--- ${assemblyName} ---`,\n            ...refNames.slice(0, MAX_REF_NAMES),\n            refNames.length > MAX_REF_NAMES\n                ? `\\nToo many refNames to show in browser for ${assemblyName}, use \"Copy ref names\" button to copy to clipboard`\n                : '',\n        ];\n    })\n        .filter(f => !!f)\n        .join('\\n');\n    return (_jsx(Dialog, { open: true, title: \"Reference sequence names used in track\", onClose: onClose, maxWidth: \"xl\", children: _jsx(DialogContent, { className: classes.container, children: error ? (_jsx(ErrorMessage, { error: error })) : refNames === undefined ? (_jsx(LoadingEllipses, { message: \"Loading refNames\" })) : (_jsxs(_Fragment, { children: [_jsx(Button, { variant: \"contained\", onClick: () => {\n                            copy(names\n                                .flatMap(([assemblyName, refNames]) => [\n                                `--- ${assemblyName} ---`,\n                                ...refNames,\n                            ])\n                                .filter(f => !!f)\n                                .join('\\n'));\n                            setCopied(true);\n                            setTimeout(() => {\n                                setCopied(false);\n                            }, 1000);\n                        }, children: copied ? 'Copied to clipboard!' : 'Copy ref names' }), _jsx(\"pre\", { className: classes.refNames, children: result })] })) }) }));\n});\nexport default RefNameInfoDialog;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport Attributes from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/Attributes';\nimport BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard';\nimport { getConf, readConfObject } from '@jbrowse/core/configuration';\nimport { getEnv, getSession } from '@jbrowse/core/util';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nimport FileInfoPanel from './FileInfoPanel';\nimport HeaderButtons from './HeaderButtons';\nimport RefNameInfoDialog from './RefNameInfoDialog';\nimport { generateDisplayableConfig } from './util';\nconst useStyles = makeStyles()({\n    content: {\n        minWidth: 800,\n    },\n});\nconst AboutDialogContents = observer(function ({ config, }) {\n    const conf = readConfObject(config);\n    const session = getSession(config);\n    const { classes } = useStyles();\n    const [showRefNames, setShowRefNames] = useState(false);\n    const hideUris = getConf(session, ['formatAbout', 'hideUris']) ||\n        readConfObject(config, ['formatAbout', 'hideUris']);\n    const { pluginManager } = getEnv(session);\n    const confPostExt = generateDisplayableConfig({\n        config,\n        pluginManager,\n    });\n    const ExtraPanel = pluginManager.evaluateExtensionPoint('Core-extraAboutPanel', null, { session, config });\n    const hideFields = ['displays', 'baseUri', 'refNames', 'formatAbout'];\n    return (_jsxs(\"div\", { className: classes.content, children: [_jsxs(BaseCard, { title: \"Configuration\", children: [!hideUris ? (_jsx(HeaderButtons, { conf: conf, setShowRefNames: setShowRefNames })) : null, _jsx(Attributes, { attributes: confPostExt.config, omit: [...hideFields, 'metadata'], hideUris: hideUris })] }), confPostExt.config.metadata ? (_jsx(BaseCard, { title: \"Metadata\", children: _jsx(Attributes, { attributes: confPostExt.config.metadata, omit: hideFields, hideUris: hideUris }) })) : null, ExtraPanel ? (_jsx(BaseCard, { title: ExtraPanel.name, children: _jsx(ExtraPanel.Component, { config: config }) })) : null, _jsx(FileInfoPanel, { config: config }), showRefNames ? (_jsx(RefNameInfoDialog, { config: config, onClose: () => {\n                    setShowRefNames(false);\n                } })) : null] }));\n});\nexport default AboutDialogContents;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport Dialog from '@jbrowse/core/ui/Dialog';\nimport { getEnv, getSession } from '@jbrowse/core/util';\nimport { getTrackName } from '@jbrowse/core/util/tracks';\nimport AboutContents from './AboutDialogContents';\nexport function AboutDialog({ config, handleClose, }) {\n    const session = getSession(config);\n    const trackName = getTrackName(config, session);\n    const { pluginManager } = getEnv(session);\n    const AboutComponent = pluginManager.evaluateExtensionPoint('Core-replaceAbout', AboutContents, { session, config });\n    return (_jsx(Dialog, { open: true, onClose: handleClose, title: trackName, maxWidth: \"xl\", children: _jsx(AboutComponent, { config: config }) }));\n}\n"],"names":["FileInfoPanel","config","error","setError","useState","info","setInfo","session","getSession","rpcManager","useEffect","adapterConfig","readConfObject","result","e","details","_jsx","BaseCard","ErrorMessage","LoadingEllipses","Attributes","removeAttr","obj","attr","prop","generateDisplayableConfig","pluginManager","conf","getConf","useStyles","makeStyles","HeaderButtons","setShowRefNames","copied","setCopied","classes","_jsxs","Button","snap","copy","MAX_REF_NAMES","theme","RefNameInfoDialog","observer","onClose","refNames","setRefNames","map","getConfAssemblyNames","assemblyName","names","f","Dialog","DialogContent","_Fragment","AboutDialogContents","showRefNames","hideUris","getEnv","confPostExt","ExtraPanel","hideFields","AboutDialog","handleClose","trackName","getTrackName","AboutComponent","AboutContents"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}