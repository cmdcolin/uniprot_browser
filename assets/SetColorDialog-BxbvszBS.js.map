{"version":3,"file":"SetColorDialog-BxbvszBS.js","sources":["../../node_modules/@jbrowse/plugin-variants/esm/shared/components/BulkEditPanel.js","../../node_modules/@jbrowse/plugin-variants/esm/shared/components/HelpfulTips.js","../../node_modules/@jbrowse/plugin-variants/esm/shared/components/RowPalettizer.js","../../node_modules/@jbrowse/plugin-variants/esm/shared/components/SourcesDataGrid.js","../../node_modules/@jbrowse/plugin-variants/esm/shared/sourcesGridUtils.js","../../node_modules/@jbrowse/plugin-variants/esm/shared/components/SourcesGridHeader.js","../../node_modules/@jbrowse/plugin-variants/esm/shared/components/SourcesGrid.js","../../node_modules/@jbrowse/plugin-variants/esm/shared/components/SetColorDialog.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { ErrorMessage } from '@jbrowse/core/ui';\nimport { Button, DialogActions, DialogContent, TextField, Typography, } from '@mui/material';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()({\n    textAreaFont: {\n        fontFamily: 'Courier New',\n    },\n});\nexport default function BulkEditPanel({ onClose, currLayout, }) {\n    const { classes } = useStyles();\n    const [val, setVal] = useState('');\n    const [error, setError] = useState();\n    return (_jsxs(_Fragment, { children: [_jsxs(DialogContent, { children: [_jsx(Typography, { children: \"Paste CSV or TSV. If a header column is present. First line is a header. If a column called \\\"name\\\" is present, it uses that to connect to IDs in the table, otherwise it uses the first column no.\" }), error ? _jsx(ErrorMessage, { error: error }) : null, _jsx(TextField, { variant: \"outlined\", multiline: true, minRows: 5, placeholder: 'name,population\\nHG00098,GBR\\nHG00101,GBR\\nHG00459,CHS\\n...', maxRows: 10, fullWidth: true, value: val, onChange: event => {\n                            setVal(event.target.value);\n                        }, slotProps: {\n                            input: {\n                                classes: {\n                                    input: classes.textAreaFont,\n                                },\n                            },\n                        } })] }), _jsxs(DialogActions, { children: [_jsx(Button, { variant: \"contained\", color: \"secondary\", onClick: () => {\n                            const lines = val\n                                .split('\\n')\n                                .map(f => f.trim())\n                                .filter(f => !!f);\n                            const fields = lines[0].split(/[,\\t]/gm);\n                            if (fields.includes('name')) {\n                                setError('');\n                                const oldLayout = Object.fromEntries(currLayout.map(record => [record.name, record]));\n                                const newData = Object.fromEntries(lines.slice(1).map(line => {\n                                    const cols = line.split(/[,\\t]/gm);\n                                    const newRecord = Object.fromEntries(cols.map((col, idx) => [fields[idx], col]));\n                                    return [\n                                        newRecord.name,\n                                        {\n                                            ...newRecord,\n                                            ...oldLayout[newRecord.name],\n                                        },\n                                    ];\n                                }));\n                                onClose(currLayout.map(record => ({\n                                    ...record,\n                                    ...newData[record.name],\n                                })));\n                            }\n                            else {\n                                setError(new Error('No \"name\" column found on line 1'));\n                            }\n                        }, children: \"Update rows\" }), _jsx(Button, { variant: \"contained\", color: \"primary\", onClick: () => {\n                            const lines = val\n                                .split('\\n')\n                                .map(f => f.trim())\n                                .filter(f => !!f);\n                            const fields = lines[0].split(/[,\\t]/gm);\n                            if (fields.includes('name')) {\n                                setError('');\n                                const oldLayout = Object.fromEntries(currLayout.map(record => [record.name, record]));\n                                const newData = Object.fromEntries(lines.slice(1).map(line => {\n                                    const cols = line.split(/[,\\t]/gm);\n                                    const newRecord = Object.fromEntries(cols.map((col, idx) => [fields[idx], col]));\n                                    return [\n                                        newRecord.name,\n                                        {\n                                            ...newRecord,\n                                            ...oldLayout[newRecord.name],\n                                        },\n                                    ];\n                                }));\n                                onClose(currLayout.map(record => ({\n                                    ...newData[record.name],\n                                })));\n                            }\n                            else {\n                                setError(new Error('No \"name\" column found on line 1'));\n                            }\n                        }, children: \"Replace rows\" }), _jsx(Button, { variant: \"contained\", color: \"inherit\", onClick: () => {\n                            onClose();\n                        }, children: \"Cancel\" })] })] }));\n}\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function HelpfulTips() {\n    return (_jsxs(_Fragment, { children: [\"Helpful tips\", _jsxs(\"ul\", { children: [_jsx(\"li\", { children: \"You can select rows in the table with the checkboxes\" }), _jsx(\"li\", { children: \"Multi-select is enabled with shift-click and control-click\" }), _jsx(\"li\", { children: \"The \\\"Move selected items up/down\\\" can re-arrange subtracks\" }), _jsx(\"li\", { children: \"Sorting the data grid itself can also re-arrange subtracks\" }), _jsx(\"li\", { children: \"Changes are applied when you hit Submit\" }), _jsx(\"li\", { children: \"You can click and drag the dialog box to move it on the screen\" }), _jsx(\"li\", { children: \"Columns in the table can be hidden using a vertical '...' menu on the right side of each column\" })] })] }));\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { set1 } from '@jbrowse/core/ui/colors';\nimport { Button } from '@mui/material';\nimport { randomColor } from '../util';\nexport default function RowPalettizer({ setCurrLayout, currLayout, }) {\n    var _a;\n    return (_jsxs(\"div\", { children: [\"Create color palette based on...\", Object.keys((_a = currLayout[0]) !== null && _a !== void 0 ? _a : [])\n                .filter(f => f !== 'name' &&\n                f !== 'color' &&\n                f !== 'label' &&\n                f !== 'id' &&\n                f !== 'HP')\n                .map(r => (_jsx(Button, { variant: \"contained\", color: \"inherit\", onClick: () => {\n                    const map = new Map();\n                    for (const row of currLayout) {\n                        const val = map.get(row[r]);\n                        if (!val) {\n                            map.set(row[r], 1);\n                        }\n                        else {\n                            map.set(row[r], val + 1);\n                        }\n                    }\n                    const ret = Object.fromEntries([...map.entries()]\n                        .sort((a, b) => a[1] - b[1])\n                        .map((r, idx) => [r[0], set1[idx] || randomColor(r[0])]));\n                    setCurrLayout(currLayout.map(row => ({\n                        ...row,\n                        color: ret[row[r]],\n                    })));\n                }, children: r }, r))), _jsx(Button, { onClick: () => {\n                    setCurrLayout(currLayout.map(row => ({\n                        ...row,\n                        color: undefined,\n                    })));\n                }, children: \"Clear colors\" })] }));\n}\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { SanitizedHTML } from '@jbrowse/core/ui';\nimport ColorPicker from '@jbrowse/core/ui/ColorPicker';\nimport { getStr, measureGridWidth } from '@jbrowse/core/util';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()({\n    cell: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n});\nexport default function SourcesDataGrid({ rows, onChange, setSelected, }) {\n    const { classes } = useStyles();\n    const { id: _id, name: _name, label: _label, color: _color, baseUri: _baseUri, HP: _HP, ...rest } = rows[0];\n    const [currSort, setCurrSort] = useState({\n        idx: 0,\n        field: null,\n    });\n    return (_jsx(\"div\", { style: { height: 400, width: '100%' }, children: _jsx(DataGrid, { checkboxSelection: true, disableRowSelectionOnClick: true, onRowSelectionModelChange: arg => {\n                setSelected([...arg.ids]);\n            }, rows: rows, rowHeight: 25, columnHeaderHeight: 33, columns: [\n                {\n                    field: 'color',\n                    headerName: 'Color',\n                    renderCell: params => {\n                        const { value, id } = params;\n                        return (_jsx(ColorPicker, { color: value || 'blue', onChange: c => {\n                                const elt = rows.find(f => f.name === id);\n                                if (elt) {\n                                    elt.color = c;\n                                }\n                                onChange([...rows]);\n                            } }));\n                    },\n                },\n                {\n                    field: 'label',\n                    headerName: 'Name',\n                    width: measureGridWidth(rows.map(r => r.label)),\n                },\n                ...Object.keys(rest).map(val => ({\n                    field: val,\n                    renderCell: ({ value }) => (_jsx(\"div\", { className: classes.cell, children: _jsx(SanitizedHTML, { html: getStr(value) }) })),\n                    width: measureGridWidth(rows.map(r => `${r[val]}`)),\n                })),\n            ], sortModel: [], onSortModelChange: args => {\n                const sort = args[0];\n                const idx = (currSort.idx + 1) % 2;\n                const field = sort.field || currSort.field;\n                setCurrSort({ idx, field });\n                onChange(field\n                    ? [...rows].sort((a, b) => {\n                        const aa = getStr(a[field]);\n                        const bb = getStr(b[field]);\n                        return idx === 1 ? aa.localeCompare(bb) : bb.localeCompare(aa);\n                    })\n                    : rows);\n            } }) }));\n}\n","export function moveUp(arr, sel, by = 1) {\n    const idxs = sel\n        .map(l => arr.findIndex(v => v.name === l))\n        .sort((a, b) => a - b);\n    let lastIdx = 0;\n    for (const old of idxs) {\n        const idx = Math.max(lastIdx, old - by);\n        if (idx >= lastIdx) {\n            arr.splice(idx, 0, arr.splice(old, 1)[0]);\n        }\n        lastIdx = lastIdx + 1;\n    }\n    return arr;\n}\nexport function moveDown(arr, sel, by = 1) {\n    const idxs = sel\n        .map(l => arr.findIndex(v => v.name === l))\n        .sort((a, b) => b - a);\n    let lastIdx = arr.length - 1;\n    for (const old of idxs) {\n        const idx = Math.min(lastIdx, old + by);\n        if (idx <= lastIdx) {\n            arr.splice(idx, 0, arr.splice(old, 1)[0]);\n        }\n        lastIdx = lastIdx - 1;\n    }\n    return arr;\n}\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { ColorPopover } from '@jbrowse/core/ui/ColorPicker';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport KeyboardDoubleArrowDownIcon from '@mui/icons-material/KeyboardDoubleArrowDown';\nimport KeyboardDoubleArrowUpIcon from '@mui/icons-material/KeyboardDoubleArrowUp';\nimport { Button } from '@mui/material';\nimport { moveDown, moveUp } from '../sourcesGridUtils';\nexport default function SourcesGridHeader({ selected, onChange, rows, showTips, }) {\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [widgetColor, setWidgetColor] = useState('blue');\n    return (_jsxs(_Fragment, { children: [_jsx(Button, { disabled: !selected.length, onClick: event => {\n                    setAnchorEl(event.currentTarget);\n                }, children: \"Change color of selected items\" }), _jsxs(Button, { onClick: () => {\n                    onChange(moveUp([...rows], selected));\n                }, disabled: !selected.length, children: [_jsx(KeyboardArrowUpIcon, {}), showTips ? 'Move selected items up' : null] }), _jsxs(Button, { onClick: () => {\n                    onChange(moveDown([...rows], selected));\n                }, disabled: !selected.length, children: [_jsx(KeyboardArrowDownIcon, {}), showTips ? 'Move selected items down' : null] }), _jsxs(Button, { onClick: () => {\n                    onChange(moveUp([...rows], selected, rows.length));\n                }, disabled: !selected.length, children: [_jsx(KeyboardDoubleArrowUpIcon, {}), showTips ? 'Move selected items to top' : null] }), _jsxs(Button, { onClick: () => {\n                    onChange(moveDown([...rows], selected, rows.length));\n                }, disabled: !selected.length, children: [_jsx(KeyboardDoubleArrowDownIcon, {}), showTips ? 'Move selected items to bottom' : null] }), _jsx(ColorPopover, { anchorEl: anchorEl, color: widgetColor, onChange: c => {\n                    setWidgetColor(c);\n                    for (const id of selected) {\n                        const elt = rows.find(f => f.name === id);\n                        if (elt) {\n                            elt.color = c;\n                        }\n                    }\n                    onChange([...rows]);\n                }, onClose: () => {\n                    setAnchorEl(null);\n                } })] }));\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport SourcesDataGrid from './SourcesDataGrid';\nimport SourcesGridHeader from './SourcesGridHeader';\nfunction SourcesGrid({ rows, onChange, showTips, }) {\n    const [selected, setSelected] = useState([]);\n    return (_jsxs(\"div\", { children: [_jsx(SourcesGridHeader, { selected: selected, rows: rows, showTips: showTips, onChange: onChange }), rows.length ? (_jsx(SourcesDataGrid, { rows: rows, onChange: onChange, setSelected: setSelected })) : (_jsx(\"div\", { children: \"No rows\" }))] }));\n}\nexport default SourcesGrid;\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport DraggableDialog from '@jbrowse/core/ui/DraggableDialog';\nimport { useLocalStorage } from '@jbrowse/core/util';\nimport { Button, DialogActions, DialogContent } from '@mui/material';\nimport { makeStyles } from 'tss-react/mui';\nimport BulkEditPanel from './BulkEditPanel';\nimport HelpfulTips from './HelpfulTips';\nimport RowPalettizer from './RowPalettizer';\nimport SourcesGrid from './SourcesGrid';\nconst useStyles = makeStyles()({\n    content: {\n        minWidth: 800,\n    },\n    fr: {\n        float: 'right',\n        display: 'flex',\n        gap: 8,\n    },\n    textAreaFont: {\n        fontFamily: 'Courier New',\n    },\n});\nexport default function SetColorDialog({ model, handleClose, }) {\n    const { classes } = useStyles();\n    const { sources } = model;\n    const [showBulkEditor, setShowBulkEditor] = useState(false);\n    const [currLayout, setCurrLayout] = useState(sources || []);\n    const [showTips, setShowTips] = useLocalStorage('multivariant-showTips', false);\n    return (_jsx(DraggableDialog, { open: true, onClose: handleClose, maxWidth: \"xl\", title: \"Multi-sample variant display - Color/arrangement editor\", children: showBulkEditor ? (_jsx(BulkEditPanel, { currLayout: currLayout, onClose: arg => {\n                if (arg) {\n                    setCurrLayout(arg);\n                }\n                setShowBulkEditor(false);\n            } })) : (_jsxs(_Fragment, { children: [_jsxs(DialogContent, { className: classes.content, children: [_jsxs(\"div\", { className: classes.fr, children: [_jsx(Button, { variant: \"contained\", onClick: () => {\n                                        setShowTips(!showTips);\n                                    }, children: showTips ? 'Hide tips' : 'Show tips' }), _jsx(Button, { color: \"secondary\", variant: \"contained\", onClick: () => {\n                                        setShowBulkEditor(!showBulkEditor);\n                                    }, children: \"Show Bulk row editor\" })] }), showTips ? _jsx(HelpfulTips, {}) : null, _jsx(\"br\", {}), _jsx(RowPalettizer, { currLayout: currLayout, setCurrLayout: setCurrLayout }), _jsx(SourcesGrid, { rows: currLayout, onChange: setCurrLayout, showTips: showTips })] }), _jsxs(DialogActions, { children: [_jsx(Button, { variant: \"contained\", type: \"submit\", color: \"inherit\", onClick: () => {\n                                model.clearLayout();\n                                setCurrLayout(model.sources || []);\n                            }, children: \"Clear custom settings\" }), _jsx(Button, { variant: \"contained\", color: \"secondary\", onClick: () => {\n                                handleClose();\n                                setCurrLayout([...(model.sources || [])]);\n                            }, children: \"Cancel\" }), _jsx(Button, { variant: \"contained\", color: \"primary\", type: \"submit\", onClick: () => {\n                                model.setLayout(currLayout);\n                                handleClose();\n                            }, children: \"Submit\" })] })] })) }));\n}\n"],"names":["useStyles","makeStyles","BulkEditPanel","onClose","currLayout","classes","val","setVal","useState","error","setError","_jsxs","_Fragment","DialogContent","_jsx","Typography","ErrorMessage","TextField","event","DialogActions","Button","lines","f","fields","oldLayout","record","newData","line","cols","newRecord","col","idx","HelpfulTips","RowPalettizer","setCurrLayout","_a","r","map","row","ret","a","b","set1","randomColor","SourcesDataGrid","rows","onChange","setSelected","_id","_name","_label","_color","_baseUri","_HP","rest","currSort","setCurrSort","DataGrid","arg","params","value","id","ColorPicker","c","elt","measureGridWidth","SanitizedHTML","getStr","args","sort","field","aa","bb","moveUp","arr","sel","by","idxs","v","lastIdx","old","moveDown","SourcesGridHeader","selected","showTips","anchorEl","setAnchorEl","widgetColor","setWidgetColor","KeyboardArrowUpIcon","KeyboardArrowDownIcon","KeyboardDoubleArrowUpIcon","KeyboardDoubleArrowDownIcon","ColorPopover","SourcesGrid","SetColorDialog","model","handleClose","sources","showBulkEditor","setShowBulkEditor","setShowTips","useLocalStorage","DraggableDialog"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7]}