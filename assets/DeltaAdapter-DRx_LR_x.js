import{u as w,ag as _}from"./index-DPMJgfAS.js";import{p as k}from"./parseLineByLine-Cz_4ZyEp.js";import B from"./PAFAdapter-nBgCWaS3.js";import"./index-D3TbvS_u.js";import"./rxjs-DiVqhxS9.js";import"./index-usVTM9_X.js";import"./util-66Cgxenk.js";function C(d,l){const{statusCallback:E=()=>{}}=l||{};let M="",L="",u=0,h=0,i=0,c=0,y=0,m=0,e=[],o=0,p=0,q=!1;const A=[],b=new RegExp(/^>(\S+)\s+(\S+)\s+(\d+)\s+(\d+)/);return k.parseLineByLine(d,g=>{const x=b.exec(g);if(x!==null)return M=x[1],L=x[2],q=!0,!0;if(!q)return!0;const s=g.split(" ");if(s.length===7){const n=+s[0],t=+s[1],r=+s[2],a=+s[3],f=+s[4];y=n<t&&r<a||n>t&&r>a?1:-1,i=+Math.min(n,t)-1,c=+Math.max(t,n),u=+Math.min(r,a)-1,h=+Math.max(a,r),o=p=0,m=f,e=[]}else if(s.length===1){const n=+s[0];if(n===0){let t=0;const r=[];if(c-i-o!==h-u-p)throw new Error(`inconsistent alignment on line ${g}`);e.push(c-i-o<<4);for(const a of e){const f=a>>4;t+=f,r.push(f+"MID".charAt(a&15))}A.push({qname:L,qstart:u,qend:h,tname:M,tstart:i,tend:c,strand:y,extra:{numMatches:t-m,blockLen:t,mappingQual:0,NM:m,cg:r.join("")}})}else if(n>0){const t=n-1;o+=t+1,p+=t,t>0&&e.push(t<<4),e.length>0&&(e[e.length-1]&15)===2?e[e.length-1]+=16:e.push(18)}else{const t=-n-1;o+=t,p+=t+1,t>0&&e.push(t<<4),e.length>0&&(e[e.length-1]&15)===1?e[e.length-1]+=16:e.push(17)}}return!0},E),A}class N extends B{async setupPre(l){return C(await w.fetchAndMaybeUnzip(_.openLocation(this.getConf("deltaLocation"),this.pluginManager),l),l)}}export{N as default};
//# sourceMappingURL=DeltaAdapter-DRx_LR_x.js.map
