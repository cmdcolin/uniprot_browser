{"version":3,"file":"BedpeImport-CXFxt-o5.js","sources":["../../node_modules/@jbrowse/plugin-spreadsheet-view/esm/SpreadsheetView/importAdapters/BedpeImport.js"],"sourcesContent":["import { isNumber } from '@mui/x-data-grid/internals';\nimport { bufferToLines, parseStrand } from './util';\nexport function parseBedPEBuffer(buffer) {\n    var _a;\n    const lines = bufferToLines(buffer);\n    const rest = lines.filter(line => !(line.startsWith('#') ||\n        line.startsWith('browser') ||\n        line.startsWith('track')));\n    const lastHeaderLine = lines.findLast(line => line.startsWith('#'));\n    const coreColumns = [\n        'refName',\n        'start',\n        'end',\n        'mateRef',\n        'mateStart',\n        'mateEnd',\n        'name',\n        'score',\n        'strand',\n        'mateStrand',\n    ];\n    const numExtraColumns = Math.max(0, (((_a = rest[0]) === null || _a === void 0 ? void 0 : _a.split('\\t').length) || 0) - coreColumns.length);\n    const extraNames = (lastHeaderLine === null || lastHeaderLine === void 0 ? void 0 : lastHeaderLine.includes('\\t'))\n        ? lastHeaderLine\n            .slice(1)\n            .split('\\t')\n            .slice(coreColumns.length)\n            .map(t => t.trim())\n        : Array.from({ length: numExtraColumns }, (_v, i) => `field_${i}`);\n    const colNames = [...coreColumns, ...extraNames];\n    return {\n        columns: colNames.map(c => ({ name: c })),\n        rowSet: {\n            rows: rest.map((line, idx) => {\n                const cols = line.split('\\t');\n                return {\n                    cellData: {\n                        refName: cols[0],\n                        start: cols[1],\n                        end: cols[2],\n                        mateRefName: cols[3],\n                        mateStart: cols[4],\n                        mateEnd: cols[5],\n                        name: cols[6],\n                        score: +cols[7] || cols[7],\n                        strand: cols[8],\n                        mateStrand: cols[9],\n                        ...Object.fromEntries(extraNames.map((n, idx) => {\n                            const r = cols[idx + coreColumns.length];\n                            return [n, isNumber(r) ? +r : r];\n                        })),\n                    },\n                    feature: {\n                        uniqueId: `bedpe-${idx}`,\n                        refName: cols[0],\n                        start: +cols[1],\n                        end: +cols[2],\n                        strand: parseStrand(cols[8]),\n                        mate: {\n                            refName: cols[3],\n                            start: +cols[4],\n                            end: +cols[5],\n                            strand: parseStrand(cols[9]),\n                        },\n                        name: cols[6],\n                        score: cols[7],\n                        ...Object.fromEntries(extraNames.map((n, idx) => {\n                            const r = cols[idx + coreColumns.length];\n                            return [n, isNumber(r) ? +r : r];\n                        })),\n                    },\n                };\n            }),\n        },\n    };\n}\n"],"names":["parseBedPEBuffer","buffer","_a","lines","bufferToLines","rest","line","lastHeaderLine","coreColumns","numExtraColumns","extraNames","t","_v","i","c","idx","cols","n","isNumber","parseStrand"],"mappings":"sFAEO,SAASA,EAAiBC,EAAQ,CACrC,IAAIC,EACJ,MAAMC,EAAQC,EAAcH,CAAM,EAC5BI,EAAOF,EAAM,OAAOG,GAAQ,EAAEA,EAAK,WAAW,GAAG,GACnDA,EAAK,WAAW,SAAS,GACzBA,EAAK,WAAW,OAAO,EAAE,EACvBC,EAAiBJ,EAAM,SAASG,GAAQA,EAAK,WAAW,GAAG,CAAC,EAC5DE,EAAc,CAChB,UACA,QACA,MACA,UACA,YACA,UACA,OACA,QACA,SACA,YACR,EACUC,EAAkB,KAAK,IAAI,KAAMP,EAAKG,EAAK,CAAC,KAAO,MAAQH,IAAO,OAAS,OAASA,EAAG,MAAM,GAAI,EAAE,SAAW,GAAKM,EAAY,MAAM,EACrIE,EAA8EH,GAAe,SAAS,GAAI,EAC1GA,EACG,MAAM,CAAC,EACP,MAAM,GAAI,EACV,MAAMC,EAAY,MAAM,EACxB,IAAIG,GAAKA,EAAE,KAAI,CAAE,EACpB,MAAM,KAAK,CAAE,OAAQF,CAAe,EAAI,CAACG,EAAIC,IAAM,SAASA,CAAC,EAAE,EAErE,MAAO,CACH,QAFa,CAAC,GAAGL,EAAa,GAAGE,CAAU,EAEzB,IAAII,IAAM,CAAE,KAAMA,CAAC,EAAG,EACxC,OAAQ,CACJ,KAAMT,EAAK,IAAI,CAACC,EAAMS,IAAQ,CAC1B,MAAMC,EAAOV,EAAK,MAAM,GAAI,EAC5B,MAAO,CACH,SAAU,CACN,QAASU,EAAK,CAAC,EACf,MAAOA,EAAK,CAAC,EACb,IAAKA,EAAK,CAAC,EACX,YAAaA,EAAK,CAAC,EACnB,UAAWA,EAAK,CAAC,EACjB,QAASA,EAAK,CAAC,EACf,KAAMA,EAAK,CAAC,EACZ,MAAO,CAACA,EAAK,CAAC,GAAKA,EAAK,CAAC,EACzB,OAAQA,EAAK,CAAC,EACd,WAAYA,EAAK,CAAC,EAClB,GAAG,OAAO,YAAYN,EAAW,IAAI,CAACO,EAAGF,IAAQ,CAC7C,MAAM,EAAIC,EAAKD,EAAMP,EAAY,MAAM,EACvC,MAAO,CAACS,EAAGC,EAAS,CAAC,EAAI,CAAC,EAAI,CAAC,CACnC,CAAC,CAAC,CAC1B,EACoB,QAAS,CACL,SAAU,SAASH,CAAG,GACtB,QAASC,EAAK,CAAC,EACf,MAAO,CAACA,EAAK,CAAC,EACd,IAAK,CAACA,EAAK,CAAC,EACZ,OAAQG,EAAYH,EAAK,CAAC,CAAC,EAC3B,KAAM,CACF,QAASA,EAAK,CAAC,EACf,MAAO,CAACA,EAAK,CAAC,EACd,IAAK,CAACA,EAAK,CAAC,EACZ,OAAQG,EAAYH,EAAK,CAAC,CAAC,CACvD,EACwB,KAAMA,EAAK,CAAC,EACZ,MAAOA,EAAK,CAAC,EACb,GAAG,OAAO,YAAYN,EAAW,IAAI,CAACO,EAAGF,IAAQ,CAC7C,MAAM,EAAIC,EAAKD,EAAMP,EAAY,MAAM,EACvC,MAAO,CAACS,EAAGC,EAAS,CAAC,EAAI,CAAC,EAAI,CAAC,CACnC,CAAC,CAAC,CAC1B,CACA,CACY,CAAC,CACb,CACA,CACA","x_google_ignoreList":[0]}