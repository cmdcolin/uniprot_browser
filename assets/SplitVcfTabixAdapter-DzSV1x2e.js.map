{"version":3,"file":"SplitVcfTabixAdapter-DzSV1x2e.js","sources":["../../node_modules/@jbrowse/plugin-variants/esm/SplitVcfTabixAdapter/SplitVcfTabixAdapter.js"],"sourcesContent":["import { TabixIndexedFile } from '@gmod/tabix';\nimport VcfParser from '@gmod/vcf';\nimport { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter';\nimport { fetchAndMaybeUnzipText, updateStatus } from '@jbrowse/core/util';\nimport { openLocation } from '@jbrowse/core/util/io';\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs';\nimport VcfFeature from '../VcfFeature';\nexport default class SplitVcfTabixAdapter extends BaseFeatureDataAdapter {\n    async configurePre(refName) {\n        const indexType = this.getConf('indexType');\n        const vcfGzLocation = this.getConf('vcfGzLocationMap')[refName];\n        const indexLocation = this.getConf('indexLocationMap')[refName] || {\n            uri: `${vcfGzLocation.uri}.${indexType.toLowerCase()}`,\n        };\n        const filehandle = openLocation(vcfGzLocation, this.pluginManager);\n        const isCSI = indexType === 'CSI';\n        const vcf = new TabixIndexedFile({\n            filehandle,\n            csiFilehandle: isCSI\n                ? openLocation(indexLocation, this.pluginManager)\n                : undefined,\n            tbiFilehandle: !isCSI\n                ? openLocation(indexLocation, this.pluginManager)\n                : undefined,\n            chunkCacheSize: 50 * 2 ** 20,\n        });\n        return {\n            vcf,\n            parser: new VcfParser({\n                header: await vcf.getHeader(),\n            }),\n        };\n    }\n    async configure(refName, opts) {\n        const { statusCallback = () => { } } = opts || {};\n        return updateStatus('Downloading index', statusCallback, () => this.configurePre(refName));\n    }\n    async getRefNames() {\n        return Object.keys(this.getConf('vcfGzLocationMap'));\n    }\n    getFeatures(query, opts = {}) {\n        return ObservableCreate(async (observer) => {\n            const { refName, start, end } = query;\n            const { statusCallback = () => { } } = opts;\n            const { vcf, parser } = await this.configure(query.refName, opts);\n            await updateStatus('Downloading variants', statusCallback, () => vcf.getLines(refName, start, end, {\n                lineCallback: (line, fileOffset) => {\n                    observer.next(new VcfFeature({\n                        variant: parser.parseLine(line),\n                        parser,\n                        id: `${this.id}-vcf-${fileOffset}`,\n                    }));\n                },\n                ...opts,\n            }));\n            observer.complete();\n        }, opts.stopToken);\n    }\n    async getSources() {\n        const conf = this.getConf('samplesTsvLocation');\n        const r = Object.keys(this.getConf('vcfGzLocationMap'))[0];\n        if (conf.uri === '' || conf.uri === '/path/to/samples.tsv') {\n            const { parser } = await this.configure(r);\n            return parser.samples.map(name => ({\n                name,\n            }));\n        }\n        else {\n            const txt = await fetchAndMaybeUnzipText(openLocation(conf, this.pluginManager));\n            const lines = txt.split(/\\n|\\r\\n|\\r/);\n            const header = lines[0].split('\\t');\n            const { parser } = await this.configure(r);\n            const s = new Set(parser.samples);\n            return lines\n                .slice(1)\n                .map(line => {\n                const cols = line.split('\\t');\n                return {\n                    name: cols[0],\n                    ...Object.fromEntries(cols.slice(1).map((c, idx) => [header[idx + 1], c])),\n                };\n            })\n                .filter(f => s.has(f.name));\n        }\n    }\n}\n"],"names":["SplitVcfTabixAdapter","BaseFeatureDataAdapter","refName","indexType","vcfGzLocation","indexLocation","filehandle","openLocation","isCSI","vcf","TabixIndexedFile","VcfParser","opts","statusCallback","updateStatus","query","ObservableCreate","observer","start","end","parser","line","fileOffset","VcfFeature","conf","r","name","lines","fetchAndMaybeUnzipText","header","s","cols","c","idx","f"],"mappings":"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","x_google_ignoreList":[0]}