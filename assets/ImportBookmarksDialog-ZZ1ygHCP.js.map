{"version":3,"file":"ImportBookmarksDialog-ZZ1ygHCP.js","sources":["../../node_modules/@jbrowse/plugin-grid-bookmark/esm/GridBookmarkWidget/components/dialogs/ImportBookmarksDialog.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { AssemblySelector, Dialog, ErrorMessage, FileSelector, } from '@jbrowse/core/ui';\nimport { getSession } from '@jbrowse/core/util';\nimport { openLocation } from '@jbrowse/core/util/io';\nimport { isSessionWithShareURL } from '@jbrowse/core/util/types';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ImportIcon from '@mui/icons-material/Publish';\nimport { Accordion, AccordionDetails, AccordionSummary, Button, DialogActions, DialogContent, TextField, Typography, } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nimport { readSessionFromDynamo } from '../../sessionSharing';\nimport { fromUrlSafeB64 } from '../../utils';\nconst useStyles = makeStyles()(theme => ({\n    expandIcon: {\n        color: theme.palette.tertiary.contrastText || '#fff',\n    },\n    minWidth: {\n        minWidth: 500,\n    },\n}));\nasync function getBookmarksFromShareLink(shareLink, shareURL) {\n    const defaultURL = 'https://share.jbrowse.org/api/v1/';\n    const urlParams = new URL(shareLink);\n    const sessionQueryParam = urlParams.searchParams.get('bookmarks');\n    const password = urlParams.searchParams.get('password');\n    const decryptedSession = await readSessionFromDynamo(`${shareURL !== null && shareURL !== void 0 ? shareURL : defaultURL}load`, sessionQueryParam || '', password || '');\n    const sharedSession = JSON.parse(await fromUrlSafeB64(decryptedSession));\n    return sharedSession.sharedBookmarks;\n}\nfunction guessFileType(header) {\n    return header.startsWith('chrom') && header.includes('assembly_name')\n        ? 'TSV'\n        : 'BED';\n}\nasync function getBookmarksFromTSVFile(lines) {\n    if (lines[0].startsWith('chrom')) {\n        lines = lines.slice(1);\n    }\n    return lines\n        .filter(f => !f.startsWith('#'))\n        .map(line => {\n        const [refName, start, end, label, assemblyName] = line.split('\\t');\n        return {\n            assemblyName: assemblyName,\n            refName: refName,\n            start: +start,\n            end: +end,\n            label: label === '.' ? undefined : label,\n        };\n    });\n}\nasync function getBookmarksFromBEDFile(lines, selectedAsm) {\n    return lines\n        .filter(f => !f.startsWith('#'))\n        .map(line => {\n        const [refName, start, end, label] = line.split('\\t');\n        return {\n            assemblyName: selectedAsm,\n            refName: refName,\n            start: +start,\n            end: +end,\n            label: label === '.' ? undefined : label,\n        };\n    });\n}\nconst ImportBookmarksDialog = observer(function ({ onClose, model, }) {\n    const { classes } = useStyles();\n    const [location, setLocation] = useState();\n    const [error, setError] = useState();\n    const [shareLink, setShareLink] = useState('');\n    const session = getSession(model);\n    const { assemblyNames } = session;\n    const [selectedAsm, setSelectedAsm] = useState(assemblyNames[0]);\n    const [expanded, setExpanded] = useState('shareLinkAccordion');\n    return (_jsxs(Dialog, { open: true, onClose: onClose, maxWidth: \"xl\", title: \"Import bookmarks\", children: [_jsxs(DialogContent, { className: classes.minWidth, children: [_jsxs(Accordion, { expanded: expanded === 'shareLinkAccordion', onChange: () => {\n                            setExpanded('shareLinkAccordion');\n                        }, children: [_jsx(AccordionSummary, { expandIcon: _jsx(ExpandMoreIcon, { className: classes.expandIcon }), children: _jsx(Typography, { style: { display: 'flex', alignItems: 'center', gap: '5px' }, children: \"Import from share link\" }) }), _jsxs(AccordionDetails, { children: [_jsx(Typography, { children: \"Paste a bookmark share link generated by the 'Share' button from the bookmarks widget\" }), _jsx(TextField, { label: \"Enter Share URL\", variant: \"outlined\", fullWidth: true, value: shareLink, onChange: e => {\n                                            setShareLink(e.target.value);\n                                        } })] })] }), _jsxs(Accordion, { expanded: expanded === 'fileAccordion', onChange: () => {\n                            setExpanded('fileAccordion');\n                        }, children: [_jsx(AccordionSummary, { expandIcon: _jsx(ExpandMoreIcon, { className: classes.expandIcon }), children: _jsx(Typography, { children: \"Import from file\" }) }), _jsxs(AccordionDetails, { children: [_jsx(FileSelector, { location: location, setLocation: setLocation, name: \"File\", description: `Choose a BED or TSV format file to import. Required TSV column headers are \"chrom, start, end, label, assembly_name\".` }), _jsx(AssemblySelector, { onChange: val => {\n                                            setSelectedAsm(val);\n                                        }, helperText: 'Select the assembly for BED file.', session: session, selected: selectedAsm })] })] }), error ? _jsx(ErrorMessage, { error: error }) : null] }), _jsxs(DialogActions, { children: [_jsx(Button, { variant: \"contained\", color: \"secondary\", onClick: onClose, children: \"Cancel\" }), _jsx(Button, { \"data-testid\": \"dialogImport\", variant: \"contained\", color: \"primary\", disabled: !location && !shareLink, startIcon: _jsx(ImportIcon, {}), onClick: async () => {\n                            try {\n                                if (expanded === 'fileAccordion' && location) {\n                                    const data = await openLocation(location).readFile('utf8');\n                                    const lines = data.split(/\\n|\\r\\n|\\r/).filter(f => !!f.trim());\n                                    const fileType = guessFileType(lines[0]);\n                                    if (fileType === 'BED') {\n                                        model.importBookmarks(await getBookmarksFromBEDFile(lines, selectedAsm));\n                                    }\n                                    else {\n                                        model.importBookmarks(await getBookmarksFromTSVFile(lines));\n                                    }\n                                }\n                                else if (expanded === 'shareLinkAccordion' &&\n                                    shareLink &&\n                                    isSessionWithShareURL(session)) {\n                                    model.importBookmarks(await getBookmarksFromShareLink(shareLink, session.shareURL));\n                                }\n                                onClose();\n                            }\n                            catch (e) {\n                                console.error(e);\n                                setError(e);\n                            }\n                        }, children: \"Import\" })] })] }));\n});\nexport default ImportBookmarksDialog;\n"],"names":["useStyles","makeStyles","theme","getBookmarksFromShareLink","shareLink","shareURL","defaultURL","urlParams","sessionQueryParam","password","decryptedSession","readSessionFromDynamo","fromUrlSafeB64","guessFileType","header","getBookmarksFromTSVFile","lines","f","line","refName","start","end","label","assemblyName","getBookmarksFromBEDFile","selectedAsm","ImportBookmarksDialog","observer","onClose","model","classes","location","setLocation","useState","error","setError","setShareLink","session","getSession","assemblyNames","setSelectedAsm","expanded","setExpanded","_jsxs","Dialog","DialogContent","Accordion","_jsx","AccordionSummary","ExpandMoreIcon","Typography","AccordionDetails","TextField","e","FileSelector","AssemblySelector","val","ErrorMessage","DialogActions","Button","ImportIcon","openLocation","isSessionWithShareURL"],"mappings":"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","x_google_ignoreList":[0]}