import{b as N,p as f}from"./util-B4Mu3MiR.js";import{i as u}from"./utils-DSyQ0Yxy.js";function E(p){var n;const l=N(p),d=l.filter(e=>!(e.startsWith("#")||e.startsWith("browser")||e.startsWith("track"))),s=l.findLast(e=>e.startsWith("#")),a=["refName","start","end","mateRef","mateStart","mateEnd","name","score","strand","mateStrand"],h=Math.max(0,(((n=d[0])===null||n===void 0?void 0:n.split("	").length)||0)-a.length),m=s?.includes("	")?s.slice(1).split("	").slice(a.length).map(e=>e.trim()):Array.from({length:h},(e,o)=>`field_${o}`);return{columns:[...a,...m].map(e=>({name:e})),rowSet:{rows:d.map((e,o)=>{const t=e.split("	");return{cellData:{refName:t[0],start:t[1],end:t[2],mateRefName:t[3],mateStart:t[4],mateEnd:t[5],name:t[6],score:+t[7]||t[7],strand:t[8],mateStrand:t[9],...Object.fromEntries(m.map((i,c)=>{const r=t[c+a.length];return[i,u(r)?+r:r]}))},feature:{uniqueId:`bedpe-${o}`,refName:t[0],start:+t[1],end:+t[2],strand:f(t[8]),mate:{refName:t[3],start:+t[4],end:+t[5],strand:f(t[9])},name:t[6],score:t[7],...Object.fromEntries(m.map((i,c)=>{const r=t[c+a.length];return[i,u(r)?+r:r]}))}}})}}}export{E as parseBedPEBuffer};
//# sourceMappingURL=BedpeImport-DAnMV2Rl.js.map
