{"version":3,"mappings":"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","names":["getValidReactChildren","children","React.Children","child","React.isValidElement","getToggleButtonGroupUtilityClass","slot","generateUtilityClass","toggleButtonGroupClasses","generateUtilityClasses","useUtilityClasses","ownerState","classes","orientation","fullWidth","disabled","slots","capitalize","composeClasses","ToggleButtonGroupRoot","styled","props","styles","memoTheme","theme","toggleButtonClasses","ToggleButtonGroup","React.forwardRef","inProps","ref","useDefaultProps","className","color","exclusive","onChange","size","value","other","handleChange","React.useCallback","event","buttonValue","index","newValue","handleExclusiveChange","context","React.useMemo","validChildren","childrenCount","getButtonPositionClassName","isFirstButton","isLastButton","clsx","_jsx","ToggleButtonGroupContext","ToggleButtonGroupButtonContext","AltFormatter","show","setShow","useState","getMinimalDesc","_jsxs","Formatter","copied","setCopied","display","_Fragment","copy","val","Checkbox2","checked","label","FormControlLabel","Checkbox","Typography","toP","n","VariantGenotypeFrequencyTable","rows","useCounts","setUseCounts","summary","row","alleleCounts","alleles","allele","key","gt","gridRows","widths","e","measureGridWidth","r","_","DataGridFlexContainer","DataGrid","SampleFilters","columns","filter","setFilter","field","TextField","getSampleGridRows","samples","REF","ALT","preFilteredRows","_a","makeSimpleAltString","error","filters","formatField","formatValue","currFilter","VariantSampleGrid","feature","descriptions","columnDisplayMode","setColumnDisplayMode","showFilters","setShowFilters","colKeySet","keys","_b","s1","s2","BaseCard","ErrorBoundary","ErrorMessage","ToggleButton","f","variantFieldDescriptions","LaunchBreakendPanel","lazy","__vitePreload","VariantConsequenceDataGrid","AnnPanel","_c","_d","_e","annDesc","annFields","ann","CsqPanel","csqDescription","csqFields","csq","LaunchBreakendWidgetArea","model","featureData","feat","type","alt","parseBreakend","FeatDefined","observer","rest","Paper","FeatureDetails","Suspense","VariantFeatureWidget"],"ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11],"sources":["../../node_modules/@mui/utils/esm/getValidReactChildren/getValidReactChildren.js","../../node_modules/@mui/material/esm/ToggleButtonGroup/toggleButtonGroupClasses.js","../../node_modules/@mui/material/esm/ToggleButtonGroup/ToggleButtonGroup.js","../../node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/AltFormatter.js","../../node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/Formatter.js","../../node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/Checkbox2.js","../../node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/VariantSampleGrid/VariantGenotypeFrequencyTable.js","../../node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/VariantSampleGrid/VariantSampleFilters.js","../../node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/VariantSampleGrid/getSampleGridRows.js","../../node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/VariantSampleGrid/VariantSampleGrid.js","../../node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/variantFieldDescriptions.js","../../node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/VariantFeatureWidget.js"],"sourcesContent":["import * as React from 'react';\n\n/**\n * Gets only the valid children of a component,\n * and ignores any nullish or falsy child.\n *\n * @param children the children\n */\nexport default function getValidReactChildren(children) {\n  return React.Children.toArray(children).filter(child => /*#__PURE__*/React.isValidElement(child));\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getToggleButtonGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButtonGroup', slot);\n}\nconst toggleButtonGroupClasses = generateUtilityClasses('MuiToggleButtonGroup', ['root', 'selected', 'horizontal', 'vertical', 'disabled', 'grouped', 'groupedHorizontal', 'groupedVertical', 'fullWidth', 'firstButton', 'lastButton', 'middleButton']);\nexport default toggleButtonGroupClasses;","'use client';\n\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport getValidReactChildren from '@mui/utils/getValidReactChildren';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport toggleButtonGroupClasses, { getToggleButtonGroupUtilityClass } from \"./toggleButtonGroupClasses.js\";\nimport ToggleButtonGroupContext from \"./ToggleButtonGroupContext.js\";\nimport ToggleButtonGroupButtonContext from \"./ToggleButtonGroupButtonContext.js\";\nimport toggleButtonClasses from \"../ToggleButton/toggleButtonClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation,\n    fullWidth,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation, fullWidth && 'fullWidth'],\n    grouped: ['grouped', `grouped${capitalize(orientation)}`, disabled && 'disabled'],\n    firstButton: ['firstButton'],\n    lastButton: ['lastButton'],\n    middleButton: ['middleButton']\n  };\n  return composeClasses(slots, getToggleButtonGroupUtilityClass, classes);\n};\nconst ToggleButtonGroupRoot = styled('div', {\n  name: 'MuiToggleButtonGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles.grouped\n    }, {\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.orientation)}`]\n    }, {\n      [`& .${toggleButtonGroupClasses.firstButton}`]: styles.firstButton\n    }, {\n      [`& .${toggleButtonGroupClasses.lastButton}`]: styles.lastButton\n    }, {\n      [`& .${toggleButtonGroupClasses.middleButton}`]: styles.middleButton\n    }, styles.root, ownerState.orientation === 'vertical' && styles.vertical, ownerState.fullWidth && styles.fullWidth];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'inline-flex',\n  borderRadius: (theme.vars || theme).shape.borderRadius,\n  variants: [{\n    props: {\n      orientation: 'vertical'\n    },\n    style: {\n      flexDirection: 'column',\n      [`& .${toggleButtonGroupClasses.grouped}`]: {\n        [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\n          borderTop: 0,\n          marginTop: 0\n        }\n      },\n      [`& .${toggleButtonGroupClasses.firstButton},& .${toggleButtonGroupClasses.middleButton}`]: {\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0\n      },\n      [`& .${toggleButtonGroupClasses.lastButton},& .${toggleButtonGroupClasses.middleButton}`]: {\n        marginTop: -1,\n        borderTop: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n      },\n      [`& .${toggleButtonGroupClasses.lastButton}.${toggleButtonClasses.disabled},& .${toggleButtonGroupClasses.middleButton}.${toggleButtonClasses.disabled}`]: {\n        borderTop: '1px solid transparent'\n      }\n    }\n  }, {\n    props: {\n      fullWidth: true\n    },\n    style: {\n      width: '100%'\n    }\n  }, {\n    props: {\n      orientation: 'horizontal'\n    },\n    style: {\n      [`& .${toggleButtonGroupClasses.grouped}`]: {\n        [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\n          borderLeft: 0,\n          marginLeft: 0\n        }\n      },\n      [`& .${toggleButtonGroupClasses.firstButton},& .${toggleButtonGroupClasses.middleButton}`]: {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      },\n      [`& .${toggleButtonGroupClasses.lastButton},& .${toggleButtonGroupClasses.middleButton}`]: {\n        marginLeft: -1,\n        borderLeft: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      [`& .${toggleButtonGroupClasses.lastButton}.${toggleButtonClasses.disabled},& .${toggleButtonGroupClasses.middleButton}.${toggleButtonClasses.disabled}`]: {\n        borderLeft: '1px solid transparent'\n      }\n    }\n  }]\n})));\nconst ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function ToggleButtonGroup(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiToggleButtonGroup'\n  });\n  const {\n    children,\n    className,\n    color = 'standard',\n    disabled = false,\n    exclusive = false,\n    fullWidth = false,\n    onChange,\n    orientation = 'horizontal',\n    size = 'medium',\n    value,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    disabled,\n    fullWidth,\n    orientation,\n    size\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback((event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n    const index = value && value.indexOf(buttonValue);\n    let newValue;\n    if (value && index >= 0) {\n      newValue = value.slice();\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? value.concat(buttonValue) : [buttonValue];\n    }\n    onChange(event, newValue);\n  }, [onChange, value]);\n  const handleExclusiveChange = React.useCallback((event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n    onChange(event, value === buttonValue ? null : buttonValue);\n  }, [onChange, value]);\n  const context = React.useMemo(() => ({\n    className: classes.grouped,\n    onChange: exclusive ? handleExclusiveChange : handleChange,\n    value,\n    size,\n    fullWidth,\n    color,\n    disabled\n  }), [classes.grouped, exclusive, handleExclusiveChange, handleChange, value, size, fullWidth, color, disabled]);\n  const validChildren = getValidReactChildren(children);\n  const childrenCount = validChildren.length;\n  const getButtonPositionClassName = index => {\n    const isFirstButton = index === 0;\n    const isLastButton = index === childrenCount - 1;\n    if (isFirstButton && isLastButton) {\n      return '';\n    }\n    if (isFirstButton) {\n      return classes.firstButton;\n    }\n    if (isLastButton) {\n      return classes.lastButton;\n    }\n    return classes.middleButton;\n  };\n  return /*#__PURE__*/_jsx(ToggleButtonGroupRoot, {\n    role: \"group\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    ...other,\n    children: /*#__PURE__*/_jsx(ToggleButtonGroupContext.Provider, {\n      value: context,\n      children: validChildren.map((child, index) => {\n        if (process.env.NODE_ENV !== 'production') {\n          if (isFragment(child)) {\n            console.error([\"MUI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n          }\n        }\n        return /*#__PURE__*/_jsx(ToggleButtonGroupButtonContext.Provider, {\n          value: getButtonPositionClassName(index),\n          children: child\n        }, index);\n      })\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the button when it is selected.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'standard'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled. This implies that all ToggleButton children will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, only allow one of the child ToggleButton values to be selected.\n   * @default false\n   */\n  exclusive: PropTypes.bool,\n  /**\n   * If `true`, the button group will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected buttons. When `exclusive` is true\n   * this is a single value; when false an array of selected values. If no value\n   * is selected and `exclusive` is true the value is null; when false an empty array.\n   */\n  onChange: PropTypes.func,\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The currently selected value within the group or an array of selected\n   * values when `exclusive` is false.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default ToggleButtonGroup;","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { getMinimalDesc } from '../VcfFeature/util';\nexport default function AltFormatter({ value, ref, }) {\n    const [show, setShow] = useState(false);\n    const alt = getMinimalDesc(ref, value);\n    return alt !== value ? (_jsxs(\"div\", { children: [_jsx(\"button\", { onClick: () => {\n                    setShow(!show);\n                }, children: show ? 'Show simplified ALT' : 'Show raw ALT' }), ' ', show ? value : getMinimalDesc(ref, value)] })) : (value);\n}\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport copy from 'copy-to-clipboard';\nexport default function Formatter({ value }) {\n    const [show, setShow] = useState(false);\n    const [copied, setCopied] = useState(false);\n    const display = String(value);\n    return display.length > 100 ? (_jsxs(_Fragment, { children: [_jsx(\"button\", { type: \"button\", onClick: () => {\n                    copy(display);\n                    setCopied(true);\n                    setTimeout(() => {\n                        setCopied(false);\n                    }, 700);\n                }, children: copied ? 'Copied to clipboard' : 'Copy' }), _jsx(\"button\", { type: \"button\", onClick: () => {\n                    setShow(val => !val);\n                }, children: show ? 'Show less' : 'Show more' }), _jsx(\"div\", { children: show ? display : `${display.slice(0, 100)}...` })] })) : (_jsx(\"div\", { children: display }));\n}\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Checkbox, FormControlLabel, Typography } from '@mui/material';\nexport default function Checkbox2({ checked, disabled, label, onChange, }) {\n    return (_jsx(FormControlLabel, { disabled: disabled, control: _jsx(Checkbox, { checked: checked, onChange: onChange }), label: _jsx(Typography, { variant: \"body2\", children: label }) }));\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport DataGridFlexContainer from '@jbrowse/core/ui/DataGridFlexContainer';\nimport { measureGridWidth } from '@jbrowse/core/util';\nimport { Checkbox, FormControlLabel, Typography } from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nfunction toP(n) {\n    return n.toPrecision(3);\n}\nexport default function VariantGenotypeFrequencyTable({ rows, }) {\n    const [useCounts, setUseCounts] = useState(false);\n    const summary = {};\n    if (!useCounts) {\n        for (const row of rows) {\n            const gt = row.GT;\n            if (!summary[gt]) {\n                summary[gt] = {\n                    count: 0,\n                    GT: row.GT,\n                    genotype: row.genotype,\n                };\n            }\n            summary[gt].count++;\n        }\n    }\n    else {\n        for (const row of rows) {\n            const alleleCounts = {};\n            const alleles = row.GT.split(/[/|]/);\n            for (const allele of alleles) {\n                alleleCounts[allele] = (alleleCounts[allele] || 0) + 1;\n            }\n            const key = Object.entries(alleleCounts)\n                .map(([key, val]) => `${key}:${val}`)\n                .join(';');\n            if (!summary[key]) {\n                summary[key] = {\n                    count: 0,\n                    GT: key,\n                    genotype: row.genotype,\n                };\n            }\n            summary[key].count++;\n        }\n    }\n    const gridRows = Object.entries(summary).map(([key, val]) => ({\n        id: key,\n        ...val,\n        count: `${val.count} / ${rows.length}`,\n        frequency: `${toP((val.count / rows.length) * 100)}%`,\n    }));\n    const keys = gridRows[0] ? Object.keys(gridRows[0]) : [];\n    const widths = keys.map(e => measureGridWidth(gridRows.map(r => `${r[e]}`)));\n    return (_jsxs(\"div\", { children: [_jsx(FormControlLabel, { control: _jsx(Checkbox, { checked: useCounts }), label: _jsx(Typography, { variant: \"body2\", children: \"Use allele counts instead of exact GT\" }), onChange: (_, checked) => {\n                    setUseCounts(checked);\n                } }), _jsx(DataGridFlexContainer, { children: _jsx(DataGrid, { rows: gridRows, hideFooter: true, rowHeight: 25, columnHeaderHeight: 35, columns: [\n                        {\n                            field: 'GT',\n                            width: widths[0],\n                        },\n                        {\n                            field: 'count',\n                            width: widths[1],\n                        },\n                        {\n                            field: 'frequency',\n                            width: widths[2],\n                        },\n                        {\n                            field: 'genotype',\n                            width: widths[3],\n                        },\n                    ] }) })] }));\n}\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { TextField, Typography } from '@mui/material';\nexport default function SampleFilters({ columns, filter, setFilter, }) {\n    return (_jsxs(_Fragment, { children: [_jsx(Typography, { children: \"These filters can use a plain text search or regex style query, e.g. in the genotype field, entering 1 will query for all genotypes that include the first alternate allele e.g. 0|1 or 1|1, entering [1-9]\\\\d* will find any non-zero allele e.g. 0|2 or 2/33\" }), columns.map(({ field }) => (_jsx(TextField, { placeholder: `Filter ${field}`, value: filter[field] || '', onChange: event => {\n                    setFilter({ ...filter, [field]: event.target.value });\n                } }, `filter-${field}`)))] }));\n}\n","import { makeSimpleAltString } from '../../VcfFeature/util';\nexport function getSampleGridRows(samples, REF, ALT, filter) {\n    const preFilteredRows = Object.entries(samples).map(([key, val]) => {\n        var _a;\n        const gt = (_a = val.GT) === null || _a === void 0 ? void 0 : _a[0];\n        return [\n            key,\n            {\n                ...val,\n                ...(gt\n                    ? {\n                        GT: `${gt}`,\n                        genotype: makeSimpleAltString(`${gt}`, REF, ALT),\n                    }\n                    : {}),\n            },\n        ];\n    });\n    let error;\n    let rows = [];\n    const filters = Object.keys(filter);\n    try {\n        rows = preFilteredRows\n            .map(([key, val]) => {\n            return {\n                ...Object.fromEntries(Object.entries(val).map(([formatField, formatValue]) => [\n                    formatField,\n                    formatValue,\n                ])),\n                sample: key,\n                id: key,\n            };\n        })\n            .filter(row => filters.length\n            ? filters.every(key => {\n                const currFilter = filter[key];\n                return currFilter\n                    ? new RegExp(currFilter, 'i').exec(row[key])\n                    : true;\n            })\n            : true);\n    }\n    catch (e) {\n        console.error(e);\n        error = e;\n    }\n    return { rows, error };\n}\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard';\nimport { ErrorMessage } from '@jbrowse/core/ui';\nimport DataGridFlexContainer from '@jbrowse/core/ui/DataGridFlexContainer';\nimport { ErrorBoundary } from '@jbrowse/core/ui/ErrorBoundary';\nimport { measureGridWidth } from '@jbrowse/core/util';\nimport { ToggleButton, ToggleButtonGroup, Typography } from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport Checkbox2 from '../Checkbox2';\nimport VariantGenotypeFrequencyTable from './VariantGenotypeFrequencyTable';\nimport SampleFilters from './VariantSampleFilters';\nimport { getSampleGridRows } from './getSampleGridRows';\nexport default function VariantSampleGrid(props) {\n    const { feature, descriptions = {} } = props;\n    const [filter, setFilter] = useState({});\n    const [columnDisplayMode, setColumnDisplayMode] = useState('all');\n    const [showFilters, setShowFilters] = useState(false);\n    const samples = (feature.samples || {});\n    const ALT = feature.ALT;\n    const REF = feature.REF;\n    const { rows, error } = getSampleGridRows(samples, REF, ALT, filter);\n    const colKeySet = new Set(['sample', ...Object.keys(rows[0] || {})]);\n    colKeySet.delete('id');\n    const keys = [...colKeySet];\n    const widths = keys.map(e => measureGridWidth(rows.map(r => r[e])));\n    const columns = keys.map((field, index) => {\n        var _a, _b;\n        return ({\n            field,\n            description: (_b = (_a = descriptions === null || descriptions === void 0 ? void 0 : descriptions.FORMAT) === null || _a === void 0 ? void 0 : _a[field]) === null || _b === void 0 ? void 0 : _b.Description,\n            width: widths[index],\n        });\n    });\n    const s1 = new Set(['sample', 'GT']);\n    const s2 = new Set(['sample', 'GT', 'genotype']);\n    return !rows.length ? null : (_jsxs(_Fragment, { children: [_jsx(BaseCard, { ...props, title: \"Genotype frequencies\", children: _jsx(ErrorBoundary, { FallbackComponent: ErrorMessage, children: _jsx(VariantGenotypeFrequencyTable, { rows: rows }) }) }), _jsxs(BaseCard, { ...props, title: \"Samples\", children: [error ? _jsx(Typography, { color: \"error\", children: `${error}` }) : null, _jsxs(\"div\", { children: [_jsx(Checkbox2, { label: \"Show filters\", checked: showFilters, onChange: event => {\n                                    setShowFilters(event.target.checked);\n                                } }), _jsxs(ToggleButtonGroup, { value: columnDisplayMode, exclusive: true, size: \"small\", onChange: (_, newValue) => {\n                                    if (newValue !== null) {\n                                        setColumnDisplayMode(newValue);\n                                    }\n                                }, children: [_jsx(ToggleButton, { value: \"all\", children: \"All\" }), _jsx(ToggleButton, { value: \"gtOnly\", children: \"GT only\" }), _jsx(ToggleButton, { value: \"genotypeOnly\", children: \"GT+resolved genotype\" })] })] }), showFilters ? (_jsx(SampleFilters, { setFilter: setFilter, columns: columns, filter: filter })) : null, _jsx(DataGridFlexContainer, { children: _jsx(DataGrid, { rows: rows, hideFooter: rows.length < 100, columns: columnDisplayMode === 'gtOnly'\n                                ? columns.filter(f => s1.has(f.field))\n                                : columnDisplayMode === 'genotypeOnly'\n                                    ? columns.filter(f => s2.has(f.field))\n                                    : columns, rowHeight: 25, columnHeaderHeight: 35, showToolbar: true }) })] })] }));\n}\n","export const variantFieldDescriptions = {\n    CHROM: 'chromosome: An identifier from the reference genome',\n    POS: 'position: The reference position, with the 1st base having position 1',\n    ID: 'identifier: Semi-colon separated list of unique identifiers where available',\n    REF: 'reference base(s): Each base must be one of A,C,G,T,N (case insensitive).',\n    ALT: 'alternate base(s): Comma-separated list of alternate non-reference alleles',\n    QUAL: 'quality: Phred-scaled quality score for the assertion made in ALT',\n    FILTER: 'filter status: PASS if this position has passed all filters, otherwise a semicolon-separated list of codes for filters that fail',\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Suspense, lazy } from 'react';\nimport { parseBreakend } from '@gmod/vcf';\nimport FeatureDetails from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/FeatureDetails';\nimport { Paper } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport AltFormatter from './AltFormatter';\nimport Formatter from './Formatter';\nimport VariantSampleGrid from './VariantSampleGrid/VariantSampleGrid';\nimport { variantFieldDescriptions } from './variantFieldDescriptions';\nconst LaunchBreakendPanel = lazy(() => import('./LaunchBreakendPanel/LaunchBreakendPanel'));\nconst VariantConsequenceDataGrid = lazy(() => import('./VariantConsequence/VariantConsequenceDataGrid'));\nfunction AnnPanel({ descriptions, feature, }) {\n    var _a, _b, _c, _d, _e;\n    const annDesc = (_b = (_a = descriptions === null || descriptions === void 0 ? void 0 : descriptions.INFO) === null || _a === void 0 ? void 0 : _a.ANN) === null || _b === void 0 ? void 0 : _b.Description;\n    const annFields = ((_d = (_c = annDesc === null || annDesc === void 0 ? void 0 : annDesc.match(/.*Functional annotations:'(.*)'$/)) === null || _c === void 0 ? void 0 : _c[1]) === null || _d === void 0 ? void 0 : _d.split('|')) || [];\n    const ann = ((_e = feature.INFO) === null || _e === void 0 ? void 0 : _e.ANN) || [];\n    return (_jsx(VariantConsequenceDataGrid, { fields: annFields, data: ann, title: \"Variant ANN field\" }));\n}\nfunction CsqPanel({ descriptions, feature, }) {\n    var _a, _b, _c, _d, _e;\n    const csqDescription = (_b = (_a = descriptions === null || descriptions === void 0 ? void 0 : descriptions.INFO) === null || _a === void 0 ? void 0 : _a.CSQ) === null || _b === void 0 ? void 0 : _b.Description;\n    const csqFields = ((_d = (_c = csqDescription === null || csqDescription === void 0 ? void 0 : csqDescription.match(/.*Format: (.*)/)) === null || _c === void 0 ? void 0 : _c[1]) === null || _d === void 0 ? void 0 : _d.split('|')) || [];\n    const csq = ((_e = feature.INFO) === null || _e === void 0 ? void 0 : _e.CSQ) || [];\n    return (_jsx(VariantConsequenceDataGrid, { fields: csqFields, data: csq, title: \"Variant CSQ field\" }));\n}\nfunction LaunchBreakendWidgetArea({ model, }) {\n    const { featureData } = model;\n    const feat = JSON.parse(JSON.stringify(featureData));\n    const { type = '' } = feat;\n    return type === 'breakend' ? (_jsx(LaunchBreakendPanel, { feature: feat, locStrings: feat.ALT.map((alt) => { var _a; return ((_a = parseBreakend(alt)) === null || _a === void 0 ? void 0 : _a.MatePosition) || ''; }), model: model })) : type === 'translocation' ? (_jsx(LaunchBreakendPanel, { feature: feat, model: model, locStrings: [`${feat.INFO.CHR2[0]}:${feat.INFO.END}`] })) : type === 'paired_feature' ? (_jsx(LaunchBreakendPanel, { feature: feat, model: model, locStrings: [`${feat.mate.refName}:${feat.mate.start}`] })) : type.includes('inversion') ||\n        type.includes('deletion') ||\n        type.includes('duplication') ||\n        type.includes('cnv') ||\n        type.includes('sv') ? (_jsx(LaunchBreakendPanel, { feature: {\n            uniqueId: 'random',\n            refName: feat.refName,\n            start: feat.start,\n            end: feat.start + 1,\n            mate: {\n                refName: feat.refName,\n                start: feat.end,\n                end: feat.end + 1,\n            },\n        }, model: model, locStrings: [`${feat.refName}:${feat.end}`] })) : null;\n}\nconst FeatDefined = observer(function (props) {\n    const { feat, model } = props;\n    const { descriptions } = model;\n    const { samples, ...rest } = feat;\n    const { REF } = rest;\n    return (_jsxs(Paper, { \"data-testid\": \"variant-side-drawer\", children: [_jsx(FeatureDetails, { feature: rest, descriptions: {\n                    ...variantFieldDescriptions,\n                    ...descriptions,\n                }, formatter: (value, key) => {\n                    return key === 'ALT' ? (_jsx(AltFormatter, { value: `${value}`, ref: REF })) : (_jsx(Formatter, { value: value }));\n                }, ...props }), _jsxs(Suspense, { fallback: null, children: [_jsx(CsqPanel, { feature: rest, descriptions: descriptions }), _jsx(AnnPanel, { feature: rest, descriptions: descriptions }), _jsx(LaunchBreakendWidgetArea, { model: model })] }), _jsx(VariantSampleGrid, { feature: feat, ...props, descriptions: descriptions })] }));\n});\nconst VariantFeatureWidget = observer(function (props) {\n    const { model } = props;\n    const { featureData } = model;\n    const feat = structuredClone(featureData);\n    return feat ? (_jsx(FeatDefined, { feat: feat, ...props })) : (_jsx(\"div\", { children: \"No feature loaded, may not be available after page refresh because it was too large for localStorage\" }));\n});\nexport default VariantFeatureWidget;\n"],"file":"VariantFeatureWidget-CjtB8Lll.js"}