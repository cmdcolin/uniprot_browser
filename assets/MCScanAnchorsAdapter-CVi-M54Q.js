import{B as A}from"./index-D3TbvS_u.js";import{ag as h,u as N}from"./index-DPMJgfAS.js";import{r as P}from"./rxjs-DiVqhxS9.js";import{r as F,p as x}from"./util-66Cgxenk.js";class L extends A.BaseFeatureDataAdapter{async setup(e){return this.setupP||(this.setupP=this.setupPre(e).catch(t=>{throw this.setupP=void 0,t})),this.setupP}async setupPre(e){const{statusCallback:t=()=>{}}=e,c=this.getConf("assemblyNames"),s=this.pluginManager,i=h.openLocation(this.getConf("bed1Location"),s),n=h.openLocation(this.getConf("bed2Location"),s),o=h.openLocation(this.getConf("mcscanAnchorsLocation"),s),[p,m,f]=await N.updateStatus("Downloading data",t,()=>Promise.all([i,n,o].map(a=>F(a,e)))),u=x(p),d=x(m),r=f.split(/\n|\r\n|\r/).filter(a=>!!a&&a!=="###").map((a,w)=>{const[y,g,C]=a.split("	"),l=u.get(y),b=d.get(g);if(!l||!b)throw new Error(`feature not found, ${y} ${g} ${l} ${b}`);return[l,b,+C,w]});return{assemblyNames:c,feats:r}}async hasDataForRefName(){return!0}getAssemblyNames(){return this.getConf("assemblyNames")}async getRefNames(e={}){var t;const c=(t=e.regions)===null||t===void 0?void 0:t[0].assemblyName,{feats:s}=await this.setup(e),i=this.getAssemblyNames().indexOf(c);if(i!==-1){const n=new Set;for(const o of s)n.add(i===0?o[0].refName:o[1].refName);return[...n]}return console.warn("Unable to do ref renaming on adapter"),[]}getFeatures(e,t={}){return P.ObservableCreate(async c=>{const{assemblyNames:s,feats:i}=await this.setup(t),n=s.indexOf(e.assemblyName);if(n!==-1){const o=n===0;for(const p of i){const[m,f,u,d]=p,[r,a]=o?[m,f]:[f,m];r.refName===e.refName&&N.doesIntersect2(e.start,e.end,r.start,r.end)&&c.next(new N.SimpleFeature({...r,uniqueId:`${n}-${d}`,syntenyId:d,strand:r.strand*a.strand,assemblyName:s[+!o],score:u,mate:{...a,assemblyName:s[+o]}}))}}c.complete()})}}L.capabilities=["getFeatures","getRefNames"];export{L as default};
//# sourceMappingURL=MCScanAnchorsAdapter-CVi-M54Q.js.map
