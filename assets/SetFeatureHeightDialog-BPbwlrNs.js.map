{"version":3,"file":"SetFeatureHeightDialog-BPbwlrNs.js","sources":["../../node_modules/@jbrowse/plugin-alignments/esm/LinearPileupDisplay/components/SetFeatureHeightDialog.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { Button, Checkbox, DialogActions, DialogContent, FormControlLabel, TextField, Typography, } from '@mui/material';\nimport { observer } from 'mobx-react';\nconst SetFeatureHeightDialog = observer(function (props) {\n    const { model, handleClose } = props;\n    const { featureHeightSetting, noSpacing: noSpacingSetting } = model;\n    const [height, setHeight] = useState(`${featureHeightSetting}`);\n    const [noSpacing, setNoSpacing] = useState(noSpacingSetting);\n    const ok = height !== '' && !Number.isNaN(+height);\n    return (_jsx(Dialog, { open: true, onClose: handleClose, title: \"Set feature height\", children: _jsxs(DialogContent, { children: [_jsx(Typography, { children: \"Adjust the feature height and whether there is any spacing between features. Setting feature height to 1 and removing spacing makes the display very compact.\" }), _jsx(TextField, { value: height, helperText: \"Feature height\", onChange: event => {\n                        setHeight(event.target.value);\n                    } }), _jsx(FormControlLabel, { control: _jsx(Checkbox, { checked: !!noSpacing, onChange: () => {\n                            setNoSpacing(val => !val);\n                        } }), label: \"Remove spacing between features in y-direction?\" }), _jsxs(DialogActions, { children: [_jsx(Button, { variant: \"contained\", color: \"primary\", type: \"submit\", autoFocus: true, disabled: !ok, onClick: () => {\n                                model.setFeatureHeight(height !== '' && !Number.isNaN(+height) ? +height : undefined);\n                                model.setNoSpacing(noSpacing);\n                                handleClose();\n                            }, children: \"Submit\" }), _jsx(Button, { variant: \"contained\", color: \"secondary\", onClick: () => {\n                                handleClose();\n                            }, children: \"Cancel\" })] })] }) }));\n});\nexport default SetFeatureHeightDialog;\n"],"names":["SetFeatureHeightDialog","observer","props","model","handleClose","featureHeightSetting","noSpacingSetting","height","setHeight","useState","noSpacing","setNoSpacing","ok","_jsx","Dialog","_jsxs","DialogContent","Typography","TextField","event","FormControlLabel","Checkbox","val","DialogActions","Button"],"mappings":"8GAKK,MAACA,EAAyBC,EAAS,SAAUC,EAAO,CACrD,KAAM,CAAE,MAAAC,EAAO,YAAAC,CAAW,EAAKF,EACzB,CAAE,qBAAAG,EAAsB,UAAWC,CAAgB,EAAKH,EACxD,CAACI,EAAQC,CAAS,EAAIC,EAAAA,SAAS,GAAGJ,CAAoB,EAAE,EACxD,CAACK,EAAWC,CAAY,EAAIF,EAAAA,SAASH,CAAgB,EACrDM,EAAKL,IAAW,IAAM,CAAC,OAAO,MAAM,CAACA,CAAM,EACjD,OAAQM,EAAAA,IAAKC,EAAAA,OAAQ,CAAE,KAAM,GAAM,QAASV,EAAa,MAAO,qBAAsB,SAAUW,EAAAA,KAAMC,EAAe,CAAE,SAAU,CAACH,EAAAA,IAAKI,EAAY,CAAE,SAAU,+JAA+J,CAAE,EAAGJ,EAAAA,IAAKK,EAAW,CAAE,MAAOX,EAAQ,WAAY,iBAAkB,SAAUY,GAAS,CACjYX,EAAUW,EAAM,OAAO,KAAK,CAChC,CAAC,CAAE,EAAGN,EAAAA,IAAKO,EAAkB,CAAE,QAASP,EAAAA,IAAKQ,EAAU,CAAE,QAAS,CAAC,CAACX,EAAW,SAAU,IAAM,CACvFC,EAAaW,GAAO,CAACA,CAAG,CAC5B,EAAG,EAAG,MAAO,kDAAmD,EAAGP,OAAMQ,EAAe,CAAE,SAAU,CAACV,EAAAA,IAAKW,EAAQ,CAAE,QAAS,YAAa,MAAO,UAAW,KAAM,SAAU,UAAW,GAAM,SAAU,CAACZ,EAAI,QAAS,IAAM,CACnNT,EAAM,iBAAiBI,IAAW,IAAM,CAAC,OAAO,MAAM,CAACA,CAAM,EAAI,CAACA,EAAS,MAAS,EACpFJ,EAAM,aAAaO,CAAS,EAC5BN,EAAW,CACf,EAAG,SAAU,QAAQ,CAAE,EAAGS,EAAAA,IAAKW,EAAQ,CAAE,QAAS,YAAa,MAAO,YAAa,QAAS,IAAM,CAC9FpB,EAAW,CACf,EAAG,SAAU,QAAQ,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,EAAG,CAC9D,CAAC","x_google_ignoreList":[0]}