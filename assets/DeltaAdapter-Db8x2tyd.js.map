{"version":3,"file":"DeltaAdapter-Db8x2tyd.js","sources":["../../node_modules/@jbrowse/plugin-comparative-adapters/esm/DeltaAdapter/util.js","../../node_modules/@jbrowse/plugin-comparative-adapters/esm/DeltaAdapter/DeltaAdapter.js"],"sourcesContent":["import { parseLineByLine } from '@jbrowse/core/util/parseLineByLine';\nexport function paf_delta2paf(buffer, opts) {\n    const { statusCallback = () => { } } = opts || {};\n    let rname = '';\n    let qname = '';\n    let qs = 0;\n    let qe = 0;\n    let rs = 0;\n    let re = 0;\n    let strand = 0;\n    let NM = 0;\n    let cigar = [];\n    let x = 0;\n    let y = 0;\n    let seen_gt = false;\n    const records = [];\n    const regex = new RegExp(/^>(\\S+)\\s+(\\S+)\\s+(\\d+)\\s+(\\d+)/);\n    parseLineByLine(buffer, line => {\n        const m = regex.exec(line);\n        if (m !== null) {\n            rname = m[1];\n            qname = m[2];\n            seen_gt = true;\n            return true;\n        }\n        if (!seen_gt) {\n            return true;\n        }\n        const t = line.split(' ');\n        if (t.length === 7) {\n            const t0 = +t[0];\n            const t1 = +t[1];\n            const t2 = +t[2];\n            const t3 = +t[3];\n            const t4 = +t[4];\n            strand = (t0 < t1 && t2 < t3) || (t0 > t1 && t2 > t3) ? 1 : -1;\n            rs = +Math.min(t0, t1) - 1;\n            re = +Math.max(t1, t0);\n            qs = +Math.min(t2, t3) - 1;\n            qe = +Math.max(t3, t2);\n            x = y = 0;\n            NM = t4;\n            cigar = [];\n        }\n        else if (t.length === 1) {\n            const d = +t[0];\n            if (d === 0) {\n                let blen = 0;\n                const cigar_str = [];\n                if (re - rs - x !== qe - qs - y) {\n                    throw new Error(`inconsistent alignment on line ${line}`);\n                }\n                cigar.push((re - rs - x) << 4);\n                for (const entry of cigar) {\n                    const rlen = entry >> 4;\n                    blen += rlen;\n                    cigar_str.push(rlen + 'MID'.charAt(entry & 0xf));\n                }\n                records.push({\n                    qname,\n                    qstart: qs,\n                    qend: qe,\n                    tname: rname,\n                    tstart: rs,\n                    tend: re,\n                    strand,\n                    extra: {\n                        numMatches: blen - NM,\n                        blockLen: blen,\n                        mappingQual: 0,\n                        NM,\n                        cg: cigar_str.join(''),\n                    },\n                });\n            }\n            else if (d > 0) {\n                const l = d - 1;\n                x += l + 1;\n                y += l;\n                if (l > 0) {\n                    cigar.push(l << 4);\n                }\n                if (cigar.length > 0 && (cigar[cigar.length - 1] & 0xf) === 2) {\n                    cigar[cigar.length - 1] += 1 << 4;\n                }\n                else {\n                    cigar.push((1 << 4) | 2);\n                }\n            }\n            else {\n                const l = -d - 1;\n                x += l;\n                y += l + 1;\n                if (l > 0) {\n                    cigar.push(l << 4);\n                }\n                if (cigar.length > 0 && (cigar[cigar.length - 1] & 0xf) === 1) {\n                    cigar[cigar.length - 1] += 1 << 4;\n                }\n                else {\n                    cigar.push((1 << 4) | 1);\n                }\n            }\n        }\n        return true;\n    }, statusCallback);\n    return records;\n}\n","import { fetchAndMaybeUnzip } from '@jbrowse/core/util';\nimport { openLocation } from '@jbrowse/core/util/io';\nimport { paf_delta2paf } from './util';\nimport PAFAdapter from '../PAFAdapter/PAFAdapter';\nexport default class DeltaAdapter extends PAFAdapter {\n    async setupPre(opts) {\n        return paf_delta2paf(await fetchAndMaybeUnzip(openLocation(this.getConf('deltaLocation'), this.pluginManager), opts), opts);\n    }\n}\n"],"names":["paf_delta2paf","buffer","opts","statusCallback","rname","qname","qs","qe","rs","re","strand","NM","cigar","x","y","seen_gt","records","regex","parseLineByLine","line","m","t","t0","t1","t2","t3","t4","d","blen","cigar_str","entry","rlen","l","DeltaAdapter","PAFAdapter","fetchAndMaybeUnzip","openLocation"],"mappings":"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","x_google_ignoreList":[0,1]}