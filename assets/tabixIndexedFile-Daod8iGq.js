import{A as K}from"./AbortablePromiseCache-CQdc8xcb.js";import{u as z,a as Z}from"./unzip-DWHWkp76.js";import{L as B}from"./browser-DdKr-yeI.js";import{Q as W,R as D}from"./remoteFile-8fiGM-ez.js";class A{constructor(e,t,n,i){this.minv=e,this.maxv=t,this.bin=n,this._fetchedSize=i}toUniqueString(){return`${this.minv}..${this.maxv} (bin ${this.bin}, fetchedSize ${this.fetchedSize()})`}toString(){return this.toUniqueString()}compareTo(e){return this.minv.compareTo(e.minv)||this.maxv.compareTo(e.maxv)||this.bin-e.bin}fetchedSize(){return this._fetchedSize!==void 0?this._fetchedSize:this.maxv.blockPosition+65536-this.minv.blockPosition}}class Q{constructor({filehandle:e,renameRefSeqs:t=n=>n}){this.filehandle=e,this.renameRefSeq=t}async getMetadata(e={}){const{indices:t,...n}=await this.parse(e);return n}_findFirstData(e,t){return e?e.compareTo(t)>0?t:e:t}async parse(e={}){return this.parseP||(this.parseP=this._parse(e).catch(t=>{throw this.parseP=void 0,t})),this.parseP}async hasRefSeq(e,t={}){return!!(await this.parse(t)).indices[e]?.binIndex}}const H=65536,ee=H*H;function X(s,e=0){const t=s[e]|s[e+1]<<8|s[e+2]<<16|s[e+3]<<24;return((s[e+4]|s[e+5]<<8|s[e+6]<<16|s[e+7]<<24)>>>0)*ee+(t>>>0)}class te extends Error{}function y(s){if(s&&s.aborted)if(typeof DOMException>"u"){const e=new te("aborted");throw e.code="ERR_ABORTED",e}else throw new DOMException("aborted","AbortError")}function ne(s,e){return e.minv.blockPosition-s.maxv.blockPosition<65e3&&e.maxv.blockPosition-s.minv.blockPosition<5e6}function Y(s,e){const t=[];let n;if(s.length===0)return s;s.sort(function(i,o){const a=i.minv.blockPosition-o.minv.blockPosition;return a===0?i.minv.dataPosition-o.minv.dataPosition:a});for(const i of s)(!e||i.maxv.compareTo(e)>0)&&(n===void 0?(t.push(i),n=i):ne(n,i)?i.maxv.compareTo(n.maxv)>0&&(n.maxv=i.maxv):(t.push(i),n=i));return t}class V{constructor(e,t){this.blockPosition=e,this.dataPosition=t}toString(){return`${this.blockPosition}:${this.dataPosition}`}compareTo(e){return this.blockPosition-e.blockPosition||this.dataPosition-e.dataPosition}}function T(s,e=0){return new V(s[e+7]*1099511627776+s[e+6]*4294967296+s[e+5]*16777216+s[e+4]*65536+s[e+3]*256+s[e+2],s[e+1]<<8|s[e])}const ie=21582659,re=38359875,se={0:"generic",1:"SAM",2:"VCF"};function oe(s,e){return s*2**e}function j(s,e){return Math.floor(s/2**e)}class M extends Q{constructor(e){super(e),this.maxBinNumber=0,this.depth=0,this.minShift=0}async lineCount(e,t={}){const n=await this.parse(t),i=n.refNameToId[e];if(i===void 0||!n.indices[i])return-1;const{stats:a}=n.indices[i];return a?a.lineCount:-1}indexCov(){throw new Error("CSI indexes do not support indexcov")}parseAuxData(e,t){const n=new DataView(e.buffer),i=n.getInt32(t,!0),o=i&65536?"zero-based-half-open":"1-based-closed",a=se[i&15];if(!a)throw new Error(`invalid Tabix preset format flags ${i}`);const r={ref:n.getInt32(t+4,!0),start:n.getInt32(t+8,!0),end:n.getInt32(t+12,!0)},l=n.getInt32(t+16,!0),u=l?String.fromCharCode(l):void 0,c=n.getInt32(t+20,!0),h=n.getInt32(t+24,!0),{refIdToName:d,refNameToId:m}=this._parseNameBytes(e.subarray(t+28,t+28+h));return{refIdToName:d,refNameToId:m,skipLines:c,metaChar:u,columnNumbers:r,format:a,coordinateType:o}}_parseNameBytes(e){let t=0,n=0;const i=[],o={},a=new TextDecoder("utf8");for(let r=0;r<e.length;r+=1)if(!e[r]){if(n<r){const l=this.renameRefSeq(a.decode(e.subarray(n,r)));i[t]=l,o[l]=t}n=r+1,t+=1}return{refNameToId:o,refIdToName:i}}async _parse(e={}){const t=await z(await this.filehandle.readFile(e)),n=new DataView(t.buffer);let i;if(n.getUint32(0,!0)===ie)i=1;else if(n.getUint32(0,!0)===re)i=2;else throw new Error("Not a CSI file");this.minShift=n.getInt32(4,!0),this.depth=n.getInt32(8,!0),this.maxBinNumber=((1<<(this.depth+1)*3)-1)/7;const o=2**(this.minShift+this.depth*3),a=n.getInt32(12,!0),r=a&&a>=30?this.parseAuxData(t,16):{refIdToName:[],refNameToId:{},metaChar:void 0,columnNumbers:{ref:0,start:1,end:2},coordinateType:"zero-based-half-open",format:"generic"},l=n.getInt32(16+a,!0);let u,c=16+a+4;const h=new Array(l).fill(0).map(()=>{const d=n.getInt32(c,!0);c+=4;const m={};let w;for(let g=0;g<d;g+=1){const b=n.getUint32(c,!0);if(b>this.maxBinNumber)w=this.parsePseudoBin(t,c+4),c+=48;else{const f=T(t,c+4);u=this._findFirstData(u,f);const I=n.getInt32(c+12,!0);c+=16;const p=new Array(I);for(let k=0;k<I;k+=1){const x=T(t,c),C=T(t,c+8);c+=16,p[k]=new A(x,C,b)}m[b]=p}}return{binIndex:m,stats:w}});return{...r,csi:!0,refCount:l,maxBlockSize:65536,firstDataLine:u,csiVersion:i,indices:h,depth:this.depth,maxBinNumber:this.maxBinNumber,maxRefLength:o}}parsePseudoBin(e,t){return{lineCount:X(e,t+28)}}async blocksForRange(e,t,n,i={}){t<0&&(t=0);const o=await this.parse(i),a=o.refNameToId[e];if(a===void 0)return[];const r=o.indices[a];if(!r)return[];const l=this.reg2bins(t,n),u=[];for(const[c,h]of l)for(let d=c;d<=h;d++)if(r.binIndex[d])for(const m of r.binIndex[d])u.push(new A(m.minv,m.maxv,d));return Y(u,new V(0,0))}reg2bins(e,t){e-=1,e<1&&(e=1),t>2**50&&(t=2**34),t-=1;let n=0,i=0,o=this.minShift+this.depth*3;const a=[];for(;n<=this.depth;o-=3,i+=oe(1,n*3),n+=1){const r=i+j(e,o),l=i+j(t,o);if(l-r+a.length>this.maxBinNumber)throw new Error(`query ${e}-${t} is too large for current binning scheme (shift ${this.minShift}, depth ${this.depth}), try a smaller query or a coarser index binning scheme`);a.push([r,l])}return a}}const ae=21578324,G=14;function ce(s,e){return s+=1,e-=1,[[0,0],[1+(s>>26),1+(e>>26)],[9+(s>>23),9+(e>>23)],[73+(s>>20),73+(e>>20)],[585+(s>>17),585+(e>>17)],[4681+(s>>14),4681+(e>>14)]]}class N extends Q{async lineCount(e,t={}){const n=await this.parse(t),i=n.refNameToId[e];return i===void 0||!n.indices[i]?-1:n.indices[i].stats?.lineCount??-1}async _parse(e={}){const t=await this.filehandle.readFile(e),n=await z(t);y(e.signal);const i=new DataView(n.buffer);if(i.getUint32(0,!0)!==ae)throw new Error("Not a TBI file");const a=i.getUint32(4,!0),r=i.getUint32(8,!0),l=r&65536?"zero-based-half-open":"1-based-closed",c={0:"generic",1:"SAM",2:"VCF"}[r&15];if(!c)throw new Error(`invalid Tabix preset format flags ${r}`);const h={ref:i.getInt32(12,!0),start:i.getInt32(16,!0),end:i.getInt32(20,!0)},d=i.getInt32(24,!0),m=5,w=((1<<(m+1)*3)-1)/7,g=2**(14+m*3),b=d?String.fromCharCode(d):void 0,f=i.getInt32(28,!0),I=i.getInt32(32,!0),{refNameToId:p,refIdToName:k}=this._parseNameBytes(n.slice(36,36+I));let x=36+I,C;return{indices:new Array(a).fill(0).map(()=>{const E=i.getInt32(x,!0);x+=4;const P={};let $;for(let v=0;v<E;v+=1){const _=i.getUint32(x,!0);if(x+=4,_>w+1)throw new Error("tabix index contains too many bins, please use a CSI index");if(_===w+1){const S=i.getInt32(x,!0);x+=4,S===2&&($=this.parsePseudoBin(n,x)),x+=16*S}else{const S=i.getInt32(x,!0);x+=4;const U=new Array(S);for(let R=0;R<S;R+=1){const q=T(n,x),J=T(n,x+8);x+=16,C=this._findFirstData(C,q),U[R]=new A(q,J,_)}P[_]=U}}const O=i.getInt32(x,!0);x+=4;const L=new Array(O);for(let v=0;v<O;v+=1)L[v]=T(n,x),x+=8,C=this._findFirstData(C,L[v]);return{binIndex:P,linearIndex:L,stats:$}}),metaChar:b,maxBinNumber:w,maxRefLength:g,skipLines:f,firstDataLine:C,columnNumbers:h,coordinateType:l,format:c,refIdToName:k,refNameToId:p,maxBlockSize:65536}}parsePseudoBin(e,t){return{lineCount:X(e,t+16)}}_parseNameBytes(e){let t=0,n=0;const i=[],o={},a=new TextDecoder("utf8");for(let r=0;r<e.length;r+=1)if(!e[r]){if(n<r){const l=this.renameRefSeq(a.decode(e.subarray(n,r)));i[t]=l,o[l]=t}n=r+1,t+=1}return{refNameToId:o,refIdToName:i}}async blocksForRange(e,t,n,i={}){t<0&&(t=0);const o=await this.parse(i),a=o.refNameToId[e];if(a===void 0)return[];const r=o.indices[a];if(!r)return[];(r.linearIndex.length>0?r.linearIndex[t>>G>=r.linearIndex.length?r.linearIndex.length-1:t>>G]:new V(0,0))||console.warn("querying outside of possible tabix range");const u=ce(t,n),c=[];for(const[g,b]of u)for(let f=g;f<=b;f++)if(r.binIndex[f])for(const I of r.binIndex[f])c.push(new A(I.minv,I.maxv,f));const h=r.linearIndex.length;let d;const m=Math.min(t>>14,h-1),w=Math.min(n>>14,h-1);for(let g=m;g<=w;++g){const b=r.linearIndex[g];b&&(!d||b.compareTo(d)<0)&&(d=b)}return Y(c,d)}}function le(s){return/^[\u0000-\u007F]*$/.test(s)}class me{constructor({path:e,filehandle:t,url:n,tbiPath:i,tbiUrl:o,tbiFilehandle:a,csiPath:r,csiUrl:l,csiFilehandle:u,renameRefSeqs:c=d=>d,chunkCacheSize:h=5*2**20}){if(this.cache=new W({maxSize:1e3}),t)this.filehandle=t;else if(e)this.filehandle=new B(e);else if(n)this.filehandle=new D(n);else throw new TypeError("must provide either filehandle or path");if(a)this.index=new N({filehandle:a,renameRefSeqs:c});else if(u)this.index=new M({filehandle:u,renameRefSeqs:c});else if(i)this.index=new N({filehandle:new B(i),renameRefSeqs:c});else if(r)this.index=new M({filehandle:new B(r),renameRefSeqs:c});else if(e)this.index=new N({filehandle:new B(`${e}.tbi`),renameRefSeqs:c});else if(l)this.index=new M({filehandle:new D(l)});else if(o)this.index=new N({filehandle:new D(o)});else if(n)this.index=new N({filehandle:new D(`${n}.tbi`)});else throw new TypeError("must provide one of tbiFilehandle, tbiPath, csiFilehandle, csiPath, tbiUrl, csiUrl");this.renameRefSeq=c,this.chunkCache=new K({cache:new W({maxSize:Math.floor(h/65536)}),fill:(d,m)=>this.readChunk(d,{signal:m})})}async getLines(e,t,n,i){let o,a={},r;typeof i=="function"?r=i:(a=i,r=i.lineCallback,o=i.signal);const l=await this.index.getMetadata(a);y(o);const u=t??0,c=n??l.maxRefLength;if(!(u<=c))throw new TypeError("invalid start and end coordinates. start must be less than or equal to end");if(u===c)return;const h=await this.index.blocksForRange(e,u,c,a);y(o);const d=new TextDecoder("utf8");for(const m of h){const{buffer:w,cpositions:g,dpositions:b}=await this.chunkCache.get(m.toString(),m,o);y(o);let f=0,I=0;const p=d.decode(w),k=le(p);for(;f<p.length;){let x,C;if(k){if(C=p.indexOf(`
`,f),C===-1)break;x=p.slice(f,C)}else{if(C=w.indexOf(10,f),C===-1)break;const P=w.slice(f,C);x=d.decode(P)}if(b){for(;f+m.minv.dataPosition>=b[I++];);I--}const{startCoordinate:F,overlaps:E}=this.checkLine(l,e,u,c,x);if(E)r(x,g[I]*256+(f-b[I])+m.minv.dataPosition+1);else if(F!==void 0&&F>=c)return;f=C+1}}}async getMetadata(e={}){return this.index.getMetadata(e)}async getHeaderBuffer(e={}){const{firstDataLine:t,metaChar:n,maxBlockSize:i}=await this.getMetadata(e);y(e.signal);const o=(t?.blockPosition||0)+i,a=await this.filehandle.read(o,0,e),r=await z(a);if(n){let l=-1;const u=10,c=n.charCodeAt(0);for(let h=0,d=r.length;h<d;h++){const m=r[h];if(h===l+1&&m!==c)break;m===u&&(l=h)}return r.subarray(0,l+1)}return r}async getHeader(e={}){const t=new TextDecoder("utf8"),n=await this.getHeaderBuffer(e);return t.decode(n)}async getReferenceSequenceNames(e={}){return(await this.getMetadata(e)).refIdToName}checkLine(e,t,n,i,o){const{columnNumbers:a,metaChar:r,coordinateType:l,format:u}=e;if(r&&o.startsWith(r))return{overlaps:!1};let{ref:c,start:h,end:d}=a;c||(c=0),h||(h=0),d||(d=0),u==="VCF"&&(d=8);const m=Math.max(c,h,d);let w=1,g=0,b="",f=-1/0;const I=o.length;for(let p=0;p<I+1;p++)if(o[p]==="	"||p===I){if(w===c){if(this.renameRefSeq(o.slice(g,p))!==t)return{overlaps:!1}}else if(w===h){if(f=Number.parseInt(o.slice(g,p),10),l==="1-based-closed"&&(f-=1),f>=i)return{startCoordinate:f,overlaps:!1};if((d===0||d===h)&&f+1<=n)return{startCoordinate:f,overlaps:!1}}else if(u==="VCF"&&w===4)b=o.slice(g,p);else if(w===d&&(u==="VCF"?this._getVcfEnd(f,b,o.slice(g,p)):Number.parseInt(o.slice(g,p),10))<=n)return{overlaps:!1};if(g=p+1,w+=1,w>m)break}return{startCoordinate:f,overlaps:!0}}_getVcfEnd(e,t,n){let i=e+t.length;const o=n.includes("SVTYPE=TRA");if(n[0]!=="."&&!o){let a=";";for(let r=0;r<n.length;r+=1){if(a===";"&&n.slice(r,r+4)==="END="){let l=n.indexOf(";",r);l===-1&&(l=n.length),i=Number.parseInt(n.slice(r+4,l),10);break}a=n[r]}}else if(o)return e+1;return i}async lineCount(e,t={}){return this.index.lineCount(e,t)}async readChunk(e,t={}){const n=await this.filehandle.read(e.fetchedSize(),e.minv.blockPosition,t);return Z(n,e,this.cache)}}export{me as T};
//# sourceMappingURL=tabixIndexedFile-Daod8iGq.js.map
