{"version":3,"file":"AddTrackWorkflow-CswEDLcp.js","sources":["../../node_modules/@jbrowse/plugin-wiggle/esm/MultiWiggleAddTrackWorkflow/AddTrackWorkflow.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { getSession, isElectron, isSessionModelWithWidgets, isSessionWithAddTracks, } from '@jbrowse/core/util';\nimport { storeBlobLocation } from '@jbrowse/core/util/tracks';\nimport { Button, Paper, TextField } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()(theme => ({\n    paper: {\n        margin: theme.spacing(),\n        padding: theme.spacing(),\n    },\n    submit: {\n        marginTop: 25,\n        marginBottom: 100,\n        display: 'block',\n    },\n}));\nfunction makeFileLocation(file) {\n    return isElectron\n        ? {\n            localPath: window.require('electron').webUtils.getPathForFile(file),\n            locationType: 'LocalPathLocation',\n        }\n        : storeBlobLocation({ blob: file });\n}\nfunction doSubmit({ trackName, val, model, }) {\n    var _a;\n    const session = getSession(model);\n    try {\n        const trackId = [\n            `${trackName.toLowerCase().replaceAll(' ', '_')}-${Date.now()}`,\n            session.adminMode ? '' : '-sessionTrack',\n        ].join('');\n        let bigWigs;\n        try {\n            bigWigs = JSON.parse(val);\n        }\n        catch (e) {\n            bigWigs = val\n                .split(/\\n|\\r\\n|\\r/)\n                .map(f => f.trim())\n                .filter(f => !!f);\n        }\n        const obj = typeof bigWigs[0] === 'string' ? { bigWigs } : { subadapters: bigWigs };\n        if (isSessionWithAddTracks(session)) {\n            session.addTrackConf({\n                trackId,\n                type: 'MultiQuantitativeTrack',\n                name: trackName,\n                assemblyNames: [model.assembly],\n                adapter: {\n                    type: 'MultiWiggleAdapter',\n                    ...obj,\n                },\n            });\n            (_a = model.view) === null || _a === void 0 ? void 0 : _a.showTrack(trackId);\n        }\n        model.clearData();\n        if (isSessionModelWithWidgets(session)) {\n            session.hideWidget(model);\n        }\n    }\n    catch (e) {\n        console.error(e);\n        session.notifyError(`${e}`, e);\n    }\n}\nconst MultiWiggleAddTrackWorkflow = observer(function ({ model, }) {\n    const { classes } = useStyles();\n    const [val, setVal] = useState('');\n    const [trackName, setTrackName] = useState(`MultiWiggle${+Date.now()}`);\n    return (_jsxs(Paper, { className: classes.paper, children: [_jsxs(\"ul\", { children: [_jsx(\"li\", { children: \"Enter list of URLs for bigwig files in the textbox\" }), _jsx(\"li\", { children: \"Or, use the button below the text box to select files from your computer\" })] }), _jsx(TextField, { multiline: true, fullWidth: true, rows: 10, value: val, placeholder: \"Paste list of URLs here, or use file selector below\", variant: \"outlined\", onChange: event => {\n                    setVal(event.target.value);\n                } }), _jsxs(Button, { variant: \"outlined\", component: \"label\", children: [\"Choose Files from your computer\", _jsx(\"input\", { type: \"file\", hidden: true, multiple: true, onChange: ({ target }) => {\n                            setVal(JSON.stringify([...(target.files || [])].map(file => ({\n                                type: 'BigWigAdapter',\n                                bigWigLocation: makeFileLocation(file),\n                                source: file.name,\n                            })), null, 2));\n                        } })] }), _jsx(TextField, { value: trackName, helperText: \"Track name\", onChange: event => {\n                    setTrackName(event.target.value);\n                } }), _jsx(Button, { variant: \"contained\", className: classes.submit, onClick: () => {\n                    doSubmit({ trackName, val, model });\n                }, children: \"Submit\" }), _jsx(\"p\", { children: \"Additional notes: \" }), _jsxs(\"ul\", { children: [_jsxs(\"li\", { children: [\"The list of bigwig files in the text box can be a list of URLs, or a list of elements like\", ' ', _jsx(\"code\", { children: `[{\"type\":\"BigWigAdapter\",\"bigWigLocation\":{\"uri\":\"http://host/file.bw\"}, \"color\":\"green\",\"source\":\"name for subtrack\"}]` }), ' ', \"to apply e.g. the color attribute to the view\"] }), _jsx(\"li\", { children: \"Adding local files will update the textbox with JSON contents that are ready to submit with the \\\"Submit\\\" button\" })] })] }));\n});\nexport default MultiWiggleAddTrackWorkflow;\n"],"names":["useStyles","makeStyles","theme","makeFileLocation","file","isElectron","storeBlobLocation","doSubmit","trackName","val","model","_a","session","getSession","trackId","bigWigs","f","obj","isSessionWithAddTracks","isSessionModelWithWidgets","e","MultiWiggleAddTrackWorkflow","observer","classes","setVal","useState","setTrackName","_jsxs","Paper","_jsx","TextField","event","Button","target"],"mappings":"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","x_google_ignoreList":[0]}