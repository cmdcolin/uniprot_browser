{"version":3,"mappings":"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","names":["useStyles","makeStyles","flagNames","AlignmentFlags","props","classes","flags","_jsxs","BaseCard","_jsx","SimpleField","FormGroup","name","idx","val","key","FormControlLabel","Checkbox","Formatter","value","show","setShow","useState","copied","setCopied","display","_Fragment","copy","getTag","tag","feat","_a","navToLoc","locString","model","session","getSession","view","e","PairLink","Link","event","tags","SupplementaryAlignments","lazy","__vitePreload","LinkedPairedAlignments","FeatDefined","observer","SA","Paper","FeatureDetails","Flags","AlignmentsFeatureDetails","featureData"],"ignoreList":[0,1,2,3,4,5],"sources":["../../node_modules/@jbrowse/plugin-alignments/esm/AlignmentsFeatureDetail/Flags.js","../../node_modules/@jbrowse/plugin-alignments/esm/AlignmentsFeatureDetail/Formatter.js","../../node_modules/@jbrowse/plugin-alignments/esm/AlignmentsFeatureDetail/util.js","../../node_modules/@jbrowse/plugin-alignments/esm/AlignmentsFeatureDetail/PairLink.js","../../node_modules/@jbrowse/plugin-alignments/esm/AlignmentsFeatureDetail/tagInfo.js","../../node_modules/@jbrowse/plugin-alignments/esm/AlignmentsFeatureDetail/AlignmentsFeatureDetail.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard';\nimport SimpleField from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/SimpleField';\nimport { Checkbox, FormControlLabel, FormGroup } from '@mui/material';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()({\n    compact: {\n        paddingRight: 0,\n        paddingTop: 0,\n        paddingBottom: 0,\n    },\n});\nconst flagNames = [\n    'read paired',\n    'read mapped in proper pair',\n    'read unmapped',\n    'mate unmapped',\n    'read reverse strand',\n    'mate reverse strand',\n    'first in pair',\n    'second in pair',\n    'not primary alignment',\n    'read fails platform/vendor quality checks',\n    'read is PCR or optical duplicate',\n    'supplementary alignment',\n];\nexport default function AlignmentFlags(props) {\n    const { classes } = useStyles();\n    const { flags } = props;\n    return (_jsxs(BaseCard, { ...props, title: \"Flags\", children: [_jsx(SimpleField, { name: \"Flag\", value: flags }), _jsx(FormGroup, { children: flagNames.map((name, idx) => {\n                    const val = flags & (1 << idx);\n                    const key = `${name}_${val}`;\n                    return (_jsx(FormControlLabel, { control: _jsx(Checkbox, { className: classes.compact, checked: Boolean(val), name: name, readOnly: true }), label: name }, key));\n                }) })] }));\n}\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport copy from 'copy-to-clipboard';\nexport default function Formatter({ value }) {\n    const [show, setShow] = useState(false);\n    const [copied, setCopied] = useState(false);\n    const display = String(value);\n    return display.length > 100 ? (_jsxs(_Fragment, { children: [_jsx(\"button\", { type: \"button\", onClick: () => {\n                    copy(display);\n                    setCopied(true);\n                    setTimeout(() => {\n                        setCopied(false);\n                    }, 700);\n                }, children: copied ? 'Copied to clipboard' : 'Copy' }), _jsx(\"button\", { type: \"button\", onClick: () => {\n                    setShow(val => !val);\n                }, children: show ? 'Show less' : 'Show more' }), _jsx(\"div\", { children: show ? display : `${display.slice(0, 100)}...` })] })) : (_jsx(\"div\", { children: display }));\n}\n","import { getSession } from '@jbrowse/core/util';\nexport function getTag(tag, feat) {\n    var _a;\n    return ((_a = feat.tags) === null || _a === void 0 ? void 0 : _a[tag]) || feat[tag];\n}\nexport async function navToLoc(locString, model) {\n    const session = getSession(model);\n    const { view } = model;\n    try {\n        if (view) {\n            await view.navToLocString(locString);\n        }\n        else {\n            throw new Error('No view associated with this view anymore');\n        }\n    }\n    catch (e) {\n        console.error(e);\n        session.notify(`${e}`);\n    }\n}\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Link } from '@mui/material';\nimport { navToLoc } from './util';\nexport default function PairLink({ locString, model, }) {\n    return (_jsx(Link, { onClick: event => {\n            event.preventDefault();\n            navToLoc(locString, model);\n        }, href: \"#\", children: locString }));\n}\n","export const tags = {\n    AM: 'The smallest template-independent mapping quality in the template',\n    AS: 'Alignment score generated by aligner',\n    BC: 'Barcode sequence identifying the sample',\n    BQ: 'Offset to base alignment quality (BAQ)',\n    BZ: 'Phred quality of the unique molecular barcode bases in the {OX} tag',\n    CB: 'Cell identifier',\n    CC: 'Reference name of the next hit',\n    CM: 'Edit distance between the color sequence and the color reference (see also {NM})',\n    CO: 'Free-text comments',\n    CP: 'Leftmost coordinate of the next hit',\n    CQ: 'Color read base qualities',\n    CR: 'Cellular barcode sequence bases (uncorrected)',\n    CS: 'Color read sequence',\n    CT: 'Complete read annotation tag, used for consensus annotation dummy features',\n    CY: 'Phred quality of the cellular barcode sequence in the {CR} tag',\n    E2: 'The 2nd most likely base calls',\n    FI: 'The index of segment in the template',\n    FS: 'Segment suffix',\n    FZ: 'Flow stopToken intensities',\n    GC: 'Reserved for backwards compatibility reasons',\n    GQ: 'Reserved for backwards compatibility reasons',\n    GS: 'Reserved for backwards compatibility reasons',\n    H0: 'Number of perfect hits',\n    H1: 'Number of 1-difference hits (see also {NM})',\n    H2: 'Number of 2-difference hits',\n    HI: 'Query hit index',\n    IH: 'Query hit total count',\n    LB: 'Library',\n    MC: 'CIGAR string for mate/next segment',\n    MD: 'String encoding mismatched and deleted reference bases',\n    MF: 'Reserved for backwards compatibility reasons',\n    MI: 'Molecular identifier; a string that uniquely identifies the molecule from which the record was derived',\n    ML: 'Base modification probabilities',\n    MM: 'Base modifications / methylation ',\n    MQ: 'Mapping quality of the mate/next segment',\n    NH: 'Number of reported alignments that contain the query in the current record',\n    NM: 'Edit distance to the reference',\n    OA: 'Original alignment',\n    OC: 'Original CIGAR (deprecated; use {OA} instead)',\n    OP: 'Original mapping position (deprecated; use {OA} instead)',\n    OQ: 'Original base quality',\n    OX: 'Original unique molecular barcode bases',\n    PG: 'Program',\n    PQ: 'Phred likelihood of the template',\n    PT: 'Read annotations for parts of the padded read sequence',\n    PU: 'Platform unit',\n    Q2: 'Phred quality of the mate/next segment sequence in the {R2} tag',\n    QT: 'Phred quality of the sample barcode sequence in the {BC} tag',\n    QX: 'Quality score of the unique molecular identifier in the {RX} tag',\n    R2: 'Sequence of the mate/next segment in the template',\n    RG: 'Read group',\n    RT: 'Reserved for backwards compatibility reasons',\n    RX: 'Sequence bases of the (possibly corrected) unique molecular identifier',\n    S2: 'Reserved for backwards compatibility reasons',\n    SA: 'Other canonical alignments in a chimeric alignment',\n    SM: 'Template-independent mapping quality',\n    SQ: 'Reserved for backwards compatibility reasons',\n    TC: 'The number of segments in the template',\n    TS: 'Transcript strand',\n    U2: 'Phred probability of the 2nd call being wrong conditional on the best being wrong',\n    UQ: 'Phred likelihood of the segment, conditional on the mapping being correct',\n};\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { lazy } from 'react';\nimport FeatureDetails from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/FeatureDetails';\nimport { Paper } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport Flags from './Flags';\nimport Formatter from './Formatter';\nimport PairLink from './PairLink';\nimport { tags } from './tagInfo';\nimport { getTag } from './util';\nconst SupplementaryAlignments = lazy(() => import('./SupplementaryAlignments'));\nconst LinkedPairedAlignments = lazy(() => import('./LinkedPairedAlignments'));\nconst FeatDefined = observer(function (props) {\n    const { model, feat } = props;\n    const flags = feat.flags;\n    const SA = getTag('SA', feat);\n    return (_jsxs(Paper, { \"data-testid\": \"alignment-side-drawer\", children: [_jsx(FeatureDetails, { ...props, descriptions: { tags }, feature: feat, formatter: (value, key) => key === 'next_segment_position' ? (_jsx(PairLink, { model: model, locString: value })) : (_jsx(Formatter, { value: value })) }), SA !== undefined ? (_jsx(SupplementaryAlignments, { model: model, tag: SA, feature: feat })) : null, flags != null ? (_jsxs(_Fragment, { children: [flags & 1 ? (_jsx(LinkedPairedAlignments, { model: model, feature: feat })) : null, _jsx(Flags, { flags: flags, ...props })] })) : null] }));\n});\nconst AlignmentsFeatureDetails = observer(function (props) {\n    const { model } = props;\n    const { featureData } = model;\n    const feat = structuredClone(featureData);\n    return feat ? (_jsx(FeatDefined, { feat: feat, ...props })) : (_jsx(\"div\", { children: \"No feature loaded, may not be available after page refresh because it was too large for localStorage\" }));\n});\nexport default AlignmentsFeatureDetails;\n"],"file":"assets/AlignmentsFeatureDetail-waO_C66b.js"}