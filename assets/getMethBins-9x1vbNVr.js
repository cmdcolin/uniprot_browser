import{u as A,c1 as B,c2 as P,aH as C,c3 as R}from"./index-B3kPj2Rj.js";function q(o,i,n){const t=n===-1?A.revcom(i):i,s=o.split(";"),r=[];for(const g of s){if(g==="")continue;const l=g.split(","),p=l[0],m=B.exec(p);if(!m)throw new Error(`bad format for MM tag: "${g}"`);const[,d,f,a]=m,u=a.split(/(\d+|.)/);f==="-"&&(console.warn("unsupported negative strand modifications"),r.push({type:"unsupported",positions:[],base:d,strand:f}));for(const c of u){if(c==="")continue;let e=0;const b=[];for(let h=1,M=l.length;h<M;h++){let y=+l[h];do(d==="N"||d===t[e])&&y--,e++;while(y>=0&&e<t.length);if(n===-1){const x=t.length-e;x>=0&&b.unshift(x)}else b.push(e-1)}r.push({type:c,base:d,strand:f,positions:b})}}return r}function w(o){const i=P(o,"ML","Ml")||[];if(i){const n=[];if(typeof i=="string"){const t=i.split(",");for(let s=0,r=t.length;s<r;s++)n.push(+t[s]/255)}else for(let t=0,s=i.length;t<s;t++)n.push(i[t]/255);return n}else{const n=P(o,"MP","Mp");if(n){const t=[];for(let s=0,r=n.length;s<r;s++){const g=n.charCodeAt(s)-33;t.push(Math.min(1,g/50))}return t}return}}function I(o,i){const n=o.get("strand"),t=o.get("seq"),s=P(o,"MM","Mm")||"",r=i||C(o.get("CIGAR"));if(t){const g=q(s,t,n),l=w(o),p=[];let m=0;for(const{type:d,positions:f}of g){for(const{ref:a,idx:u}of R(r,f)){const c=l?.[m+(n===-1?f.length-1-u:u)]||0;if(!p[a])p[a]={type:d,prob:c,allProbs:[c]};else{const e=p[a];p[a]={allProbs:[...e.allProbs,c],prob:Math.max(e.prob,c),type:e.prob>c?e.type:d}}}m+=f.length}return p}}function N(o,i){const n=o.get("start"),t=o.get("end"),s=o.get("strand"),r=t-n,g=P(o,"MM","Mm")||"",l=[],p=[],m=[],d=[],f=o.get("seq");if(f){const a=w(o),u=q(g,f,s);let c=0;for(const{type:e,positions:b}of u){for(const{ref:h,idx:M}of R(i,b)){if(h<0||h>=r)continue;const x=c+(s===-1?b.length-1-M:M),v=a?.[x]||0;e==="m"?(l[h]=1,m[h]=v):e==="h"&&(p[h]=1,d[h]=v)}c+=b.length}}return{methBins:l,hydroxyMethBins:p,methProbs:m,hydroxyMethProbs:d}}export{N as a,I as g};
//# sourceMappingURL=getMethBins-9x1vbNVr.js.map
