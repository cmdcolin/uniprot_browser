{"version":3,"mappings":"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","names":["getValidReactChildren","children","React.Children","child","React.isValidElement","getToggleButtonUtilityClass","slot","generateUtilityClass","toggleButtonClasses","generateUtilityClasses","ToggleButtonGroupContext","React.createContext","ToggleButtonGroupButtonContext","isValueSelected","value","candidate","useUtilityClasses","ownerState","classes","fullWidth","selected","disabled","size","color","slots","capitalize","composeClasses","ToggleButtonRoot","styled","ButtonBase","props","styles","memoTheme","theme","alpha","createSimplePaletteValueFilter","ToggleButton","React.forwardRef","inProps","ref","contextValue","contextProps","React.useContext","toggleButtonGroupButtonContextPositionClassName","resolvedProps","resolveProps","useDefaultProps","className","disableFocusRipple","onChange","onClick","other","handleChange","event","positionClassName","clsx","getToggleButtonGroupUtilityClass","toggleButtonGroupClasses","orientation","ToggleButtonGroupRoot","ToggleButtonGroup","exclusive","React.useCallback","buttonValue","index","newValue","handleExclusiveChange","context","React.useMemo","validChildren","childrenCount","getButtonPositionClassName","isFirstButton","isLastButton","_jsx","AltFormatter","show","setShow","useState","getMinimalDesc","_jsxs","Formatter","copied","setCopied","display","_Fragment","copy","val","Checkbox2","checked","label","FormControlLabel","Checkbox","Typography","toP","n","VariantGenotypeFrequencyTable","rows","useCounts","setUseCounts","summary","row","alleleCounts","alleles","allele","key","gt","gridRows","widths","e","measureGridWidth","r","_","DataGridFlexContainer","DataGrid","SampleFilters","columns","filter","setFilter","field","TextField","getSampleGridRows","samples","REF","ALT","preFilteredRows","_a","makeSimpleAltString","error","filters","formatField","formatValue","currFilter","VariantSampleGrid","feature","descriptions","columnDisplayMode","setColumnDisplayMode","showFilters","setShowFilters","colKeySet","keys","_b","s1","s2","BaseCard","ErrorBoundary","ErrorMessage","f","variantFieldDescriptions","LaunchBreakendPanel","lazy","__vitePreload","VariantConsequenceDataGrid","AnnPanel","_c","_d","_e","annDesc","annFields","ann","CsqPanel","csqDescription","csqFields","csq","LaunchBreakendWidgetArea","model","featureData","feat","type","alt","parseBreakend","FeatDefined","observer","rest","Paper","FeatureDetails","Suspense","VariantFeatureWidget"],"ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"sources":["../../node_modules/@mui/utils/esm/getValidReactChildren/getValidReactChildren.js","../../node_modules/@mui/material/esm/ToggleButton/toggleButtonClasses.js","../../node_modules/@mui/material/esm/ToggleButtonGroup/ToggleButtonGroupContext.js","../../node_modules/@mui/material/esm/ToggleButtonGroup/ToggleButtonGroupButtonContext.js","../../node_modules/@mui/material/esm/ToggleButtonGroup/isValueSelected.js","../../node_modules/@mui/material/esm/ToggleButton/ToggleButton.js","../../node_modules/@mui/material/esm/ToggleButtonGroup/toggleButtonGroupClasses.js","../../node_modules/@mui/material/esm/ToggleButtonGroup/ToggleButtonGroup.js","../../node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/AltFormatter.js","../../node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/Formatter.js","../../node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/Checkbox2.js","../../node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/VariantSampleGrid/VariantGenotypeFrequencyTable.js","../../node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/VariantSampleGrid/VariantSampleFilters.js","../../node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/VariantSampleGrid/getSampleGridRows.js","../../node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/VariantSampleGrid/VariantSampleGrid.js","../../node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/variantFieldDescriptions.js","../../node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/VariantFeatureWidget.js"],"sourcesContent":["import * as React from 'react';\n\n/**\n * Gets only the valid children of a component,\n * and ignores any nullish or falsy child.\n *\n * @param children the children\n */\nexport default function getValidReactChildren(children) {\n  return React.Children.toArray(children).filter(child => /*#__PURE__*/React.isValidElement(child));\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getToggleButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButton', slot);\n}\nconst toggleButtonClasses = generateUtilityClasses('MuiToggleButton', ['root', 'disabled', 'selected', 'standard', 'primary', 'secondary', 'sizeSmall', 'sizeMedium', 'sizeLarge', 'fullWidth']);\nexport default toggleButtonClasses;","'use client';\n\nimport * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst ToggleButtonGroupContext = /*#__PURE__*/React.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n  ToggleButtonGroupContext.displayName = 'ToggleButtonGroupContext';\n}\nexport default ToggleButtonGroupContext;","'use client';\n\nimport * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst ToggleButtonGroupButtonContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  ToggleButtonGroupButtonContext.displayName = 'ToggleButtonGroupButtonContext';\n}\nexport default ToggleButtonGroupButtonContext;","// Determine if the toggle button value matches, or is contained in, the\n// candidate group value.\nexport default function isValueSelected(value, candidate) {\n  if (candidate === undefined || value === undefined) {\n    return false;\n  }\n  if (Array.isArray(candidate)) {\n    return candidate.includes(value);\n  }\n  return value === candidate;\n}","'use client';\n\n// @inheritedComponent ButtonBase\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport resolveProps from '@mui/utils/resolveProps';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport toggleButtonClasses, { getToggleButtonUtilityClass } from \"./toggleButtonClasses.js\";\nimport ToggleButtonGroupContext from \"../ToggleButtonGroup/ToggleButtonGroupContext.js\";\nimport ToggleButtonGroupButtonContext from \"../ToggleButtonGroup/ToggleButtonGroupButtonContext.js\";\nimport isValueSelected from \"../ToggleButtonGroup/isValueSelected.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    fullWidth,\n    selected,\n    disabled,\n    size,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', disabled && 'disabled', fullWidth && 'fullWidth', `size${capitalize(size)}`, color]\n  };\n  return composeClasses(slots, getToggleButtonUtilityClass, classes);\n};\nconst ToggleButtonRoot = styled(ButtonBase, {\n  name: 'MuiToggleButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  ...theme.typography.button,\n  borderRadius: (theme.vars || theme).shape.borderRadius,\n  padding: 11,\n  border: `1px solid ${(theme.vars || theme).palette.divider}`,\n  color: (theme.vars || theme).palette.action.active,\n  [`&.${toggleButtonClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled,\n    border: `1px solid ${(theme.vars || theme).palette.action.disabledBackground}`\n  },\n  '&:hover': {\n    textDecoration: 'none',\n    // Reset on mouse devices\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  variants: [{\n    props: {\n      color: 'standard'\n    },\n    style: {\n      [`&.${toggleButtonClasses.selected}`]: {\n        color: (theme.vars || theme).palette.text.primary,\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.text.primary, theme.palette.action.selectedOpacity),\n        '&:hover': {\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.text.primary, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.text.primary, theme.palette.action.selectedOpacity)\n          }\n        }\n      }\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      [`&.${toggleButtonClasses.selected}`]: {\n        color: (theme.vars || theme).palette[color].main,\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette[color].main, theme.palette.action.selectedOpacity),\n        '&:hover': {\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette[color].main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette[color].main, theme.palette.action.selectedOpacity)\n          }\n        }\n      }\n    }\n  })), {\n    props: {\n      fullWidth: true\n    },\n    style: {\n      width: '100%'\n    }\n  }, {\n    props: {\n      size: 'small'\n    },\n    style: {\n      padding: 7,\n      fontSize: theme.typography.pxToRem(13)\n    }\n  }, {\n    props: {\n      size: 'large'\n    },\n    style: {\n      padding: 15,\n      fontSize: theme.typography.pxToRem(15)\n    }\n  }]\n})));\nconst ToggleButton = /*#__PURE__*/React.forwardRef(function ToggleButton(inProps, ref) {\n  // props priority: `inProps` > `contextProps` > `themeDefaultProps`\n  const {\n    value: contextValue,\n    ...contextProps\n  } = React.useContext(ToggleButtonGroupContext);\n  const toggleButtonGroupButtonContextPositionClassName = React.useContext(ToggleButtonGroupButtonContext);\n  const resolvedProps = resolveProps({\n    ...contextProps,\n    selected: isValueSelected(inProps.value, contextValue)\n  }, inProps);\n  const props = useDefaultProps({\n    props: resolvedProps,\n    name: 'MuiToggleButton'\n  });\n  const {\n    children,\n    className,\n    color = 'standard',\n    disabled = false,\n    disableFocusRipple = false,\n    fullWidth = false,\n    onChange,\n    onClick,\n    selected,\n    size = 'medium',\n    value,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    color,\n    disabled,\n    disableFocusRipple,\n    fullWidth,\n    size\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = event => {\n    if (onClick) {\n      onClick(event, value);\n      if (event.defaultPrevented) {\n        return;\n      }\n    }\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n  const positionClassName = toggleButtonGroupButtonContextPositionClassName || '';\n  return /*#__PURE__*/_jsx(ToggleButtonRoot, {\n    className: clsx(contextProps.className, classes.root, className, positionClassName),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    ref: ref,\n    onClick: handleChange,\n    onChange: onChange,\n    value: value,\n    ownerState: ownerState,\n    \"aria-pressed\": selected,\n    ...other,\n    children: children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the button when it is in an active state.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'standard'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If `true`, the button will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Callback fired when the state changes.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected button.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the button is clicked.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected button.\n   */\n  onClick: PropTypes.func,\n  /**\n   * If `true`, the button is rendered in an active state.\n   */\n  selected: PropTypes.bool,\n  /**\n   * The size of the component.\n   * The prop defaults to the value inherited from the parent ToggleButtonGroup component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value to associate with the button when selected in a\n   * ToggleButtonGroup.\n   */\n  value: PropTypes /* @typescript-to-proptypes-ignore */.any.isRequired\n} : void 0;\nexport default ToggleButton;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getToggleButtonGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButtonGroup', slot);\n}\nconst toggleButtonGroupClasses = generateUtilityClasses('MuiToggleButtonGroup', ['root', 'selected', 'horizontal', 'vertical', 'disabled', 'grouped', 'groupedHorizontal', 'groupedVertical', 'fullWidth', 'firstButton', 'lastButton', 'middleButton']);\nexport default toggleButtonGroupClasses;","'use client';\n\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport getValidReactChildren from '@mui/utils/getValidReactChildren';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport toggleButtonGroupClasses, { getToggleButtonGroupUtilityClass } from \"./toggleButtonGroupClasses.js\";\nimport ToggleButtonGroupContext from \"./ToggleButtonGroupContext.js\";\nimport ToggleButtonGroupButtonContext from \"./ToggleButtonGroupButtonContext.js\";\nimport toggleButtonClasses from \"../ToggleButton/toggleButtonClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation,\n    fullWidth,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation, fullWidth && 'fullWidth'],\n    grouped: ['grouped', `grouped${capitalize(orientation)}`, disabled && 'disabled'],\n    firstButton: ['firstButton'],\n    lastButton: ['lastButton'],\n    middleButton: ['middleButton']\n  };\n  return composeClasses(slots, getToggleButtonGroupUtilityClass, classes);\n};\nconst ToggleButtonGroupRoot = styled('div', {\n  name: 'MuiToggleButtonGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles.grouped\n    }, {\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.orientation)}`]\n    }, {\n      [`& .${toggleButtonGroupClasses.firstButton}`]: styles.firstButton\n    }, {\n      [`& .${toggleButtonGroupClasses.lastButton}`]: styles.lastButton\n    }, {\n      [`& .${toggleButtonGroupClasses.middleButton}`]: styles.middleButton\n    }, styles.root, ownerState.orientation === 'vertical' && styles.vertical, ownerState.fullWidth && styles.fullWidth];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'inline-flex',\n  borderRadius: (theme.vars || theme).shape.borderRadius,\n  variants: [{\n    props: {\n      orientation: 'vertical'\n    },\n    style: {\n      flexDirection: 'column',\n      [`& .${toggleButtonGroupClasses.grouped}`]: {\n        [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\n          borderTop: 0,\n          marginTop: 0\n        }\n      },\n      [`& .${toggleButtonGroupClasses.firstButton},& .${toggleButtonGroupClasses.middleButton}`]: {\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0\n      },\n      [`& .${toggleButtonGroupClasses.lastButton},& .${toggleButtonGroupClasses.middleButton}`]: {\n        marginTop: -1,\n        borderTop: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n      },\n      [`& .${toggleButtonGroupClasses.lastButton}.${toggleButtonClasses.disabled},& .${toggleButtonGroupClasses.middleButton}.${toggleButtonClasses.disabled}`]: {\n        borderTop: '1px solid transparent'\n      }\n    }\n  }, {\n    props: {\n      fullWidth: true\n    },\n    style: {\n      width: '100%'\n    }\n  }, {\n    props: {\n      orientation: 'horizontal'\n    },\n    style: {\n      [`& .${toggleButtonGroupClasses.grouped}`]: {\n        [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\n          borderLeft: 0,\n          marginLeft: 0\n        }\n      },\n      [`& .${toggleButtonGroupClasses.firstButton},& .${toggleButtonGroupClasses.middleButton}`]: {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      },\n      [`& .${toggleButtonGroupClasses.lastButton},& .${toggleButtonGroupClasses.middleButton}`]: {\n        marginLeft: -1,\n        borderLeft: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      [`& .${toggleButtonGroupClasses.lastButton}.${toggleButtonClasses.disabled},& .${toggleButtonGroupClasses.middleButton}.${toggleButtonClasses.disabled}`]: {\n        borderLeft: '1px solid transparent'\n      }\n    }\n  }]\n})));\nconst ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function ToggleButtonGroup(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiToggleButtonGroup'\n  });\n  const {\n    children,\n    className,\n    color = 'standard',\n    disabled = false,\n    exclusive = false,\n    fullWidth = false,\n    onChange,\n    orientation = 'horizontal',\n    size = 'medium',\n    value,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    disabled,\n    fullWidth,\n    orientation,\n    size\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback((event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n    const index = value && value.indexOf(buttonValue);\n    let newValue;\n    if (value && index >= 0) {\n      newValue = value.slice();\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? value.concat(buttonValue) : [buttonValue];\n    }\n    onChange(event, newValue);\n  }, [onChange, value]);\n  const handleExclusiveChange = React.useCallback((event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n    onChange(event, value === buttonValue ? null : buttonValue);\n  }, [onChange, value]);\n  const context = React.useMemo(() => ({\n    className: classes.grouped,\n    onChange: exclusive ? handleExclusiveChange : handleChange,\n    value,\n    size,\n    fullWidth,\n    color,\n    disabled\n  }), [classes.grouped, exclusive, handleExclusiveChange, handleChange, value, size, fullWidth, color, disabled]);\n  const validChildren = getValidReactChildren(children);\n  const childrenCount = validChildren.length;\n  const getButtonPositionClassName = index => {\n    const isFirstButton = index === 0;\n    const isLastButton = index === childrenCount - 1;\n    if (isFirstButton && isLastButton) {\n      return '';\n    }\n    if (isFirstButton) {\n      return classes.firstButton;\n    }\n    if (isLastButton) {\n      return classes.lastButton;\n    }\n    return classes.middleButton;\n  };\n  return /*#__PURE__*/_jsx(ToggleButtonGroupRoot, {\n    role: \"group\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    ...other,\n    children: /*#__PURE__*/_jsx(ToggleButtonGroupContext.Provider, {\n      value: context,\n      children: validChildren.map((child, index) => {\n        if (process.env.NODE_ENV !== 'production') {\n          if (isFragment(child)) {\n            console.error([\"MUI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n          }\n        }\n        return /*#__PURE__*/_jsx(ToggleButtonGroupButtonContext.Provider, {\n          value: getButtonPositionClassName(index),\n          children: child\n        }, index);\n      })\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the button when it is selected.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'standard'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled. This implies that all ToggleButton children will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, only allow one of the child ToggleButton values to be selected.\n   * @default false\n   */\n  exclusive: PropTypes.bool,\n  /**\n   * If `true`, the button group will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected buttons. When `exclusive` is true\n   * this is a single value; when false an array of selected values. If no value\n   * is selected and `exclusive` is true the value is null; when false an empty array.\n   */\n  onChange: PropTypes.func,\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The currently selected value within the group or an array of selected\n   * values when `exclusive` is false.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default ToggleButtonGroup;","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { getMinimalDesc } from '../VcfFeature/util';\nexport default function AltFormatter({ value, ref, }) {\n    const [show, setShow] = useState(false);\n    const alt = getMinimalDesc(ref, value);\n    return alt !== value ? (_jsxs(\"div\", { children: [_jsx(\"button\", { onClick: () => {\n                    setShow(!show);\n                }, children: show ? 'Show simplified ALT' : 'Show raw ALT' }), ' ', show ? value : getMinimalDesc(ref, value)] })) : (value);\n}\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport copy from 'copy-to-clipboard';\nexport default function Formatter({ value }) {\n    const [show, setShow] = useState(false);\n    const [copied, setCopied] = useState(false);\n    const display = String(value);\n    return display.length > 100 ? (_jsxs(_Fragment, { children: [_jsx(\"button\", { type: \"button\", onClick: () => {\n                    copy(display);\n                    setCopied(true);\n                    setTimeout(() => {\n                        setCopied(false);\n                    }, 700);\n                }, children: copied ? 'Copied to clipboard' : 'Copy' }), _jsx(\"button\", { type: \"button\", onClick: () => {\n                    setShow(val => !val);\n                }, children: show ? 'Show less' : 'Show more' }), _jsx(\"div\", { children: show ? display : `${display.slice(0, 100)}...` })] })) : (_jsx(\"div\", { children: display }));\n}\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Checkbox, FormControlLabel, Typography } from '@mui/material';\nexport default function Checkbox2({ checked, disabled, label, onChange, }) {\n    return (_jsx(FormControlLabel, { disabled: disabled, control: _jsx(Checkbox, { checked: checked, onChange: onChange }), label: _jsx(Typography, { variant: \"body2\", children: label }) }));\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport DataGridFlexContainer from '@jbrowse/core/ui/DataGridFlexContainer';\nimport { measureGridWidth } from '@jbrowse/core/util';\nimport { Checkbox, FormControlLabel, Typography } from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nfunction toP(n) {\n    return n.toPrecision(3);\n}\nexport default function VariantGenotypeFrequencyTable({ rows, }) {\n    const [useCounts, setUseCounts] = useState(false);\n    const summary = {};\n    if (!useCounts) {\n        for (const row of rows) {\n            const gt = row.GT;\n            if (!summary[gt]) {\n                summary[gt] = {\n                    count: 0,\n                    GT: row.GT,\n                    genotype: row.genotype,\n                };\n            }\n            summary[gt].count++;\n        }\n    }\n    else {\n        for (const row of rows) {\n            const alleleCounts = {};\n            const alleles = row.GT.split(/[/|]/);\n            for (const allele of alleles) {\n                alleleCounts[allele] = (alleleCounts[allele] || 0) + 1;\n            }\n            const key = Object.entries(alleleCounts)\n                .map(([key, val]) => `${key}:${val}`)\n                .join(';');\n            if (!summary[key]) {\n                summary[key] = {\n                    count: 0,\n                    GT: key,\n                    genotype: row.genotype,\n                };\n            }\n            summary[key].count++;\n        }\n    }\n    const gridRows = Object.entries(summary).map(([key, val]) => ({\n        id: key,\n        ...val,\n        count: `${val.count} / ${rows.length}`,\n        frequency: `${toP((val.count / rows.length) * 100)}%`,\n    }));\n    const keys = gridRows[0] ? Object.keys(gridRows[0]) : [];\n    const widths = keys.map(e => measureGridWidth(gridRows.map(r => `${r[e]}`)));\n    return (_jsxs(\"div\", { children: [_jsx(FormControlLabel, { control: _jsx(Checkbox, { checked: useCounts }), label: _jsx(Typography, { variant: \"body2\", children: \"Use allele counts instead of exact GT\" }), onChange: (_, checked) => {\n                    setUseCounts(checked);\n                } }), _jsx(DataGridFlexContainer, { children: _jsx(DataGrid, { rows: gridRows, hideFooter: true, rowHeight: 25, columnHeaderHeight: 35, columns: [\n                        {\n                            field: 'GT',\n                            width: widths[0],\n                        },\n                        {\n                            field: 'count',\n                            width: widths[1],\n                        },\n                        {\n                            field: 'frequency',\n                            width: widths[2],\n                        },\n                        {\n                            field: 'genotype',\n                            width: widths[3],\n                        },\n                    ] }) })] }));\n}\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { TextField, Typography } from '@mui/material';\nexport default function SampleFilters({ columns, filter, setFilter, }) {\n    return (_jsxs(_Fragment, { children: [_jsx(Typography, { children: \"These filters can use a plain text search or regex style query, e.g. in the genotype field, entering 1 will query for all genotypes that include the first alternate allele e.g. 0|1 or 1|1, entering [1-9]\\\\d* will find any non-zero allele e.g. 0|2 or 2/33\" }), columns.map(({ field }) => (_jsx(TextField, { placeholder: `Filter ${field}`, value: filter[field] || '', onChange: event => {\n                    setFilter({ ...filter, [field]: event.target.value });\n                } }, `filter-${field}`)))] }));\n}\n","import { makeSimpleAltString } from '../../VcfFeature/util';\nexport function getSampleGridRows(samples, REF, ALT, filter) {\n    const preFilteredRows = Object.entries(samples).map(([key, val]) => {\n        var _a;\n        const gt = (_a = val.GT) === null || _a === void 0 ? void 0 : _a[0];\n        return [\n            key,\n            {\n                ...val,\n                ...(gt\n                    ? {\n                        GT: `${gt}`,\n                        genotype: makeSimpleAltString(`${gt}`, REF, ALT),\n                    }\n                    : {}),\n            },\n        ];\n    });\n    let error;\n    let rows = [];\n    const filters = Object.keys(filter);\n    try {\n        rows = preFilteredRows\n            .map(([key, val]) => {\n            return {\n                ...Object.fromEntries(Object.entries(val).map(([formatField, formatValue]) => [\n                    formatField,\n                    formatValue,\n                ])),\n                sample: key,\n                id: key,\n            };\n        })\n            .filter(row => filters.length\n            ? filters.every(key => {\n                const currFilter = filter[key];\n                return currFilter\n                    ? new RegExp(currFilter, 'i').exec(row[key])\n                    : true;\n            })\n            : true);\n    }\n    catch (e) {\n        console.error(e);\n        error = e;\n    }\n    return { rows, error };\n}\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard';\nimport { ErrorMessage } from '@jbrowse/core/ui';\nimport DataGridFlexContainer from '@jbrowse/core/ui/DataGridFlexContainer';\nimport { ErrorBoundary } from '@jbrowse/core/ui/ErrorBoundary';\nimport { measureGridWidth } from '@jbrowse/core/util';\nimport { ToggleButton, ToggleButtonGroup, Typography } from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport Checkbox2 from '../Checkbox2';\nimport VariantGenotypeFrequencyTable from './VariantGenotypeFrequencyTable';\nimport SampleFilters from './VariantSampleFilters';\nimport { getSampleGridRows } from './getSampleGridRows';\nexport default function VariantSampleGrid(props) {\n    const { feature, descriptions = {} } = props;\n    const [filter, setFilter] = useState({});\n    const [columnDisplayMode, setColumnDisplayMode] = useState('all');\n    const [showFilters, setShowFilters] = useState(false);\n    const samples = (feature.samples || {});\n    const ALT = feature.ALT;\n    const REF = feature.REF;\n    const { rows, error } = getSampleGridRows(samples, REF, ALT, filter);\n    const colKeySet = new Set(['sample', ...Object.keys(rows[0] || {})]);\n    colKeySet.delete('id');\n    const keys = [...colKeySet];\n    const widths = keys.map(e => measureGridWidth(rows.map(r => r[e])));\n    const columns = keys.map((field, index) => {\n        var _a, _b;\n        return ({\n            field,\n            description: (_b = (_a = descriptions === null || descriptions === void 0 ? void 0 : descriptions.FORMAT) === null || _a === void 0 ? void 0 : _a[field]) === null || _b === void 0 ? void 0 : _b.Description,\n            width: widths[index],\n        });\n    });\n    const s1 = new Set(['sample', 'GT']);\n    const s2 = new Set(['sample', 'GT', 'genotype']);\n    return !rows.length ? null : (_jsxs(_Fragment, { children: [_jsx(BaseCard, { ...props, title: \"Genotype frequencies\", children: _jsx(ErrorBoundary, { FallbackComponent: ErrorMessage, children: _jsx(VariantGenotypeFrequencyTable, { rows: rows }) }) }), _jsxs(BaseCard, { ...props, title: \"Samples\", children: [error ? _jsx(Typography, { color: \"error\", children: `${error}` }) : null, _jsxs(\"div\", { children: [_jsx(Checkbox2, { label: \"Show filters\", checked: showFilters, onChange: event => {\n                                    setShowFilters(event.target.checked);\n                                } }), _jsxs(ToggleButtonGroup, { value: columnDisplayMode, exclusive: true, size: \"small\", onChange: (_, newValue) => {\n                                    if (newValue !== null) {\n                                        setColumnDisplayMode(newValue);\n                                    }\n                                }, children: [_jsx(ToggleButton, { value: \"all\", children: \"All\" }), _jsx(ToggleButton, { value: \"gtOnly\", children: \"GT only\" }), _jsx(ToggleButton, { value: \"genotypeOnly\", children: \"GT+resolved genotype\" })] })] }), showFilters ? (_jsx(SampleFilters, { setFilter: setFilter, columns: columns, filter: filter })) : null, _jsx(DataGridFlexContainer, { children: _jsx(DataGrid, { rows: rows, hideFooter: rows.length < 100, columns: columnDisplayMode === 'gtOnly'\n                                ? columns.filter(f => s1.has(f.field))\n                                : columnDisplayMode === 'genotypeOnly'\n                                    ? columns.filter(f => s2.has(f.field))\n                                    : columns, rowHeight: 25, columnHeaderHeight: 35, showToolbar: true }) })] })] }));\n}\n","export const variantFieldDescriptions = {\n    CHROM: 'chromosome: An identifier from the reference genome',\n    POS: 'position: The reference position, with the 1st base having position 1',\n    ID: 'identifier: Semi-colon separated list of unique identifiers where available',\n    REF: 'reference base(s): Each base must be one of A,C,G,T,N (case insensitive).',\n    ALT: 'alternate base(s): Comma-separated list of alternate non-reference alleles',\n    QUAL: 'quality: Phred-scaled quality score for the assertion made in ALT',\n    FILTER: 'filter status: PASS if this position has passed all filters, otherwise a semicolon-separated list of codes for filters that fail',\n};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Suspense, lazy } from 'react';\nimport { parseBreakend } from '@gmod/vcf';\nimport FeatureDetails from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/FeatureDetails';\nimport { Paper } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport AltFormatter from './AltFormatter';\nimport Formatter from './Formatter';\nimport VariantSampleGrid from './VariantSampleGrid/VariantSampleGrid';\nimport { variantFieldDescriptions } from './variantFieldDescriptions';\nconst LaunchBreakendPanel = lazy(() => import('./LaunchBreakendPanel/LaunchBreakendPanel'));\nconst VariantConsequenceDataGrid = lazy(() => import('./VariantConsequence/VariantConsequenceDataGrid'));\nfunction AnnPanel({ descriptions, feature, }) {\n    var _a, _b, _c, _d, _e;\n    const annDesc = (_b = (_a = descriptions === null || descriptions === void 0 ? void 0 : descriptions.INFO) === null || _a === void 0 ? void 0 : _a.ANN) === null || _b === void 0 ? void 0 : _b.Description;\n    const annFields = ((_d = (_c = annDesc === null || annDesc === void 0 ? void 0 : annDesc.match(/.*Functional annotations:'(.*)'$/)) === null || _c === void 0 ? void 0 : _c[1]) === null || _d === void 0 ? void 0 : _d.split('|')) || [];\n    const ann = ((_e = feature.INFO) === null || _e === void 0 ? void 0 : _e.ANN) || [];\n    return (_jsx(VariantConsequenceDataGrid, { fields: annFields, data: ann, title: \"Variant ANN field\" }));\n}\nfunction CsqPanel({ descriptions, feature, }) {\n    var _a, _b, _c, _d, _e;\n    const csqDescription = (_b = (_a = descriptions === null || descriptions === void 0 ? void 0 : descriptions.INFO) === null || _a === void 0 ? void 0 : _a.CSQ) === null || _b === void 0 ? void 0 : _b.Description;\n    const csqFields = ((_d = (_c = csqDescription === null || csqDescription === void 0 ? void 0 : csqDescription.match(/.*Format: (.*)/)) === null || _c === void 0 ? void 0 : _c[1]) === null || _d === void 0 ? void 0 : _d.split('|')) || [];\n    const csq = ((_e = feature.INFO) === null || _e === void 0 ? void 0 : _e.CSQ) || [];\n    return (_jsx(VariantConsequenceDataGrid, { fields: csqFields, data: csq, title: \"Variant CSQ field\" }));\n}\nfunction LaunchBreakendWidgetArea({ model, }) {\n    const { featureData } = model;\n    const feat = JSON.parse(JSON.stringify(featureData));\n    const { type = '' } = feat;\n    return type === 'breakend' ? (_jsx(LaunchBreakendPanel, { feature: feat, locStrings: feat.ALT.map((alt) => { var _a; return ((_a = parseBreakend(alt)) === null || _a === void 0 ? void 0 : _a.MatePosition) || ''; }), model: model })) : type === 'translocation' ? (_jsx(LaunchBreakendPanel, { feature: feat, model: model, locStrings: [`${feat.INFO.CHR2[0]}:${feat.INFO.END}`] })) : type === 'paired_feature' ? (_jsx(LaunchBreakendPanel, { feature: feat, model: model, locStrings: [`${feat.mate.refName}:${feat.mate.start}`] })) : type.includes('inversion') ||\n        type.includes('deletion') ||\n        type.includes('duplication') ||\n        type.includes('cnv') ||\n        type.includes('sv') ? (_jsx(LaunchBreakendPanel, { feature: {\n            uniqueId: 'random',\n            refName: feat.refName,\n            start: feat.start,\n            end: feat.start + 1,\n            mate: {\n                refName: feat.refName,\n                start: feat.end,\n                end: feat.end + 1,\n            },\n        }, model: model, locStrings: [`${feat.refName}:${feat.end}`] })) : null;\n}\nconst FeatDefined = observer(function (props) {\n    const { feat, model } = props;\n    const { descriptions } = model;\n    const { samples, ...rest } = feat;\n    const { REF } = rest;\n    return (_jsxs(Paper, { \"data-testid\": \"variant-side-drawer\", children: [_jsx(FeatureDetails, { feature: rest, descriptions: {\n                    ...variantFieldDescriptions,\n                    ...descriptions,\n                }, formatter: (value, key) => {\n                    return key === 'ALT' ? (_jsx(AltFormatter, { value: `${value}`, ref: REF })) : (_jsx(Formatter, { value: value }));\n                }, ...props }), _jsxs(Suspense, { fallback: null, children: [_jsx(CsqPanel, { feature: rest, descriptions: descriptions }), _jsx(AnnPanel, { feature: rest, descriptions: descriptions }), _jsx(LaunchBreakendWidgetArea, { model: model })] }), _jsx(VariantSampleGrid, { feature: feat, ...props, descriptions: descriptions })] }));\n});\nconst VariantFeatureWidget = observer(function (props) {\n    const { model } = props;\n    const { featureData } = model;\n    const feat = structuredClone(featureData);\n    return feat ? (_jsx(FeatDefined, { feat: feat, ...props })) : (_jsx(\"div\", { children: \"No feature loaded, may not be available after page refresh because it was too large for localStorage\" }));\n});\nexport default VariantFeatureWidget;\n"],"file":"assets/VariantFeatureWidget-BGlvetLv.js"}