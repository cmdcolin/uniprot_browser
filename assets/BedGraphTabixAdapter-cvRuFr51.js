import{T as S}from"./tabixIndexedFile-Daod8iGq.js";import"./unzip-DWHWkp76.js";import{B as $}from"./index-D3TbvS_u.js";import{ag as h,u as y}from"./index-DPMJgfAS.js";import{r as F}from"./rxjs-DiVqhxS9.js";import"./AbortablePromiseCache-CQdc8xcb.js";import"./browser-DdKr-yeI.js";import"./remoteFile-8fiGM-ez.js";import"./index-BwUmrpDq.js";class j extends $.BaseFeatureDataAdapter{async configurePre(){const e=this.pluginManager,n=this.getConf("bedGraphGzLocation"),o=this.getConf(["index","location"]),s=this.getConf(["index","indexType"]),t=h.openLocation(n,e),a=s==="CSI",i=new S({filehandle:t,csiFilehandle:a?h.openLocation(o,e):void 0,tbiFilehandle:a?void 0:h.openLocation(o,e),chunkCacheSize:50*2**20}),u=this.getConf("columnNames"),c=await i.getHeader();return{columnNames:u,bedGraph:i,header:c}}async configure(){return this.configured||(this.configured=this.configurePre().catch(e=>{throw this.configured=void 0,e})),this.configured}async getNames(){const{bedGraph:e,columnNames:n}=await this.configure();if(n.length)return n;const t=(await e.getHeader()).split(/\n|\r\n|\r/).filter(a=>!!a).at(-1);return t?.includes("	")?t.slice(1).split("	").map(a=>a.trim()):void 0}async getRefNames(e={}){const{bedGraph:n}=await this.configure();return n.getReferenceSequenceNames(e)}async getHeader(){const{bedGraph:e}=await this.configure();return e.getHeader()}getFeatures(e,n={}){return F.ObservableCreate(async o=>{var s;const{bedGraph:t}=await this.configure(),a=await t.getMetadata(),{columnNumbers:i}=a,u=i.ref-1,c=i.start-1,d=i.end-1,f=c===d,w=((s=await this.getNames())===null||s===void 0?void 0:s.slice(f?2:3))||[];await t.getLines(e.refName,e.start+(f?-1:0),e.end,{lineCallback:(m,x)=>{const l=m.split("	"),G=l[u],p=+l[c],g=+(f?p+1:l[d]),b=l.slice(d+1);if(Number.isNaN(p)||Number.isNaN(g))throw new Error(`start/end NaN on line "${m}", with colStart:${c} and colEnd:${d}. run "tabix -p bed" to ensure bed preset`);for(let r=0;r<b.length;r++){const C=`${this.id}-${x}-${r}`,N=Math.abs(+b[r]),E=w[r]||`col${r}`;N&&o.next(new y.SimpleFeature({id:C,data:{refName:G,start:p,end:g,score:N,source:E}}))}},...n}),o.complete()})}}export{j as default};
//# sourceMappingURL=BedGraphTabixAdapter-cvRuFr51.js.map
