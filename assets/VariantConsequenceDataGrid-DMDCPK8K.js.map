{"version":3,"file":"VariantConsequenceDataGrid-DMDCPK8K.js","sources":["../../node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/VariantConsequence/VariantConsequenceDataGridWrapper.js","../../node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/VariantConsequence/VariantConsequenceDataGrid.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { measureGridWidth } from '@jbrowse/core/util';\nimport { Checkbox, FormControlLabel, Typography } from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nexport default function VariantConsequenceDataGridWrapper({ rows, columns, }) {\n    const [checked, setChecked] = useState(false);\n    const widths = columns.map(e => measureGridWidth(rows.map(r => r[e.field])));\n    return rows.length ? (_jsxs(\"div\", { children: [_jsx(FormControlLabel, { label: _jsx(Typography, { variant: \"body2\", children: \"Show options\" }), control: _jsx(Checkbox, { checked: checked, onChange: event => {\n                        setChecked(event.target.checked);\n                    } }) }), _jsx(DataGrid, { rowHeight: 25, hideFooter: rows.length < 100, rows: rows, showToolbar: checked, columns: columns.map((c, i) => ({\n                    ...c,\n                    width: widths[i],\n                })) })] })) : null;\n}\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard';\nimport VariantConsequenceDataGridWrapper from './VariantConsequenceDataGridWrapper';\nexport default function VariantConsequenceDataGrid({ data, fields, title, }) {\n    return data.length ? (_jsx(BaseCard, { title: title, children: _jsx(VariantConsequenceDataGridWrapper, { rows: data.map((elt, id) => ({\n                id,\n                ...Object.fromEntries(elt.split('|').map((e, i) => [fields[i], e])),\n            })), columns: fields.map(c => ({ field: c })) }) })) : null;\n}\n"],"names":["VariantConsequenceDataGridWrapper","rows","columns","checked","setChecked","useState","widths","measureGridWidth","r","_jsxs","_jsx","FormControlLabel","Typography","Checkbox","event","DataGrid","c","VariantConsequenceDataGrid","data","fields","title","BaseCard","elt","id"],"mappings":"2ZAKe,SAASA,EAAkC,CAAE,KAAAC,EAAM,QAAAC,GAAY,CAC1E,KAAM,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAS,EAAK,EACtCC,EAASJ,EAAQ,IAAI,GAAKK,EAAAA,iBAAiBN,EAAK,IAAIO,GAAKA,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,EAC3E,OAAOP,EAAK,OAAUQ,EAAAA,KAAM,MAAO,CAAE,SAAU,CAACC,EAAAA,IAAKC,EAAkB,CAAE,MAAOD,EAAAA,IAAKE,EAAY,CAAE,QAAS,QAAS,SAAU,cAAc,CAAE,EAAG,QAASF,MAAKG,EAAU,CAAE,QAASV,EAAS,SAAUW,GAAS,CAC7LV,EAAWU,EAAM,OAAO,OAAO,CACnC,CAAC,CAAE,EAAG,EAAGJ,MAAKK,EAAU,CAAE,UAAW,GAAI,WAAYd,EAAK,OAAS,IAAK,KAAMA,EAAM,YAAaE,EAAS,QAASD,EAAQ,IAAI,CAACc,EAAG,KAAO,CAC1I,GAAGA,EACH,MAAOV,EAAO,CAAC,CACnC,EAAkB,CAAC,CAAE,CAAC,CAAC,CAAE,EAAK,IAC9B,CCXe,SAASW,EAA2B,CAAE,KAAAC,EAAM,OAAAC,EAAQ,MAAAC,CAAK,EAAK,CACzE,OAAOF,EAAK,OAAUR,EAAAA,IAAKW,EAAU,CAAE,MAAOD,EAAO,SAAUV,EAAAA,IAAKV,EAAmC,CAAE,KAAMkB,EAAK,IAAI,CAACI,EAAKC,KAAQ,CAC1H,GAAAA,EACA,GAAG,OAAO,YAAYD,EAAI,MAAM,GAAG,EAAE,IAAI,CAAC,EAAG,IAAM,CAACH,EAAO,CAAC,EAAG,CAAC,CAAC,CAAC,CAClF,EAAc,EAAG,QAASA,EAAO,IAAIH,IAAM,CAAE,MAAOA,CAAC,EAAG,EAAG,CAAC,CAAE,EAAK,IACnE","x_google_ignoreList":[0,1]}