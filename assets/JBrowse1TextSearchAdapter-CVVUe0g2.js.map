{"version":3,"file":"JBrowse1TextSearchAdapter-CVVUe0g2.js","sources":["../../node_modules/ieee754/index.js","../../node_modules/buffer/index.js","../../node_modules/crc/mjs/create_buffer.js","../../node_modules/crc/mjs/define_crc.js","../../node_modules/crc/mjs/crc32.js","../../node_modules/@jbrowse/plugin-legacy-jbrowse/esm/JBrowse1TextSearchAdapter/HttpMap.js","../../node_modules/@jbrowse/plugin-legacy-jbrowse/esm/JBrowse1TextSearchAdapter/JBrowse1TextSearchAdapter.js"],"sourcesContent":["/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-prototype-builtins */\nimport { Buffer } from 'buffer';\nconst createBuffer = (value, encoding) => Buffer.from(value, encoding);\nexport default createBuffer;\n","import createBuffer from './create_buffer.js';\nexport default function defineCrc(model, calculator) {\n    const result = (value, previous) => calculator(createBuffer(value), previous) >>> 0;\n    result.signed = (value, previous) => calculator(createBuffer(value), previous);\n    result.unsigned = result;\n    result.model = model;\n    return result;\n}\n","import crc32 from './calculators/crc32.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-32', crc32);\n","import crc32 from 'crc/crc32';\nexport default class HttpMap {\n    constructor(args) {\n        this.url = args.url.endsWith('/') ? args.url : `${args.url}/`;\n    }\n    async readMeta() {\n        const meta = await this.loadFile('meta.json');\n        const { compress, track_names: tracks } = meta;\n        const hashHexCharacters = Math.ceil(meta.hash_bits / 4);\n        return { hashHexCharacters, compress, tracks };\n    }\n    async getHashHexCharacters() {\n        const meta = await this.readMeta();\n        return meta.hashHexCharacters;\n    }\n    async getCompress() {\n        const meta = await this.readMeta();\n        return meta.compress;\n    }\n    async getTrackNames() {\n        const meta = await this.readMeta();\n        return meta.tracks;\n    }\n    async get(key) {\n        const bucket = await this.getBucket(key);\n        return bucket[key];\n    }\n    async getBucket(key) {\n        const bucketIdent = this.hash(key);\n        const hexToDirPath = await this.hexToDirPath(bucketIdent);\n        return this.loadFile(hexToDirPath);\n    }\n    async loadFile(id) {\n        const response = await fetch(`${this.url}${id}`);\n        if (!response.ok) {\n            throw new Error(`HTTP ${response.status} ${response.statusText}`);\n        }\n        return response.json();\n    }\n    async hexToDirPath(hex) {\n        const hashHexCharacters = await this.getHashHexCharacters();\n        if (hashHexCharacters) {\n            const compress = await this.getCompress();\n            while (hex.length < 8) {\n                hex = `0${hex}`;\n            }\n            hex = hex.slice(8 - hashHexCharacters);\n            const dirpath = [];\n            for (let i = 0; i < hex.length; i += 3) {\n                dirpath.push(hex.slice(i, i + 3));\n            }\n            return `${dirpath.join('/')}.json${compress ? 'z' : ''}`;\n        }\n        return '';\n    }\n    hash(data) {\n        return crc32(data).toString(16).toLowerCase().replace('-', 'n');\n    }\n}\n","import BaseResult from '@jbrowse/core/TextSearch/BaseResults';\nimport { readConfObject } from '@jbrowse/core/configuration';\nimport { BaseAdapter } from '@jbrowse/core/data_adapters/BaseAdapter';\nimport HttpMap from './HttpMap';\nexport default class JBrowse1TextSearchAdapter extends BaseAdapter {\n    constructor(config, getSubAdapter, pluginManager) {\n        super(config, getSubAdapter, pluginManager);\n        const namesIndex = readConfObject(config, 'namesIndexLocation');\n        const { baseUri, uri } = namesIndex;\n        this.httpMap = new HttpMap({\n            url: baseUri ? new URL(uri, baseUri).href : uri,\n        });\n    }\n    async loadIndexFile(query) {\n        return this.httpMap.getBucket(query);\n    }\n    async searchIndex(args) {\n        const { searchType, queryString } = args;\n        const tracks = this.tracksNames || (await this.httpMap.getTrackNames());\n        const str = queryString.toLowerCase();\n        const entries = await this.loadIndexFile(str);\n        return entries[str]\n            ? this.formatResults(entries[str], tracks, searchType)\n            : [];\n    }\n    formatResults(results, tracks, searchType) {\n        return [\n            ...(searchType === 'exact'\n                ? []\n                : results.prefix.map(result => new BaseResult({\n                    label: typeof result === 'object' ? result.name : result,\n                    matchedAttribute: 'name',\n                    matchedObject: { result: result },\n                }))),\n            ...results.exact.map(result => {\n                const name = result[0];\n                const trackIndex = result[1];\n                const refName = result[3];\n                const start = result[4];\n                const end = result[5];\n                const locstring = `${refName || name}:${start}-${end}`;\n                return new BaseResult({\n                    locString: locstring,\n                    label: name,\n                    matchedAttribute: 'name',\n                    matchedObject: result,\n                    trackId: tracks[trackIndex],\n                });\n            }),\n        ].filter(result => result.getLabel() !== 'too many matches');\n    }\n}\n"],"names":["ieee754","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","i","d","s","value","c","rt","base64","require$$0","require$$1","customInspectSymbol","exports","Buffer","SlowBuffer","K_MAX_LENGTH","typedArraySupport","arr","proto","createBuffer","length","buf","arg","encodingOrOffset","allocUnsafe","from","fromString","fromArrayView","isInstance","fromArrayBuffer","valueOf","b","fromObject","assertSize","size","alloc","fill","encoding","checked","string","byteLength","actual","fromArrayLike","array","arrayView","copy","byteOffset","obj","len","numberIsNaN","a","x","y","list","pos","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","str","max","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","arrayIndexOf","indexSize","arrLength","valLength","read","foundIndex","found","j","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","ret","out","hexSliceLookupTable","bytes","newBuf","checkOffset","ext","noAssert","mul","defineBigIntMethod","validateNumber","first","last","boundsError","lo","hi","checkInt","min","maxBytes","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","limit","sub","checkIEEE754","writeFloat","littleEndian","writeDouble","targetStart","code","errors","E","sym","getMessage","Base","name","range","input","msg","received","addNumericalSeparator","checkBounds","type","INVALID_BASE64_RE","base64clean","units","leadSurrogate","byteArray","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","defineCrc","model","calculator","result","previous","crc32","HttpMap","args","meta","compress","tracks","key","bucketIdent","hexToDirPath","id","response","hex","hashHexCharacters","dirpath","data","JBrowse1TextSearchAdapter","BaseAdapter","config","getSubAdapter","pluginManager","namesIndex","readConfObject","baseUri","uri","query","searchType","queryString","entries","results","BaseResult","trackIndex","refName","locstring"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}