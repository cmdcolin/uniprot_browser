{"version":3,"file":"getQuantitativeStatsAutorun-7CM-qYe1.js","sources":["../../node_modules/@jbrowse/plugin-wiggle/esm/getQuantitativeStats.js","../../node_modules/@jbrowse/plugin-wiggle/esm/getQuantitativeStatsAutorun.js"],"sourcesContent":["import { getConf } from '@jbrowse/core/configuration';\nimport { getContainingView, getSession } from '@jbrowse/core/util';\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks';\nimport { isAlive } from 'mobx-state-tree';\nexport async function getQuantitativeStats(self, opts) {\n    const { rpcManager } = getSession(self);\n    const numStdDev = getConf(self, 'numStdDev') || 3;\n    const { adapterConfig, autoscaleType } = self;\n    const sessionId = getRpcSessionId(self);\n    const { currStatsBpPerPx } = opts;\n    const params = {\n        sessionId,\n        adapterConfig,\n        statusCallback: (message) => {\n            if (isAlive(self)) {\n                self.setMessage(message);\n            }\n        },\n        ...opts,\n    };\n    if (autoscaleType === 'global' || autoscaleType === 'globalsd') {\n        const results = (await rpcManager.call(sessionId, 'WiggleGetGlobalQuantitativeStats', params));\n        const { scoreMin, scoreMean, scoreStdDev } = results;\n        return autoscaleType === 'globalsd'\n            ? {\n                ...results,\n                scoreMin: scoreMin >= 0 ? 0 : scoreMean - numStdDev * scoreStdDev,\n                scoreMax: scoreMean + numStdDev * scoreStdDev,\n                currStatsBpPerPx,\n            }\n            : {\n                ...results,\n                currStatsBpPerPx,\n            };\n    }\n    if (autoscaleType === 'local' || autoscaleType === 'localsd') {\n        const { dynamicBlocks, bpPerPx } = getContainingView(self);\n        const results = (await rpcManager.call(sessionId, 'WiggleGetMultiRegionQuantitativeStats', {\n            ...params,\n            regions: dynamicBlocks.contentBlocks.map(region => {\n                const { start, end } = region;\n                return {\n                    ...JSON.parse(JSON.stringify(region)),\n                    start: Math.floor(start),\n                    end: Math.ceil(end),\n                };\n            }),\n            bpPerPx,\n        }));\n        const { scoreMin, scoreMean, scoreStdDev } = results;\n        return autoscaleType === 'localsd'\n            ? {\n                ...results,\n                scoreMin: scoreMin >= 0 ? 0 : scoreMean - numStdDev * scoreStdDev,\n                scoreMax: scoreMean + numStdDev * scoreStdDev,\n                currStatsBpPerPx,\n            }\n            : {\n                ...results,\n                currStatsBpPerPx,\n            };\n    }\n    if (autoscaleType === 'zscale') {\n        return rpcManager.call(sessionId, 'WiggleGetGlobalQuantitativeStats', params);\n    }\n    throw new Error(`invalid autoscaleType '${autoscaleType}'`);\n}\n","import { getContainingView, isAbortException } from '@jbrowse/core/util';\nimport { createStopToken } from '@jbrowse/core/util/stopToken';\nimport { autorun } from 'mobx';\nimport { addDisposer, isAlive } from 'mobx-state-tree';\nimport { getQuantitativeStats } from './getQuantitativeStats';\nexport function getQuantitativeStatsAutorun(self) {\n    addDisposer(self, autorun(async () => {\n        try {\n            if (self.quantitativeStatsReady) {\n                const view = getContainingView(self);\n                const stopToken = createStopToken();\n                self.setStatsLoading(stopToken);\n                const statsRegion = JSON.stringify(view.dynamicBlocks);\n                const wiggleStats = await getQuantitativeStats(self, {\n                    stopToken,\n                    filters: [],\n                    currStatsBpPerPx: view.bpPerPx,\n                    ...self.adapterProps(),\n                });\n                if (isAlive(self)) {\n                    self.updateQuantitativeStats(wiggleStats, statsRegion);\n                }\n            }\n        }\n        catch (e) {\n            if (isAlive(self) && !isAbortException(e)) {\n                console.error(e);\n                self.setError(e);\n            }\n        }\n    }, { delay: 1000 }));\n}\n"],"names":["getQuantitativeStats","self","opts","rpcManager","getSession","numStdDev","getConf","adapterConfig","autoscaleType","sessionId","getRpcSessionId","currStatsBpPerPx","params","message","isAlive","results","scoreMin","scoreMean","scoreStdDev","dynamicBlocks","bpPerPx","getContainingView","region","start","end","getQuantitativeStatsAutorun","addDisposer","autorun","view","stopToken","createStopToken","statsRegion","wiggleStats","e","isAbortException"],"mappings":"kFAIO,eAAeA,EAAqBC,EAAMC,EAAM,CACnD,KAAM,CAAE,WAAAC,CAAU,EAAKC,EAAAA,WAAWH,CAAI,EAChCI,EAAYC,EAAAA,QAAQL,EAAM,WAAW,GAAK,EAC1C,CAAE,cAAAM,EAAe,cAAAC,CAAa,EAAKP,EACnCQ,EAAYC,EAAAA,gBAAgBT,CAAI,EAChC,CAAE,iBAAAU,CAAgB,EAAKT,EACvBU,EAAS,CACX,UAAAH,EACA,cAAAF,EACA,eAAiBM,GAAY,CACrBC,EAAQb,CAAI,GACZA,EAAK,WAAWY,CAAO,CAE/B,EACA,GAAGX,CACX,EACI,GAAIM,IAAkB,UAAYA,IAAkB,WAAY,CAC5D,MAAMO,EAAW,MAAMZ,EAAW,KAAKM,EAAW,mCAAoCG,CAAM,EACtF,CAAE,SAAAI,EAAU,UAAAC,EAAW,YAAAC,CAAW,EAAKH,EAC7C,OAAOP,IAAkB,WACnB,CACE,GAAGO,EACH,SAAUC,GAAY,EAAI,EAAIC,EAAYZ,EAAYa,EACtD,SAAUD,EAAYZ,EAAYa,EAClC,iBAAAP,CAChB,EACc,CACE,GAAGI,EACH,iBAAAJ,CAChB,CACI,CACA,GAAIH,IAAkB,SAAWA,IAAkB,UAAW,CAC1D,KAAM,CAAE,cAAAW,EAAe,QAAAC,GAAYC,EAAAA,kBAAkBpB,CAAI,EACnDc,EAAW,MAAMZ,EAAW,KAAKM,EAAW,wCAAyC,CACvF,GAAGG,EACH,QAASO,EAAc,cAAc,IAAIG,GAAU,CAC/C,KAAM,CAAE,MAAAC,EAAO,IAAAC,CAAG,EAAKF,EACvB,MAAO,CACH,GAAG,KAAK,MAAM,KAAK,UAAUA,CAAM,CAAC,EACpC,MAAO,KAAK,MAAMC,CAAK,EACvB,IAAK,KAAK,KAAKC,CAAG,CACtC,CACY,CAAC,EACD,QAAAJ,CACZ,CAAS,EACK,CAAE,SAAAJ,EAAU,UAAAC,EAAW,YAAAC,CAAW,EAAKH,EAC7C,OAAOP,IAAkB,UACnB,CACE,GAAGO,EACH,SAAUC,GAAY,EAAI,EAAIC,EAAYZ,EAAYa,EACtD,SAAUD,EAAYZ,EAAYa,EAClC,iBAAAP,CAChB,EACc,CACE,GAAGI,EACH,iBAAAJ,CAChB,CACI,CACA,GAAIH,IAAkB,SAClB,OAAOL,EAAW,KAAKM,EAAW,mCAAoCG,CAAM,EAEhF,MAAM,IAAI,MAAM,0BAA0BJ,CAAa,GAAG,CAC9D,CC7DO,SAASiB,EAA4BxB,EAAM,CAC9CyB,EAAYzB,EAAM0B,EAAQ,SAAY,CAClC,GAAI,CACA,GAAI1B,EAAK,uBAAwB,CAC7B,MAAM2B,EAAOP,EAAAA,kBAAkBpB,CAAI,EAC7B4B,EAAYC,EAAAA,gBAAe,EACjC7B,EAAK,gBAAgB4B,CAAS,EAC9B,MAAME,EAAc,KAAK,UAAUH,EAAK,aAAa,EAC/CI,EAAc,MAAMhC,EAAqBC,EAAM,CACjD,UAAA4B,EACA,QAAS,CAAA,EACT,iBAAkBD,EAAK,QACvB,GAAG3B,EAAK,aAAY,CACxC,CAAiB,EACGa,EAAQb,CAAI,GACZA,EAAK,wBAAwB+B,EAAaD,CAAW,CAE7D,CACJ,OACOE,EAAG,CACFnB,EAAQb,CAAI,GAAK,CAACiC,EAAAA,iBAAiBD,CAAC,IACpC,QAAQ,MAAMA,CAAC,EACfhC,EAAK,SAASgC,CAAC,EAEvB,CACJ,EAAG,CAAE,MAAO,GAAI,CAAE,CAAC,CACvB","x_google_ignoreList":[0,1]}