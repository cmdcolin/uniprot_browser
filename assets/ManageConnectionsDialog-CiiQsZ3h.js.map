{"version":3,"file":"ManageConnectionsDialog-CiiQsZ3h.js","sources":["../../node_modules/@jbrowse/plugin-data-management/esm/HierarchicalTrackSelectorWidget/components/dialogs/ManageConnectionsDialog.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { readConfObject } from '@jbrowse/core/configuration';\nimport { Dialog } from '@jbrowse/core/ui';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Button, DialogActions, DialogContent, IconButton, Tooltip, Typography, } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()(theme => ({\n    connectionContainer: {\n        margin: theme.spacing(4),\n        width: 500,\n    },\n}));\nfunction DisabledButton() {\n    return (_jsx(Tooltip, { title: \"Unable to delete connection in config file as non-admin user\", children: _jsx(IconButton, { children: _jsx(CloseIcon, { color: \"disabled\" }) }) }));\n}\nconst ManageConnectionsDialog = observer(function ({ session, handleClose, breakConnection, }) {\n    const { classes } = useStyles();\n    const { adminMode, connections, sessionConnections } = session;\n    return (_jsxs(Dialog, { open: true, onClose: handleClose, maxWidth: \"lg\", title: \"Delete connections\", children: [_jsxs(DialogContent, { children: [_jsx(Typography, { children: \"Click the X icon to delete the connection from your config completely\" }), _jsxs(\"div\", { className: classes.connectionContainer, children: [connections.map(conf => {\n                                const name = readConfObject(conf, 'name');\n                                return (_jsxs(Typography, { children: [adminMode || (sessionConnections === null || sessionConnections === void 0 ? void 0 : sessionConnections.includes(conf)) ? (_jsx(IconButton, { onClick: () => {\n                                                breakConnection(conf, true);\n                                            }, children: _jsx(CloseIcon, { color: \"error\" }) })) : (_jsx(DisabledButton, {})), name] }, `conn-${name}`));\n                            }), !connections.length ? (_jsx(Typography, { children: \"No connections found\" })) : null] })] }), _jsx(DialogActions, { children: _jsx(Button, { onClick: () => {\n                        handleClose();\n                    }, variant: \"contained\", color: \"primary\", children: \"Close\" }) })] }));\n});\nexport default ManageConnectionsDialog;\n"],"names":["useStyles","makeStyles","theme","DisabledButton","_jsx","Tooltip","IconButton","CloseIcon","ManageConnectionsDialog","observer","session","handleClose","breakConnection","classes","adminMode","connections","sessionConnections","_jsxs","Dialog","DialogContent","Typography","conf","name","readConfObject","DialogActions","Button"],"mappings":"mHAOA,MAAMA,EAAYC,EAAU,EAAGC,IAAU,CACrC,oBAAqB,CACjB,OAAQA,EAAM,QAAQ,CAAC,EACvB,MAAO,GACf,CACA,EAAE,EACF,SAASC,GAAiB,CACtB,OAAQC,EAAAA,IAAKC,EAAS,CAAE,MAAO,+DAAgE,SAAUD,EAAAA,IAAKE,EAAY,CAAE,SAAUF,EAAAA,IAAKG,EAAW,CAAE,MAAO,UAAU,CAAE,CAAC,CAAE,EAAG,CACrL,CACK,MAACC,EAA0BC,EAAS,SAAU,CAAE,QAAAC,EAAS,YAAAC,EAAa,gBAAAC,CAAe,EAAK,CAC3F,KAAM,CAAE,QAAAC,CAAO,EAAKb,EAAS,EACvB,CAAE,UAAAc,EAAW,YAAAC,EAAa,mBAAAC,CAAkB,EAAKN,EACvD,OAAQO,EAAAA,KAAMC,EAAAA,OAAQ,CAAE,KAAM,GAAM,QAASP,EAAa,SAAU,KAAM,MAAO,qBAAsB,SAAU,CAACM,EAAAA,KAAME,EAAe,CAAE,SAAU,CAACf,EAAAA,IAAKgB,EAAY,CAAE,SAAU,uEAAuE,CAAE,EAAGH,EAAAA,KAAM,MAAO,CAAE,UAAWJ,EAAQ,oBAAqB,SAAU,CAACE,EAAY,IAAIM,GAAQ,CAC3T,MAAMC,EAAOC,EAAAA,eAAeF,EAAM,MAAM,EACxC,OAAQJ,EAAAA,KAAMG,EAAY,CAAE,SAAU,CAACN,GAAsFE,GAAmB,SAASK,CAAI,EAAMjB,EAAAA,IAAKE,EAAY,CAAE,QAAS,IAAM,CACrLM,EAAgBS,EAAM,EAAI,CAC9B,EAAG,SAAUjB,MAAKG,EAAW,CAAE,MAAO,OAAO,CAAE,EAAG,EAAMH,EAAAA,IAAKD,EAAgB,CAAA,CAAE,EAAImB,CAAI,CAAC,EAAI,QAAQA,CAAI,EAAE,CAC1H,CAAC,EAAIP,EAAY,OAAoE,KAA1DX,EAAAA,IAAKgB,EAAY,CAAE,SAAU,sBAAsB,CAAE,CAAS,CAAC,CAAE,CAAC,CAAC,CAAE,EAAGhB,EAAAA,IAAKoB,EAAe,CAAE,SAAUpB,MAAKqB,EAAQ,CAAE,QAAS,IAAM,CACrKd,EAAW,CACf,EAAG,QAAS,YAAa,MAAO,UAAW,SAAU,OAAO,CAAE,EAAG,CAAC,EAAG,CACzF,CAAC","x_google_ignoreList":[0]}