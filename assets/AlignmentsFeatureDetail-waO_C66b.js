const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./SupplementaryAlignments-8bHiRbV8.js","./index-B3kPj2Rj.js","./index-DzaTm5oQ.css","./BaseCard-D1jVHuu1.js","./FeatureDetails-C7VLYp0Q.js","./LinkedPairedAlignments-qcxYQrAH.js"])))=>i.map(i=>d[i]);
import{U as m,cM as u,m as f,j as e,F as p,f as h,C as g,a as l,aQ as b,u as y,L as x,o as c,P as C,_ as d}from"./index-B3kPj2Rj.js";import{F as v}from"./FeatureDetails-C7VLYp0Q.js";import{B as S}from"./BaseCard-D1jVHuu1.js";var q=u();const j=m(q),w=f()({compact:{paddingRight:0,paddingTop:0,paddingBottom:0}}),R=["read paired","read mapped in proper pair","read unmapped","mate unmapped","read reverse strand","mate reverse strand","first in pair","second in pair","not primary alignment","read fails platform/vendor quality checks","read is PCR or optical duplicate","supplementary alignment"];function F(a){const{classes:n}=w(),{flags:t}=a;return e.jsxs(S,{...a,title:"Flags",children:[e.jsx(j,{name:"Flag",value:t}),e.jsx(p,{children:R.map((i,o)=>{const r=t&1<<o,s=`${i}_${r}`;return e.jsx(h,{control:e.jsx(g,{className:n.compact,checked:!!r,name:i,readOnly:!0}),label:i},s)})})]})}function P({value:a}){const[n,t]=l.useState(!1),[i,o]=l.useState(!1),r=String(a);return r.length>100?e.jsxs(e.Fragment,{children:[e.jsx("button",{type:"button",onClick:()=>{b(r),o(!0),setTimeout(()=>{o(!1)},700)},children:i?"Copied to clipboard":"Copy"}),e.jsx("button",{type:"button",onClick:()=>{t(s=>!s)},children:n?"Show less":"Show more"}),e.jsx("div",{children:n?r:`${r.slice(0,100)}...`})]}):e.jsx("div",{children:r})}function k(a,n){var t;return((t=n.tags)===null||t===void 0?void 0:t[a])||n[a]}async function O(a,n){const t=y.getSession(n),{view:i}=n;try{if(i)await i.navToLocString(a);else throw new Error("No view associated with this view anymore")}catch(o){console.error(o),t.notify(`${o}`)}}function T({locString:a,model:n}){return e.jsx(x,{onClick:t=>{t.preventDefault(),O(a,n)},href:"#",children:a})}const _={AM:"The smallest template-independent mapping quality in the template",AS:"Alignment score generated by aligner",BC:"Barcode sequence identifying the sample",BQ:"Offset to base alignment quality (BAQ)",BZ:"Phred quality of the unique molecular barcode bases in the {OX} tag",CB:"Cell identifier",CC:"Reference name of the next hit",CM:"Edit distance between the color sequence and the color reference (see also {NM})",CO:"Free-text comments",CP:"Leftmost coordinate of the next hit",CQ:"Color read base qualities",CR:"Cellular barcode sequence bases (uncorrected)",CS:"Color read sequence",CT:"Complete read annotation tag, used for consensus annotation dummy features",CY:"Phred quality of the cellular barcode sequence in the {CR} tag",E2:"The 2nd most likely base calls",FI:"The index of segment in the template",FS:"Segment suffix",FZ:"Flow stopToken intensities",GC:"Reserved for backwards compatibility reasons",GQ:"Reserved for backwards compatibility reasons",GS:"Reserved for backwards compatibility reasons",H0:"Number of perfect hits",H1:"Number of 1-difference hits (see also {NM})",H2:"Number of 2-difference hits",HI:"Query hit index",IH:"Query hit total count",LB:"Library",MC:"CIGAR string for mate/next segment",MD:"String encoding mismatched and deleted reference bases",MF:"Reserved for backwards compatibility reasons",MI:"Molecular identifier; a string that uniquely identifies the molecule from which the record was derived",ML:"Base modification probabilities",MM:"Base modifications / methylation ",MQ:"Mapping quality of the mate/next segment",NH:"Number of reported alignments that contain the query in the current record",NM:"Edit distance to the reference",OA:"Original alignment",OC:"Original CIGAR (deprecated; use {OA} instead)",OP:"Original mapping position (deprecated; use {OA} instead)",OQ:"Original base quality",OX:"Original unique molecular barcode bases",PG:"Program",PQ:"Phred likelihood of the template",PT:"Read annotations for parts of the padded read sequence",PU:"Platform unit",Q2:"Phred quality of the mate/next segment sequence in the {R2} tag",QT:"Phred quality of the sample barcode sequence in the {BC} tag",QX:"Quality score of the unique molecular identifier in the {RX} tag",R2:"Sequence of the mate/next segment in the template",RG:"Read group",RT:"Reserved for backwards compatibility reasons",RX:"Sequence bases of the (possibly corrected) unique molecular identifier",S2:"Reserved for backwards compatibility reasons",SA:"Other canonical alignments in a chimeric alignment",SM:"Template-independent mapping quality",SQ:"Reserved for backwards compatibility reasons",TC:"The number of segments in the template",TS:"Transcript strand",U2:"Phred probability of the 2nd call being wrong conditional on the best being wrong",UQ:"Phred likelihood of the segment, conditional on the mapping being correct"},A=l.lazy(()=>d(()=>import("./SupplementaryAlignments-8bHiRbV8.js"),__vite__mapDeps([0,1,2,3,4]),import.meta.url)),M=l.lazy(()=>d(()=>import("./LinkedPairedAlignments-qcxYQrAH.js"),__vite__mapDeps([5,1,2,3]),import.meta.url)),Q=c(function(a){const{model:n,feat:t}=a,i=t.flags,o=k("SA",t);return e.jsxs(C,{"data-testid":"alignment-side-drawer",children:[e.jsx(v,{...a,descriptions:{tags:_},feature:t,formatter:(r,s)=>s==="next_segment_position"?e.jsx(T,{model:n,locString:r}):e.jsx(P,{value:r})}),o!==void 0?e.jsx(A,{model:n,tag:o,feature:t}):null,i!=null?e.jsxs(e.Fragment,{children:[i&1?e.jsx(M,{model:n,feature:t}):null,e.jsx(F,{flags:i,...a})]}):null]})}),B=c(function(a){const{model:n}=a,{featureData:t}=n,i=structuredClone(t);return i?e.jsx(Q,{feat:i,...a}):e.jsx("div",{children:"No feature loaded, may not be available after page refresh because it was too large for localStorage"})}),D=Object.freeze(Object.defineProperty({__proto__:null,default:B},Symbol.toStringTag,{value:"Module"}));export{D as A,O as n};
//# sourceMappingURL=AlignmentsFeatureDetail-waO_C66b.js.map
