import{o as x,m as h,a as o,j as e,c as j,D as m,d as f,e as p,B as c}from"./index-DPMJgfAS.js";import{j as g}from"./jexlStrings-ASxALQ0-.js";const y=h()({dialogContent:{width:"80em"},textAreaFont:{fontFamily:"Courier New"},error:{color:"red",fontSize:"0.8em"}});function w(s){g.stringToJexlExpression(s)}const C=x(function({model:s,handleClose:n}){const{classes:a}=y(),{activeFilters:d}=s,[r,u]=o.useState(d.join(`
`)),[i,l]=o.useState();return o.useEffect(()=>{try{r.split(`
`).map(t=>t.trim()).filter(t=>!!t).map(t=>{w(t.trim())}),l(void 0)}catch(t){console.error(t),l(t)}},[r]),e.jsxs(j.Dialog,{maxWidth:"xl",open:!0,onClose:n,title:"Add track filters",children:[e.jsxs(m,{children:[e.jsxs("div",{children:["Add filters, in jexl format, one per line, starting with the string jexl:. Examples:"," ",e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("code",{children:"jexl:get(feature,'name')=='BRCA1'"})," - show only feature where the name attribute is BRCA1"]}),e.jsxs("li",{children:[e.jsx("code",{children:"jexl:get(feature,'type')=='gene'"})," - show only gene type features in a GFF that has many other feature types"]}),e.jsxs("li",{children:[e.jsx("code",{children:"jexl:get(feature,'score') > 400"})," - show only features that have a score greater than 400"]}),e.jsxs("li",{children:[e.jsx("code",{children:"jexl:get(feature,'end') - get(feature,'start') < 1000000"})," ","- show only features with length less than 1Mbp"]})]})]}),i?e.jsx("p",{className:a.error,children:`${i}`}):null,e.jsx(f,{variant:"outlined",multiline:!0,minRows:5,maxRows:10,className:a.dialogContent,fullWidth:!0,value:r,onChange:t=>{u(t.target.value)},slotProps:{input:{classes:{input:a.textAreaFont}}}})]}),e.jsxs(p,{children:[e.jsx(c,{variant:"contained",color:"primary",type:"submit",autoFocus:!0,disabled:!!i,onClick:()=>{s.setJexlFilters(r.split(`
`)),n()},children:"Submit"}),e.jsx(c,{variant:"contained",color:"secondary",onClick:()=>{n()},children:"Cancel"})]})]})});export{C as default};
//# sourceMappingURL=AddFiltersDialog-CKCQ1X2F.js.map
