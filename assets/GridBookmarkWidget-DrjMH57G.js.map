{"version":3,"mappings":"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","names":["Share","createSvgIcon","_jsx","AssemblySelector","observer","model","validAssemblies","selectedAssemblies","noAssemblies","label","id","selectedSet","isAllSelected","e","_jsxs","FormControl","InputLabel","Select","event","OutlinedInput","selected","MenuItem","Checkbox","ListItemText","name","navToBookmark","locString","assembly","views","session","getSession","view","elt","newViewId","downloadBookmarkFile","fileFormat","selectedBookmarks","bookmarksWithValidAssemblies","bookmarksToDownload","fileContents","bookmark","labelVal","line","fileContent","a","b","blob","fileName","saveAs","assembleLocString","b64PadSuffix","b64","num","fromUrlSafeB64","originalB64","toByteArray","n","inflate","__vitePreload","bytes","inflated","toUrlSafeB64","str","deflate","fromByteArray","deflated","encoded","pos","useStyles","makeStyles","BookmarkGrid","classes","bookmarks","rows","r","region","index","assemblyName","rest","widths","measureText","measureGridWidth","row","DataGridFlexContainer","DataGrid","GRID_CHECKBOX_SELECTION_COL_DEF","value","Link","ColorPicker","target","newRowSelectionModel","ExportBookmarksDialog","lazy","ImportBookmarksDialog","ShareBookmarksDialog","HighlightSettingsDialog","EditHighlightColorDialog","DeleteBookmarksDialog","GridBookmarkWidget","Alert","CascadingMenuButton","GetApp","onClose","Publish","Delete","Palette","Settings","Menu"],"ignoreList":[0,1,2,3,4],"sources":["../../node_modules/@mui/icons-material/esm/Share.js","../../node_modules/@jbrowse/plugin-grid-bookmark/esm/GridBookmarkWidget/components/AssemblySelector.js","../../node_modules/@jbrowse/plugin-grid-bookmark/esm/GridBookmarkWidget/utils.js","../../node_modules/@jbrowse/plugin-grid-bookmark/esm/GridBookmarkWidget/components/BookmarkGrid.js","../../node_modules/@jbrowse/plugin-grid-bookmark/esm/GridBookmarkWidget/components/GridBookmarkWidget.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92-1.31-2.92-2.92-2.92\"\n}), 'Share');","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Checkbox, FormControl, InputLabel, ListItemText, MenuItem, OutlinedInput, Select, } from '@mui/material';\nimport { observer } from 'mobx-react';\nconst AssemblySelector = observer(function ({ model, }) {\n    const { validAssemblies, selectedAssemblies } = model;\n    const noAssemblies = validAssemblies.size === 0;\n    const label = 'Select assemblies';\n    const id = 'select-assemblies-label';\n    const selectedSet = new Set(selectedAssemblies);\n    const isAllSelected = [...validAssemblies].every(e => selectedSet.has(e));\n    return (_jsxs(FormControl, { disabled: noAssemblies, fullWidth: true, children: [_jsx(InputLabel, { id: id, children: label }), _jsxs(Select, { labelId: id, multiple: true, value: selectedAssemblies, onChange: event => {\n                    model.setSelectedAssemblies(typeof event.target.value === 'string'\n                        ? [event.target.value]\n                        : event.target.value);\n                }, input: _jsx(OutlinedInput, { label: label }), renderValue: selected => selected.join(', '), children: [_jsxs(MenuItem, { onClickCapture: event => {\n                            model.setSelectedAssemblies(isAllSelected ? [] : undefined);\n                            event.preventDefault();\n                        }, children: [_jsx(Checkbox, { checked: isAllSelected, indeterminate: !isAllSelected && selectedAssemblies.length > 0 }), _jsx(ListItemText, { primary: \"Select all\" })] }), [...validAssemblies].map(name => (_jsxs(MenuItem, { value: name, children: [_jsx(Checkbox, { checked: selectedAssemblies.includes(name) }), _jsx(ListItemText, { primary: name })] }, name)))] })] }));\n});\nexport default AssemblySelector;\n","import { assembleLocString, getSession } from '@jbrowse/core/util';\nimport { saveAs } from 'file-saver';\nexport async function navToBookmark(locString, assembly, views, model) {\n    const session = getSession(model);\n    try {\n        let view = views.find(view => view.id === session.focusedViewId);\n        if ((view === null || view === void 0 ? void 0 : view.assemblyNames[0]) !== assembly) {\n            view = views.find(elt => elt.type === 'LinearGenomeView' && elt.assemblyNames[0] === assembly);\n        }\n        if (!view) {\n            const newViewId = `${model.id}_${assembly}`;\n            view = session.addView('LinearGenomeView', {\n                id: newViewId,\n            });\n        }\n        await view.navToLocString(locString, assembly);\n    }\n    catch (e) {\n        console.error(e);\n        session.notifyError(`${e}`, e);\n    }\n}\nexport function downloadBookmarkFile(fileFormat, model) {\n    const { selectedBookmarks, bookmarksWithValidAssemblies } = model;\n    const bookmarksToDownload = selectedBookmarks.length === 0\n        ? bookmarksWithValidAssemblies\n        : selectedBookmarks;\n    if (fileFormat === 'BED') {\n        const fileHeader = '';\n        const fileContents = {};\n        for (const bookmark of bookmarksToDownload) {\n            const { label } = bookmark;\n            const labelVal = label === '' ? '.' : label;\n            const line = `${bookmark.refName}\\t${bookmark.start}\\t${bookmark.end}\\t${labelVal}\\n`;\n            if (fileContents[bookmark.assemblyName]) {\n                fileContents[bookmark.assemblyName].push(line);\n            }\n            else {\n                fileContents[bookmark.assemblyName] = [line];\n            }\n        }\n        for (const assembly in fileContents) {\n            const fileContent = fileContents[assembly].reduce((a, b) => a + b, fileHeader);\n            const blob = new Blob([fileContent || ''], {\n                type: 'text/x-bed;charset=utf-8',\n            });\n            const fileName = `jbrowse_bookmarks_${assembly}.bed`;\n            saveAs(blob, fileName);\n        }\n    }\n    else {\n        const fileHeader = 'chrom\\tstart\\tend\\tlabel\\tassembly_name\\tcoord_range\\n';\n        const fileContents = bookmarksToDownload\n            .map(bookmark => {\n            const { label } = bookmark;\n            const labelVal = label === '' ? '.' : label;\n            const locString = assembleLocString(bookmark);\n            return `${bookmark.refName}\\t${bookmark.start + 1}\\t${bookmark.end}\\t${labelVal}\\t${bookmark.assemblyName}\\t${locString}\\n`;\n        })\n            .reduce((a, b) => a + b, fileHeader);\n        const blob = new Blob([fileContents || ''], {\n            type: 'text/tab-separated-values;charset=utf-8',\n        });\n        const fileName = 'jbrowse_bookmarks.tsv';\n        saveAs(blob, fileName);\n    }\n}\nexport function b64PadSuffix(b64) {\n    let num = 0;\n    const mo = b64.length % 4;\n    switch (mo) {\n        case 3:\n            num = 1;\n            break;\n        case 2:\n            num = 2;\n            break;\n        case 0:\n            num = 0;\n            break;\n        default:\n            throw new Error('base64 not a valid length');\n    }\n    return b64 + '='.repeat(num);\n}\nexport async function fromUrlSafeB64(b64) {\n    const originalB64 = b64PadSuffix(b64.replaceAll('-', '+').replaceAll('_', '/'));\n    const { toByteArray } = await import('base64-js');\n    const { inflate } = await import('pako');\n    const bytes = toByteArray(originalB64);\n    const inflated = inflate(bytes);\n    return new TextDecoder().decode(inflated);\n}\nexport async function toUrlSafeB64(str) {\n    const bytes = new TextEncoder().encode(str);\n    const { deflate } = await import('pako');\n    const { fromByteArray } = await import('base64-js');\n    const deflated = deflate(bytes);\n    const encoded = fromByteArray(deflated);\n    const pos = encoded.indexOf('=');\n    return pos > 0\n        ? encoded.slice(0, pos).replaceAll('+', '-').replaceAll('/', '_')\n        : encoded.replaceAll('+', '-').replaceAll('/', '_');\n}\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport ColorPicker from '@jbrowse/core/ui/ColorPicker';\nimport DataGridFlexContainer from '@jbrowse/core/ui/DataGridFlexContainer';\nimport { assembleLocString, getSession, measureGridWidth, measureText, } from '@jbrowse/core/util';\nimport { Link } from '@mui/material';\nimport { DataGrid, GRID_CHECKBOX_SELECTION_COL_DEF } from '@mui/x-data-grid';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nimport { navToBookmark } from '../utils';\nconst useStyles = makeStyles()(() => ({\n    cell: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n}));\nconst BookmarkGrid = observer(function ({ model, }) {\n    const { classes } = useStyles();\n    const { bookmarks, bookmarksWithValidAssemblies, selectedAssemblies, selectedBookmarks, } = model;\n    const session = getSession(model);\n    const selectedSet = new Set(selectedAssemblies);\n    const rows = bookmarks\n        .filter(r => selectedSet.has(r.assemblyName))\n        .map((region, index) => {\n        const { assemblyName, ...rest } = region;\n        return {\n            ...region,\n            id: index,\n            assemblyName,\n            locString: assembleLocString(rest),\n            correspondingObj: region,\n        };\n    });\n    const widths = [\n        50,\n        Math.max(measureText('Bookmark link', 12) + 30, measureGridWidth(rows.map(row => row.locString))),\n        Math.max(measureText('Label', 12) + 30, measureGridWidth(rows.map(row => row.label))),\n        Math.max(measureText('Assembly', 12) + 30, measureGridWidth(rows.map(row => row.assemblyName))),\n        100,\n    ];\n    return (_jsx(DataGridFlexContainer, { children: _jsx(DataGrid, { density: \"compact\", disableRowSelectionOnClick: true, rows: rows, columns: [\n                {\n                    ...GRID_CHECKBOX_SELECTION_COL_DEF,\n                    width: widths[0],\n                },\n                {\n                    field: 'locString',\n                    headerName: 'Bookmark link',\n                    width: widths[1],\n                    renderCell: ({ value, row }) => (_jsx(Link, { className: classes.cell, href: \"#\", onClick: async (event) => {\n                            event.preventDefault();\n                            const { views } = session;\n                            await navToBookmark(value, row.assemblyName, views, model);\n                        }, children: value })),\n                },\n                {\n                    field: 'label',\n                    headerName: 'Label',\n                    width: widths[2],\n                    editable: true,\n                },\n                {\n                    field: 'assemblyName',\n                    headerName: 'Assembly',\n                    width: widths[3],\n                },\n                {\n                    field: 'highlight',\n                    headerName: 'Highlight',\n                    width: widths[4],\n                    renderCell: ({ value, row }) => (_jsx(ColorPicker, { color: value || 'black', onChange: event => {\n                            model.updateBookmarkHighlight(row, event);\n                        } })),\n                },\n            ], processRowUpdate: row => {\n                const target = rows[row.id];\n                model.updateBookmarkLabel(target, row.label);\n                return row;\n            }, onProcessRowUpdateError: e => {\n                session.notifyError(`${e}`, e);\n            }, checkboxSelection: true, onRowSelectionModelChange: newRowSelectionModel => {\n                if (bookmarksWithValidAssemblies.length > 0) {\n                    model.setSelectedBookmarks([...newRowSelectionModel.ids].map(value => ({\n                        ...rows[value],\n                    })));\n                }\n            }, rowSelectionModel: {\n                type: 'include',\n                ids: new Set(selectedBookmarks.map(r => r.id)),\n            } }) }));\n});\nexport default BookmarkGrid;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { lazy } from 'react';\nimport CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton';\nimport { getSession } from '@jbrowse/core/util';\nimport Delete from '@mui/icons-material/Delete';\nimport GetApp from '@mui/icons-material/GetApp';\nimport Menu from '@mui/icons-material/Menu';\nimport Palette from '@mui/icons-material/Palette';\nimport Publish from '@mui/icons-material/Publish';\nimport Settings from '@mui/icons-material/Settings';\nimport Share from '@mui/icons-material/Share';\nimport { Alert } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nimport AssemblySelector from './AssemblySelector';\nimport BookmarkGrid from './BookmarkGrid';\nconst ExportBookmarksDialog = lazy(() => import('./dialogs/ExportBookmarksDialog'));\nconst ImportBookmarksDialog = lazy(() => import('./dialogs/ImportBookmarksDialog'));\nconst ShareBookmarksDialog = lazy(() => import('./dialogs/ShareBookmarksDialog'));\nconst HighlightSettingsDialog = lazy(() => import('./dialogs/HighlightSettingsDialog'));\nconst EditHighlightColorDialog = lazy(() => import('./dialogs/EditHighlightColorDialog'));\nconst DeleteBookmarksDialog = lazy(() => import('./dialogs/DeleteBookmarksDialog'));\nconst useStyles = makeStyles()({\n    flex: {\n        display: 'flex',\n    },\n});\nconst GridBookmarkWidget = observer(function GridBookmarkWidget({ model, }) {\n    const { classes } = useStyles();\n    return (_jsxs(\"div\", { children: [_jsxs(Alert, { severity: \"info\", children: [\"Click and type within the \", _jsx(\"strong\", { children: \"label\" }), \" field to annotate your bookmark\"] }), _jsxs(\"div\", { className: classes.flex, children: [_jsx(CascadingMenuButton, { \"data-testid\": \"grid_bookmark_menu\", menuItems: [\n                            {\n                                label: 'Export',\n                                icon: GetApp,\n                                onClick: () => {\n                                    getSession(model).queueDialog(onClose => [\n                                        ExportBookmarksDialog,\n                                        { onClose, model },\n                                    ]);\n                                },\n                            },\n                            {\n                                label: 'Import',\n                                icon: Publish,\n                                onClick: () => {\n                                    getSession(model).queueDialog(onClose => [\n                                        ImportBookmarksDialog,\n                                        { model, onClose },\n                                    ]);\n                                },\n                            },\n                            {\n                                label: 'Delete',\n                                icon: Delete,\n                                onClick: () => {\n                                    getSession(model).queueDialog(onClose => [\n                                        DeleteBookmarksDialog,\n                                        { model, onClose },\n                                    ]);\n                                },\n                            },\n                            {\n                                label: 'Share',\n                                icon: Share,\n                                onClick: () => {\n                                    getSession(model).queueDialog(onClose => [\n                                        ShareBookmarksDialog,\n                                        { model, onClose },\n                                    ]);\n                                },\n                            },\n                            {\n                                label: 'Edit colors',\n                                icon: Palette,\n                                onClick: () => {\n                                    getSession(model).queueDialog(onClose => [\n                                        EditHighlightColorDialog,\n                                        { model, onClose },\n                                    ]);\n                                },\n                            },\n                            {\n                                label: 'Settings',\n                                icon: Settings,\n                                onClick: () => {\n                                    getSession(model).queueDialog(onClose => [\n                                        HighlightSettingsDialog,\n                                        { model, onClose },\n                                    ]);\n                                },\n                            },\n                        ], children: _jsx(Menu, {}) }), _jsx(AssemblySelector, { model: model })] }), _jsx(BookmarkGrid, { model: model })] }));\n});\nexport default GridBookmarkWidget;\n"],"file":"GridBookmarkWidget-DrjMH57G.js"}