import{S as N,y as m}from"./index-DPMJgfAS.js";import{B as g}from"./index-D3TbvS_u.js";import{r as q}from"./rxjs-DiVqhxS9.js";import{S as T}from"./simpleFeature-ByZ6HOzi.js";var c,b;function w(){if(b)return c;b=1;var h=/\{([0-9a-zA-Z_]+)\}/g;c=t;function t(a){var e;if(arguments.length===2&&typeof arguments[1]=="object")e=arguments[1];else{e=new Array(arguments.length-1);for(var u=1;u<arguments.length;++u)e[u-1]=arguments[u]}return(!e||!e.hasOwnProperty)&&(e={}),a.replace(h,function(o,r,n){var s;return a[n-1]==="{"&&a[n+o.length]==="}"?r:(s=e.hasOwnProperty(r)?e[r]:null,s??"")})}return c}var j=w();const I=N(j);class x extends g.BaseFeatureDataAdapter{constructor(t,a,e){super(t,a,e),this.endpoint=m.readConfObject(t,"endpoint").uri,this.queryTemplate=m.readConfObject(t,"queryTemplate"),this.additionalQueryParams=m.readConfObject(t,"additionalQueryParams"),this.refNamesQueryTemplate=m.readConfObject(t,"refNamesQueryTemplate"),this.configRefNames=m.readConfObject(t,"refNames")}async getRefNames(t){if(this.refNames)return this.refNames;if(this.refNamesQueryTemplate){const a=encodeURIComponent(this.refNamesQueryTemplate),e=await this.querySparql(a,t);this.refNames=this.resultsToRefNames(e)}else this.refNames=this.configRefNames;return this.refNames}getFeatures(t,a={}){return q.ObservableCreate(async e=>{const u=encodeURIComponent(I(this.queryTemplate,t)),{refName:d}=t,o=await this.querySparql(u,a),r=this.resultsToFeatures(o,d);for(const n of r)e.next(n);e.complete()},a.stopToken)}async querySparql(t,a){let e="";this.additionalQueryParams.length&&(e=`&${this.additionalQueryParams.join("&")}`);const u=`${this.endpoint}?query=${t}${e}`;return(await fetch(u,{headers:{accept:"application/json,application/sparql-results+json"}})).json()}resultsToRefNames(t){const a=t.results.bindings||[];if(!t.head.vars.includes("refName"))throw new Error('"refName" not found in refNamesQueryTemplate response');return a.map(u=>u.refName.value)}resultsToFeatures(t,a){const e=t.results.bindings||[],u=t.head.vars,d=["start","end","uniqueId"];for(const r of d)u.includes(r)||console.error(`Required field ${r} missing from feature data`);const o={};for(const r of e){const n=[{}];for(let s of u)if(s in r){const{value:l}=r[s];let f=0;for(;s.startsWith("sub_");)s=s.slice(4),f+=1;for(;f>n.length-1;)n.push({});n[f][s]=l}for(const[s,l]of n.entries()){const{uniqueId:f,start:p,end:i,strand:y}=l;s<n.length-1&&(n[s+1].parentUniqueId=f),o[f]={data:{...l,uniqueId:f,refName:a,start:Number.parseInt(p,10),end:Number.parseInt(i,10),strand:Number.parseInt(y,10)||0}}}}for(const[r,n]of Object.entries(o)){const s=n.data.parentUniqueId;if(n.data.parentUniqueId=void 0,s){const l=o[s];if(l)l.data.subfeatures||(l.data.subfeatures=[]),l.data.subfeatures.push({...n.data,uniqueId:r}),delete o[r];else{const f=Object.values(o).map(i=>i.data.subfeatures).filter(i=>!!i).flat();let p=!1;for(const i of f){if(i.uniqueId===s){i.subfeatures||(i.subfeatures=[]),i.subfeatures.push({...n.data,uniqueId:r}),delete o[r],p=!0;break}i.subfeatures&&f.push(...i.subfeatures)}p||console.error(`Could not find parentID ${s}`)}}}return Object.keys(o).map(r=>new T({...o[r].data,uniqueId:r,subfeatures:o[r].data.subfeatures}))}async hasDataForRefName(t,a={}){const e=await this.getRefNames(a);return!(e.length&&!e.includes(t))}}export{x as default};
//# sourceMappingURL=SPARQLAdapter-C7W3TUyP.js.map
