{"version":3,"file":"UniProtVariationAdapter-CQANZWDh.js","sources":["../../src/UniprotPlugin/UniProtVariationAdapter/UniProtVariationAdapter.ts"],"sourcesContent":["import { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { SimpleFeature, doesIntersect2 } from '@jbrowse/core/util'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\n\nimport type { BaseOptions } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport type { Feature, FileLocation, Region } from '@jbrowse/core/util'\n\ninterface UniProtVariantFeature {\n  begin: string\n  end: string\n  wildType: string\n  mutatedType: string\n  xrefs: {\n    name: string\n    id: string\n    url: string\n    alternativeUrl: string\n  }[]\n  predictions?: {\n    score: number\n  }[]\n  descriptions?: {\n    value: string\n  }[]\n  populationFrequencies?: {\n    frequency?: number\n  }[]\n}\n\nexport default class UniProtVariationAdapter extends BaseFeatureDataAdapter {\n  public static capabilities = ['getFeatures', 'getRefNames']\n\n  public feats:\n    | Promise<{ uniqueId: string; start: number; end: number }[]>\n    | undefined\n\n  private async loadDataP() {\n    const { features } = JSON.parse(\n      await openLocation(this.getConf('location') as FileLocation).readFile(\n        'utf8',\n      ),\n    ) as { features: UniProtVariantFeature[] }\n\n    const scoreField = this.getConf('scoreField') as string\n\n    return features.map(({ begin, end, ...rest }, idx) => ({\n      ...rest,\n      uniqueId: `feat-${idx}`,\n      start: +begin,\n      end: +end + 1,\n      score:\n        scoreField === 'population_frequency'\n          ? rest.populationFrequencies?.[0]?.frequency\n          : scoreField === 'variant_impact_score'\n            ? rest.predictions?.[0]?.score\n            : undefined,\n      description: rest.descriptions?.map(d => d.value).join(','),\n      name: [\n        rest.mutatedType\n          ? `${rest.wildType}->${rest.mutatedType}`\n          : `${rest.wildType}->del`,\n      ],\n    }))\n  }\n\n  private async loadData(_opts: BaseOptions = {}) {\n    this.feats =\n      this.feats ??\n      this.loadDataP().catch((error: unknown) => {\n        this.feats = undefined\n        throw error\n      })\n\n    return this.feats\n  }\n\n  public async getRefNames(_opts: BaseOptions = {}) {\n    return []\n  }\n\n  public getFeatures(query: Region, _opts: BaseOptions = {}) {\n    return ObservableCreate<Feature>(async observer => {\n      const { start, end, refName } = query\n      const data = await this.loadData()\n      for (const f of data) {\n        if (doesIntersect2(f.start, f.end, start, end)) {\n          observer.next(new SimpleFeature({ ...f, refName }))\n        }\n      }\n      observer.complete()\n    })\n  }\n\n  public freeResources(): void {}\n}\n"],"names":["UniProtVariationAdapter","BaseFeatureDataAdapter","features","openLocation","scoreField","begin","end","rest","idx","d","_opts","error","query","ObservableCreate","observer","start","refName","data","f","doesIntersect2","SimpleFeature"],"mappings":"+HA8BA,MAAqBA,UAAgCC,EAAAA,sBAAuB,CAC1E,OAAc,aAAe,CAAC,cAAe,aAAa,EAEnD,MAIP,MAAc,WAAY,CACxB,KAAM,CAAE,SAAAC,GAAa,KAAK,MACxB,MAAMC,EAAAA,aAAa,KAAK,QAAQ,UAAU,CAAiB,EAAE,SAC3D,MAAA,CACF,EAGIC,EAAa,KAAK,QAAQ,YAAY,EAE5C,OAAOF,EAAS,IAAI,CAAC,CAAE,MAAAG,EAAO,IAAAC,EAAK,GAAGC,CAAA,EAAQC,KAAS,CACrD,GAAGD,EACH,SAAU,QAAQC,CAAG,GACrB,MAAO,CAACH,EACR,IAAK,CAACC,EAAM,EACZ,MACEF,IAAe,uBACXG,EAAK,wBAAwB,CAAC,GAAG,UACjCH,IAAe,uBACbG,EAAK,cAAc,CAAC,GAAG,MACvB,OACR,YAAaA,EAAK,cAAc,OAASE,EAAE,KAAK,EAAE,KAAK,GAAG,EAC1D,KAAM,CACJF,EAAK,YACD,GAAGA,EAAK,QAAQ,KAAKA,EAAK,WAAW,GACrC,GAAGA,EAAK,QAAQ,OAAA,CACtB,EACA,CACJ,CAEA,MAAc,SAASG,EAAqB,GAAI,CAC9C,YAAK,MACH,KAAK,OACL,KAAK,YAAY,MAAOC,GAAmB,CACzC,WAAK,MAAQ,OACPA,CACR,CAAC,EAEI,KAAK,KACd,CAEA,MAAa,YAAYD,EAAqB,GAAI,CAChD,MAAO,CAAA,CACT,CAEO,YAAYE,EAAeF,EAAqB,GAAI,CACzD,OAAOG,EAAAA,iBAA0B,MAAMC,GAAY,CACjD,KAAM,CAAE,MAAAC,EAAO,IAAAT,EAAK,QAAAU,CAAA,EAAYJ,EAC1BK,EAAO,MAAM,KAAK,SAAA,EACxB,UAAWC,KAAKD,EACVE,EAAAA,eAAeD,EAAE,MAAOA,EAAE,IAAKH,EAAOT,CAAG,GAC3CQ,EAAS,KAAK,IAAIM,EAAAA,cAAc,CAAE,GAAGF,EAAG,QAAAF,CAAA,CAAS,CAAC,EAGtDF,EAAS,SAAA,CACX,CAAC,CACH,CAEO,eAAsB,CAAC,CAChC"}