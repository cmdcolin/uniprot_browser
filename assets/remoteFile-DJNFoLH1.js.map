{"version":3,"file":"remoteFile-DJNFoLH1.js","sources":["../../node_modules/generic-filehandle2/esm/remoteFile.js"],"sourcesContent":["function getMessage(e) {\n    const r = typeof e === 'object' && e !== null && 'message' in e\n        ? e.message\n        : `${e}`;\n    return r.replace(/\\.$/, '');\n}\nexport default class RemoteFile {\n    constructor(source, opts = {}) {\n        this.baseOverrides = {};\n        this.url = source;\n        const fetch = opts.fetch || globalThis.fetch.bind(globalThis);\n        if (opts.overrides) {\n            this.baseOverrides = opts.overrides;\n        }\n        this.fetchImplementation = fetch;\n    }\n    async fetch(input, init) {\n        let response;\n        try {\n            response = await this.fetchImplementation(input, init);\n        }\n        catch (e) {\n            if (`${e}`.includes('Failed to fetch')) {\n                // refetch to to help work around a chrome bug (discussed in\n                // generic-filehandle issue #72) in which the chrome cache returns a\n                // CORS error for content in its cache.  see also\n                // https://github.com/GMOD/jbrowse-components/pull/1511\n                console.warn(`generic-filehandle: refetching ${input} to attempt to work around chrome CORS header caching bug`);\n                try {\n                    response = await this.fetchImplementation(input, {\n                        ...init,\n                        cache: 'reload',\n                    });\n                }\n                catch (e) {\n                    throw new Error(`${getMessage(e)} fetching ${input}`, { cause: e });\n                }\n            }\n            else {\n                throw new Error(`${getMessage(e)} fetching ${input}`, { cause: e });\n            }\n        }\n        return response;\n    }\n    async read(length, position, opts = {}) {\n        const { headers = {}, signal, overrides = {} } = opts;\n        if (length < Infinity) {\n            headers.range = `bytes=${position}-${position + length}`;\n        }\n        else if (length === Infinity && position !== 0) {\n            headers.range = `bytes=${position}-`;\n        }\n        const res = await this.fetch(this.url, {\n            ...this.baseOverrides,\n            ...overrides,\n            headers: {\n                ...headers,\n                ...overrides.headers,\n                ...this.baseOverrides.headers,\n            },\n            method: 'GET',\n            redirect: 'follow',\n            mode: 'cors',\n            signal,\n        });\n        if (!res.ok) {\n            throw new Error(`HTTP ${res.status} fetching ${this.url}`);\n        }\n        if ((res.status === 200 && position === 0) || res.status === 206) {\n            const resData = await res.arrayBuffer();\n            // try to parse out the size of the remote file\n            const contentRange = res.headers.get('content-range');\n            const sizeMatch = /\\/(\\d+)$/.exec(contentRange || '');\n            if (sizeMatch?.[1]) {\n                this._stat = {\n                    size: parseInt(sizeMatch[1], 10),\n                };\n            }\n            return new Uint8Array(resData.slice(0, length));\n        }\n        // eslint-disable-next-line unicorn/prefer-ternary\n        if (res.status === 200) {\n            throw new Error(`${this.url} fetch returned status 200, expected 206`);\n        }\n        else {\n            throw new Error(`HTTP ${res.status} fetching ${this.url}`);\n        }\n    }\n    async readFile(options = {}) {\n        let encoding;\n        let opts;\n        if (typeof options === 'string') {\n            encoding = options;\n            opts = {};\n        }\n        else {\n            encoding = options.encoding;\n            opts = options;\n            delete opts.encoding;\n        }\n        const { headers = {}, signal, overrides = {} } = opts;\n        const res = await this.fetch(this.url, {\n            headers,\n            method: 'GET',\n            redirect: 'follow',\n            mode: 'cors',\n            signal,\n            ...this.baseOverrides,\n            ...overrides,\n        });\n        if (res.status !== 200) {\n            throw new Error(`HTTP ${res.status} fetching ${this.url}`);\n        }\n        if (encoding === 'utf8') {\n            return res.text();\n        }\n        else if (encoding) {\n            throw new Error(`unsupported encoding: ${encoding}`);\n        }\n        else {\n            return new Uint8Array(await res.arrayBuffer());\n        }\n    }\n    async stat() {\n        if (!this._stat) {\n            await this.read(10, 0);\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n            if (!this._stat) {\n                throw new Error(`unable to determine size of file at ${this.url}`);\n            }\n        }\n        return this._stat;\n    }\n    async close() {\n        return;\n    }\n}\n//# sourceMappingURL=remoteFile.js.map"],"names":["getMessage","e","RemoteFile","source","opts","fetch","input","init","response","length","position","headers","signal","overrides","res","resData","contentRange","sizeMatch","options","encoding"],"mappings":"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","x_google_ignoreList":[0]}