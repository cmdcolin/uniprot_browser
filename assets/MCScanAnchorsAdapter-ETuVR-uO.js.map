{"version":3,"file":"MCScanAnchorsAdapter-ETuVR-uO.js","sources":["../../node_modules/@jbrowse/plugin-comparative-adapters/esm/MCScanAnchorsAdapter/MCScanAnchorsAdapter.js"],"sourcesContent":["import { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter';\nimport { SimpleFeature, doesIntersect2, updateStatus } from '@jbrowse/core/util';\nimport { openLocation } from '@jbrowse/core/util/io';\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs';\nimport { parseBed, readFile } from '../util';\nclass MCScanAnchorsAdapter extends BaseFeatureDataAdapter {\n    async setup(opts) {\n        if (!this.setupP) {\n            this.setupP = this.setupPre(opts).catch((e) => {\n                this.setupP = undefined;\n                throw e;\n            });\n        }\n        return this.setupP;\n    }\n    async setupPre(opts) {\n        const { statusCallback = () => { } } = opts;\n        const assemblyNames = this.getConf('assemblyNames');\n        const pm = this.pluginManager;\n        const bed1 = openLocation(this.getConf('bed1Location'), pm);\n        const bed2 = openLocation(this.getConf('bed2Location'), pm);\n        const mcscan = openLocation(this.getConf('mcscanAnchorsLocation'), pm);\n        const [bed1text, bed2text, mcscantext] = await updateStatus('Downloading data', statusCallback, () => Promise.all([bed1, bed2, mcscan].map(r => readFile(r, opts))));\n        const bed1Map = parseBed(bed1text);\n        const bed2Map = parseBed(bed2text);\n        const feats = mcscantext\n            .split(/\\n|\\r\\n|\\r/)\n            .filter(f => !!f && f !== '###')\n            .map((line, index) => {\n            const [name1, name2, score] = line.split('\\t');\n            const r1 = bed1Map.get(name1);\n            const r2 = bed2Map.get(name2);\n            if (!r1 || !r2) {\n                throw new Error(`feature not found, ${name1} ${name2} ${r1} ${r2}`);\n            }\n            return [r1, r2, +score, index];\n        });\n        return {\n            assemblyNames,\n            feats,\n        };\n    }\n    async hasDataForRefName() {\n        return true;\n    }\n    getAssemblyNames() {\n        const assemblyNames = this.getConf('assemblyNames');\n        return assemblyNames;\n    }\n    async getRefNames(opts = {}) {\n        var _a;\n        const r1 = (_a = opts.regions) === null || _a === void 0 ? void 0 : _a[0].assemblyName;\n        const { feats } = await this.setup(opts);\n        const idx = this.getAssemblyNames().indexOf(r1);\n        if (idx !== -1) {\n            const set = new Set();\n            for (const feat of feats) {\n                set.add(idx === 0 ? feat[0].refName : feat[1].refName);\n            }\n            return [...set];\n        }\n        console.warn('Unable to do ref renaming on adapter');\n        return [];\n    }\n    getFeatures(region, opts = {}) {\n        return ObservableCreate(async (observer) => {\n            const { assemblyNames, feats } = await this.setup(opts);\n            const index = assemblyNames.indexOf(region.assemblyName);\n            if (index !== -1) {\n                const flip = index === 0;\n                for (const f of feats) {\n                    const [r1, r2, score, rowNum] = f;\n                    const [f1, f2] = !flip ? [r2, r1] : [r1, r2];\n                    if (f1.refName === region.refName &&\n                        doesIntersect2(region.start, region.end, f1.start, f1.end)) {\n                        observer.next(new SimpleFeature({\n                            ...f1,\n                            uniqueId: `${index}-${rowNum}`,\n                            syntenyId: rowNum,\n                            strand: f1.strand * f2.strand,\n                            assemblyName: assemblyNames[+!flip],\n                            score,\n                            mate: {\n                                ...f2,\n                                assemblyName: assemblyNames[+flip],\n                            },\n                        }));\n                    }\n                }\n            }\n            observer.complete();\n        });\n    }\n}\nMCScanAnchorsAdapter.capabilities = ['getFeatures', 'getRefNames'];\nexport default MCScanAnchorsAdapter;\n"],"names":["MCScanAnchorsAdapter","BaseFeatureDataAdapter","opts","e","statusCallback","assemblyNames","pm","bed1","openLocation","bed2","mcscan","bed1text","bed2text","mcscantext","updateStatus","r","readFile","bed1Map","parseBed","bed2Map","feats","f","line","index","name1","name2","score","r1","r2","_a","idx","set","feat","region","ObservableCreate","observer","flip","rowNum","f1","f2","doesIntersect2","SimpleFeature"],"mappings":"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","x_google_ignoreList":[0]}