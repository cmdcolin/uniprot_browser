import{B as c}from"./index-D3TbvS_u.js";import{ag as d,u as p}from"./index-DPMJgfAS.js";import{r as f}from"./rxjs-DiVqhxS9.js";class y extends c.BaseFeatureDataAdapter{static capabilities=["getFeatures","getRefNames"];feats;async loadDataP(){const{features:e}=JSON.parse(await d.openLocation(this.getConf("location")).readFile("utf8")),a=this.getConf("scoreField");return e.map(({begin:s,end:o,...t},r)=>({...t,uniqueId:`feat-${r}`,start:+s,end:+o+1,score:a==="population_frequency"?t.populationFrequencies?.[0]?.frequency:a==="variant_impact_score"?t.predictions?.[0]?.score:void 0,description:t.descriptions?.map(i=>i.value).join(","),name:[t.mutatedType?`${t.wildType}->${t.mutatedType}`:`${t.wildType}->del`]}))}async loadData(e={}){return this.feats=this.feats??this.loadDataP().catch(a=>{throw this.feats=void 0,a}),this.feats}async getRefNames(e={}){return[]}getFeatures(e,a={}){return f.ObservableCreate(async s=>{const{start:o,end:t,refName:r}=e,i=await this.loadData();for(const n of i)p.doesIntersect2(n.start,n.end,o,t)&&s.next(new p.SimpleFeature({...n,refName:r}));s.complete()})}freeResources(){}}export{y as default};
//# sourceMappingURL=UniProtVariationAdapter-oXAmGBHk.js.map
