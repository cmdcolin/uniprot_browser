{"version":3,"file":"SetColorDialog-Bu7YJ2-C.js","sources":["../../node_modules/@jbrowse/plugin-wiggle/esm/MultiLinearWiggleDisplay/components/SourcesGrid.js","../../node_modules/@jbrowse/plugin-wiggle/esm/MultiLinearWiggleDisplay/components/SetColorDialog.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { SanitizedHTML } from '@jbrowse/core/ui';\nimport ColorPicker, { ColorPopover } from '@jbrowse/core/ui/ColorPicker';\nimport { getStr, measureGridWidth } from '@jbrowse/core/util';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport KeyboardDoubleArrowDownIcon from '@mui/icons-material/KeyboardDoubleArrowDown';\nimport KeyboardDoubleArrowUpIcon from '@mui/icons-material/KeyboardDoubleArrowUp';\nimport { Button } from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { makeStyles } from 'tss-react/mui';\nimport { moveDown, moveUp } from './util';\nconst useStyles = makeStyles()({\n    cell: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n});\nfunction SourcesGrid({ rows, onChange, showTips, }) {\n    const { classes } = useStyles();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [selected, setSelected] = useState([]);\n    const { name: _name, color: _color, baseUri: _baseUri, ...rest } = rows[0];\n    const [widgetColor, setWidgetColor] = useState('blue');\n    const [currSort, setCurrSort] = useState({\n        idx: 0,\n        field: null,\n    });\n    return (_jsxs(\"div\", { children: [_jsx(Button, { disabled: !selected.length, onClick: event => {\n                    setAnchorEl(event.currentTarget);\n                }, children: \"Change color of selected items\" }), _jsxs(Button, { disabled: !selected.length, onClick: () => {\n                    onChange(moveUp([...rows], selected));\n                }, children: [_jsx(KeyboardArrowUpIcon, {}), showTips ? 'Move selected items up' : null] }), _jsxs(Button, { disabled: !selected.length, onClick: () => {\n                    onChange(moveDown([...rows], selected));\n                }, children: [_jsx(KeyboardArrowDownIcon, {}), showTips ? 'Move selected items down' : null] }), _jsxs(Button, { disabled: !selected.length, onClick: () => {\n                    onChange(moveUp([...rows], selected, rows.length));\n                }, children: [_jsx(KeyboardDoubleArrowUpIcon, {}), showTips ? 'Move selected items to top' : null] }), _jsxs(Button, { disabled: !selected.length, onClick: () => {\n                    onChange(moveDown([...rows], selected, rows.length));\n                }, children: [_jsx(KeyboardDoubleArrowDownIcon, {}), showTips ? 'Move selected items to bottom' : null] }), _jsx(ColorPopover, { anchorEl: anchorEl, color: widgetColor, onChange: c => {\n                    setWidgetColor(c);\n                    for (const id of selected) {\n                        const elt = rows.find(f => f.name === id);\n                        if (elt) {\n                            elt.color = c;\n                        }\n                    }\n                    onChange([...rows]);\n                }, onClose: () => {\n                    setAnchorEl(null);\n                } }), _jsx(\"div\", { style: { height: 400, width: '100%' }, children: _jsx(DataGrid, { disableRowSelectionOnClick: true, getRowId: row => row.name, checkboxSelection: true, onRowSelectionModelChange: arg => {\n                        setSelected([...arg.ids]);\n                    }, rows: rows, rowHeight: 25, columnHeaderHeight: 33, columns: [\n                        {\n                            field: 'color',\n                            headerName: 'Color',\n                            renderCell: ({ value, id }) => (_jsx(ColorPicker, { color: value || 'blue', onChange: c => {\n                                    const elt = rows.find(f => f.name === id);\n                                    if (elt) {\n                                        elt.color = c;\n                                    }\n                                    onChange([...rows]);\n                                } })),\n                        },\n                        {\n                            field: 'name',\n                            headerName: 'Name',\n                            width: measureGridWidth(rows.map(r => r.name)),\n                        },\n                        ...Object.keys(rest).map(val => ({\n                            field: val,\n                            renderCell: ({ value }) => (_jsx(\"div\", { className: classes.cell, children: _jsx(SanitizedHTML, { html: getStr(value) }) })),\n                            width: measureGridWidth(rows.map(r => `${r[val]}`)),\n                        })),\n                    ], sortModel: [], onSortModelChange: args => {\n                        const sort = args[0];\n                        const idx = (currSort.idx + 1) % 2;\n                        const field = sort.field || currSort.field;\n                        setCurrSort({ idx, field });\n                        onChange(field\n                            ? [...rows].sort((a, b) => {\n                                const aa = getStr(a[field]);\n                                const bb = getStr(b[field]);\n                                return idx === 1\n                                    ? aa.localeCompare(bb)\n                                    : bb.localeCompare(aa);\n                            })\n                            : rows);\n                    } }) })] }));\n}\nexport default SourcesGrid;\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport DraggableDialog from '@jbrowse/core/ui/DraggableDialog';\nimport { useLocalStorage } from '@jbrowse/core/util';\nimport { Button, DialogActions, DialogContent } from '@mui/material';\nimport { makeStyles } from 'tss-react/mui';\nimport SourcesGrid from './SourcesGrid';\nconst useStyles = makeStyles()({\n    content: {\n        minWidth: 800,\n    },\n    float: {\n        float: 'right',\n    },\n});\nfunction HelpfulTips() {\n    return (_jsxs(_Fragment, { children: [\"Helpful tips\", _jsxs(\"ul\", { children: [_jsx(\"li\", { children: \"You can select rows in the table with the checkboxes\" }), _jsx(\"li\", { children: \"Multi-select is enabled with shift-click and control-click\" }), _jsx(\"li\", { children: \"The \\\"Move selected items up/down\\\" can re-arrange subtracks\" }), _jsx(\"li\", { children: \"Sorting the data grid itself can also re-arrange subtracks\" }), _jsx(\"li\", { children: \"Changes are applied when you hit Submit\" }), _jsx(\"li\", { children: \"You can click and drag the dialog box to move it on the screen\" }), _jsx(\"li\", { children: \"Columns in the table can be hidden using a vertical '...' menu on the right side of each column\" })] })] }));\n}\nexport default function SetColorDialog({ model, handleClose, }) {\n    const { classes } = useStyles();\n    const { sources } = model;\n    const [currLayout, setCurrLayout] = useState(structuredClone(sources || []));\n    const [showTips, setShowTips] = useLocalStorage('multiwiggle-showTips', false);\n    return (_jsxs(DraggableDialog, { open: true, onClose: handleClose, maxWidth: \"xl\", title: \"Multi-wiggle color/arrangement editor\", children: [_jsxs(DialogContent, { className: classes.content, children: [_jsx(Button, { variant: \"contained\", className: classes.float, onClick: () => {\n                            setShowTips(!showTips);\n                        }, children: showTips ? 'Hide tips' : 'Show tips' }), _jsx(\"br\", {}), showTips ? _jsx(HelpfulTips, {}) : null, _jsx(SourcesGrid, { rows: currLayout, onChange: setCurrLayout, showTips: showTips })] }), _jsxs(DialogActions, { children: [_jsx(Button, { variant: \"contained\", type: \"submit\", color: \"inherit\", onClick: () => {\n                            model.clearLayout();\n                            setCurrLayout(model.sources || []);\n                        }, children: \"Clear custom settings\" }), _jsx(Button, { variant: \"contained\", color: \"secondary\", onClick: () => {\n                            handleClose();\n                            setCurrLayout([...(model.sources || [])]);\n                        }, children: \"Cancel\" }), _jsx(Button, { variant: \"contained\", color: \"primary\", type: \"submit\", onClick: () => {\n                            model.setLayout(currLayout);\n                            handleClose();\n                        }, children: \"Submit\" })] })] }));\n}\n"],"names":["useStyles","makeStyles","SourcesGrid","rows","onChange","showTips","classes","anchorEl","setAnchorEl","useState","selected","setSelected","_name","_color","_baseUri","rest","widgetColor","setWidgetColor","currSort","setCurrSort","_jsxs","_jsx","Button","event","moveUp","KeyboardArrowUpIcon","moveDown","KeyboardArrowDownIcon","KeyboardDoubleArrowUpIcon","KeyboardDoubleArrowDownIcon","ColorPopover","c","id","elt","f","DataGrid","row","arg","value","ColorPicker","measureGridWidth","r","val","SanitizedHTML","getStr","args","sort","idx","field","a","b","aa","bb","HelpfulTips","_Fragment","SetColorDialog","model","handleClose","sources","currLayout","setCurrLayout","setShowTips","useLocalStorage","DraggableDialog","DialogContent","DialogActions"],"mappings":"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","x_google_ignoreList":[0,1]}