{"version":3,"file":"GetSequenceDialog-3mJS1C5I.js","sources":["../../node_modules/@jbrowse/core/util/formatFastaStrings.js","../../node_modules/@jbrowse/plugin-linear-genome-view/esm/LinearGenomeView/components/fetchSequence.js","../../node_modules/@jbrowse/plugin-linear-genome-view/esm/LinearGenomeView/components/GetSequenceDialog.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatFastaLines = formatFastaLines;\nexports.formatSeqFasta = formatSeqFasta;\nfunction formatFastaLines(seqString) {\n    return seqString.replaceAll(/(.{1,80})/g, '$1\\n').trimEnd();\n}\nfunction formatSeqFasta(chunks) {\n    return chunks\n        .map(chunk => `>${chunk.header}\\n${formatFastaLines(chunk.seq)}`)\n        .join('\\n');\n}\n","import { getConf } from '@jbrowse/core/configuration';\nimport { getSession } from '@jbrowse/core/util';\nexport async function fetchSequence(model, regions) {\n    const session = getSession(model);\n    const { leftOffset, rightOffset } = model;\n    if (!leftOffset || !rightOffset) {\n        throw new Error('no offsets on model to use for range');\n    }\n    const assemblyNames = new Set(regions.map(r => r.assemblyName));\n    if (assemblyNames.size > 1) {\n        throw new Error('not able to fetch sequences from multiple assemblies currently');\n    }\n    const { rpcManager, assemblyManager } = session;\n    const assemblyName = leftOffset.assemblyName || rightOffset.assemblyName || '';\n    const assembly = assemblyManager.get(assemblyName);\n    if (!assembly) {\n        throw new Error(`assembly ${assemblyName} not found`);\n    }\n    const adapterConfig = getConf(assembly, ['sequence', 'adapter']);\n    const sessionId = 'getSequence';\n    return rpcManager.call(sessionId, 'CoreGetFeatures', {\n        adapterConfig,\n        regions,\n        sessionId,\n    });\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useState } from 'react';\nimport { Dialog, ErrorMessage, LoadingEllipses } from '@jbrowse/core/ui';\nimport { complement, reverse } from '@jbrowse/core/util';\nimport { formatSeqFasta } from '@jbrowse/core/util/formatFastaStrings';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport GetAppIcon from '@mui/icons-material/GetApp';\nimport { Button, Checkbox, DialogActions, DialogContent, FormControlLabel, FormGroup, TextField, Typography, } from '@mui/material';\nimport copy from 'copy-to-clipboard';\nimport { saveAs } from 'file-saver';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nimport { fetchSequence } from './fetchSequence';\nconst useStyles = makeStyles()({\n    dialogContent: {\n        width: '80em',\n    },\n    textAreaFont: {\n        fontFamily: 'Courier New',\n    },\n    ml: {\n        marginLeft: 10,\n    },\n});\nconst GetSequenceDialog = observer(function ({ model, handleClose, }) {\n    const { classes } = useStyles();\n    const [error, setError] = useState();\n    const [sequenceChunks, setSequenceChunks] = useState();\n    const [rev, setReverse] = useState(false);\n    const [copied, setCopied] = useState(false);\n    const [comp, setComplement] = useState(false);\n    const { leftOffset, rightOffset } = model;\n    const loading = sequenceChunks === undefined;\n    useEffect(() => {\n        const controller = new AbortController();\n        (async () => {\n            try {\n                const selection = model.getSelectedRegions(leftOffset, rightOffset);\n                if (selection.length === 0) {\n                    throw new Error('Selected region is out of bounds');\n                }\n                setSequenceChunks(await fetchSequence(model, selection));\n            }\n            catch (e) {\n                console.error(e);\n                setError(e);\n            }\n        })();\n        return () => {\n            controller.abort();\n        };\n    }, [model, leftOffset, rightOffset]);\n    const sequence = sequenceChunks\n        ? formatSeqFasta(sequenceChunks.map(chunk => {\n            let chunkSeq = chunk.get('seq');\n            const chunkRefName = chunk.get('refName');\n            const chunkStart = chunk.get('start') + 1;\n            const chunkEnd = chunk.get('end');\n            const loc = `${chunkRefName}:${chunkStart}-${chunkEnd}`;\n            if ((chunkSeq === null || chunkSeq === void 0 ? void 0 : chunkSeq.length) !== chunkEnd - chunkStart + 1) {\n                throw new Error(`${loc} returned ${chunkSeq.length.toLocaleString()} bases, but should have returned ${(chunkEnd - chunkStart).toLocaleString()}`);\n            }\n            if (rev) {\n                chunkSeq = reverse(chunkSeq);\n            }\n            if (comp) {\n                chunkSeq = complement(chunkSeq);\n            }\n            return {\n                header: loc + (rev ? '-rev' : '') + (comp ? '-comp' : ''),\n                seq: chunkSeq,\n            };\n        }))\n        : '';\n    const sequenceTooLarge = sequence ? sequence.length > 1000000 : false;\n    return (_jsxs(Dialog, { maxWidth: \"xl\", open: true, onClose: () => {\n            handleClose();\n            model.setOffsets();\n        }, title: \"Reference sequence\", children: [_jsxs(DialogContent, { children: [error ? (_jsx(ErrorMessage, { error: error })) : loading ? (_jsx(LoadingEllipses, { message: \"Retrieving sequences\" })) : null, _jsx(TextField, { \"data-testid\": \"rubberband-sequence\", variant: \"outlined\", multiline: true, minRows: 5, maxRows: 10, disabled: sequenceTooLarge, className: classes.dialogContent, fullWidth: true, value: sequenceTooLarge\n                            ? 'Reference sequence too large to display, use the download FASTA button'\n                            : sequence, slotProps: {\n                            input: {\n                                readOnly: true,\n                                classes: {\n                                    input: classes.textAreaFont,\n                                },\n                            },\n                        } }), _jsxs(FormGroup, { children: [_jsx(FormControlLabel, { control: _jsx(Checkbox, { value: rev, onChange: event => {\n                                        setReverse(event.target.checked);\n                                    } }), label: \"Reverse sequence\" }), _jsx(FormControlLabel, { control: _jsx(Checkbox, { value: comp, onChange: event => {\n                                        setComplement(event.target.checked);\n                                    } }), label: \"Complement sequence\" })] }), _jsx(Typography, { style: { margin: 10 }, children: \"Note: Check both boxes for the \\\"reverse complement\\\"\" })] }), _jsxs(DialogActions, { children: [_jsx(Button, { onClick: () => {\n                            copy(sequence);\n                            setCopied(true);\n                            setTimeout(() => {\n                                setCopied(false);\n                            }, 500);\n                        }, disabled: loading || !!error || sequenceTooLarge, color: \"primary\", startIcon: _jsx(ContentCopyIcon, {}), children: copied ? 'Copied' : 'Copy to clipboard' }), _jsx(Button, { onClick: () => {\n                            saveAs(new Blob([sequence || ''], {\n                                type: 'text/x-fasta;charset=utf-8',\n                            }), 'jbrowse_ref_seq.fa');\n                        }, disabled: loading || !!error, color: \"primary\", startIcon: _jsx(GetAppIcon, {}), children: \"Download FASTA\" }), _jsx(Button, { onClick: handleClose, variant: \"contained\", children: \"Close\" })] })] }));\n});\nexport default GetSequenceDialog;\n"],"names":["formatFastaStrings","formatFastaLines","formatSeqFasta","seqString","chunks","chunk","fetchSequence","model","regions","session","getSession","leftOffset","rightOffset","r","rpcManager","assemblyManager","assemblyName","assembly","adapterConfig","getConf","sessionId","useStyles","makeStyles","GetSequenceDialog","observer","handleClose","classes","error","setError","useState","sequenceChunks","setSequenceChunks","rev","setReverse","copied","setCopied","comp","setComplement","loading","useEffect","controller","selection","e","sequence","chunkSeq","chunkRefName","chunkStart","chunkEnd","loc","reverse","complement","sequenceTooLarge","_jsxs","Dialog","DialogContent","_jsx","ErrorMessage","LoadingEllipses","TextField","FormGroup","FormControlLabel","Checkbox","event","Typography","DialogActions","Button","copy","ContentCopyIcon","saveAs","GetAppIcon"],"mappings":"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","x_google_ignoreList":[0,1,2]}