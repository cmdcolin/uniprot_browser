{"version":3,"file":"BedpeAdapter-BjfQWuWl.js","sources":["../../node_modules/@jbrowse/plugin-bed/esm/BedpeAdapter/util.js","../../node_modules/@jbrowse/plugin-bed/esm/BedpeAdapter/BedpeAdapter.js"],"sourcesContent":["import { SimpleFeature } from '@jbrowse/core/util';\nconst svTypes = new Set(['DUP', 'TRA', 'INV', 'CNV', 'DEL']);\nexport function featureData(line, uniqueId, flip, names) {\n    const l = line.split('\\t');\n    const ref1 = l[flip ? 3 : 0];\n    const start1 = +l[flip ? 4 : 1];\n    const end1 = +l[flip ? 5 : 2];\n    const ref2 = l[!flip ? 3 : 0];\n    const start2 = +l[!flip ? 4 : 1];\n    const end2 = +l[!flip ? 5 : 2];\n    const name = l[6];\n    const score = +l[7];\n    const strand1 = parseStrand(l[8]);\n    const strand2 = parseStrand(l[9]);\n    const extra = l.slice(10);\n    const rest = names\n        ? Object.fromEntries(names.slice(10).map((n, idx) => [n, extra[idx]]))\n        : {};\n    const ALT = svTypes.has(extra[0]) ? `<${extra[0]}>` : undefined;\n    return new SimpleFeature({\n        ...rest,\n        start: start1,\n        end: end1,\n        type: 'paired_feature',\n        refName: ref1,\n        strand: strand1,\n        name,\n        score,\n        uniqueId,\n        mate: {\n            refName: ref2,\n            start: start2,\n            end: end2,\n            strand: strand2,\n        },\n        ...(ALT ? { ALT: [ALT] } : {}),\n    });\n}\nfunction parseStrand(strand) {\n    if (strand === '+') {\n        return 1;\n    }\n    else if (strand === '-') {\n        return -1;\n    }\n    else if (strand === '.') {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n","import IntervalTree from '@flatten-js/interval-tree';\nimport { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter';\nimport { fetchAndMaybeUnzipText } from '@jbrowse/core/util';\nimport { openLocation } from '@jbrowse/core/util/io';\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs';\nimport { featureData } from './util';\nclass BedpeAdapter extends BaseFeatureDataAdapter {\n    constructor() {\n        super(...arguments);\n        this.intervalTrees = {};\n    }\n    async loadDataP(opts) {\n        const data = await fetchAndMaybeUnzipText(openLocation(this.getConf('bedpeLocation'), this.pluginManager), opts);\n        const lines = data.split(/\\n|\\r\\n|\\r/).filter(f => !!f);\n        const headerLines = [];\n        let i = 0;\n        for (; i < lines.length && lines[i].startsWith('#'); i++) {\n            headerLines.push(lines[i]);\n        }\n        const header = headerLines.join('\\n');\n        const feats1 = {};\n        const feats2 = {};\n        for (; i < lines.length; i++) {\n            const line = lines[i];\n            const cols = line.split('\\t');\n            const r1 = cols[0];\n            const r2 = cols[3];\n            if (!feats1[r1]) {\n                feats1[r1] = [];\n            }\n            if (!feats2[r2]) {\n                feats2[r2] = [];\n            }\n            feats1[r1].push(line);\n            feats2[r2].push(line);\n        }\n        const columnNames = this.getConf('columnNames');\n        return {\n            header,\n            feats1,\n            feats2,\n            columnNames,\n        };\n    }\n    async loadData(opts = {}) {\n        if (!this.bedpeFeatures) {\n            this.bedpeFeatures = this.loadDataP(opts).catch((e) => {\n                this.bedpeFeatures = undefined;\n                throw e;\n            });\n        }\n        return this.bedpeFeatures;\n    }\n    async getRefNames(opts = {}) {\n        const { feats1, feats2 } = await this.loadData(opts);\n        return [...new Set([...Object.keys(feats1), ...Object.keys(feats2)])];\n    }\n    async getHeader(opts = {}) {\n        const { header } = await this.loadData(opts);\n        return header;\n    }\n    async getNames() {\n        const { header, columnNames } = await this.loadData();\n        if (columnNames.length) {\n            return columnNames;\n        }\n        const defs = header.split(/\\n|\\r\\n|\\r/).filter(f => !!f);\n        const defline = defs.at(-1);\n        return (defline === null || defline === void 0 ? void 0 : defline.includes('\\t'))\n            ? defline\n                .slice(1)\n                .split('\\t')\n                .map(field => field.trim())\n            : undefined;\n    }\n    async loadFeatureTreeP(refName) {\n        var _a, _b, _c, _d;\n        const { feats1, feats2 } = await this.loadData();\n        const names = await this.getNames();\n        const intervalTree = new IntervalTree();\n        const ret1 = (_b = (_a = feats1[refName]) === null || _a === void 0 ? void 0 : _a.map((f, i) => featureData(f, `${this.id}-${refName}-${i}-r1`, false, names))) !== null && _b !== void 0 ? _b : [];\n        const ret2 = (_d = (_c = feats2[refName]) === null || _c === void 0 ? void 0 : _c.map((f, i) => featureData(f, `${this.id}-${refName}-${i}-r2`, true, names))) !== null && _d !== void 0 ? _d : [];\n        for (const obj of [...ret1, ...ret2]) {\n            intervalTree.insert([obj.get('start'), obj.get('end')], obj);\n        }\n        return intervalTree;\n    }\n    async loadFeatureTree(refName) {\n        if (!this.intervalTrees[refName]) {\n            this.intervalTrees[refName] = this.loadFeatureTreeP(refName).catch((e) => {\n                this.intervalTrees[refName] = undefined;\n                throw e;\n            });\n        }\n        return this.intervalTrees[refName];\n    }\n    getFeatures(query, opts = {}) {\n        return ObservableCreate(async (observer) => {\n            const { start, end, refName } = query;\n            const intervalTree = await this.loadFeatureTree(refName);\n            for (const f of (intervalTree === null || intervalTree === void 0 ? void 0 : intervalTree.search([start, end])) || []) {\n                observer.next(f);\n            }\n            observer.complete();\n        }, opts.stopToken);\n    }\n}\nBedpeAdapter.capabilities = ['getFeatures', 'getRefNames'];\nexport default BedpeAdapter;\n"],"names":["svTypes","featureData","line","uniqueId","flip","names","l","ref1","start1","end1","ref2","start2","end2","name","score","strand1","parseStrand","strand2","extra","rest","n","idx","ALT","SimpleFeature","strand","BedpeAdapter","BaseFeatureDataAdapter","opts","lines","fetchAndMaybeUnzipText","openLocation","f","headerLines","i","header","feats1","feats2","cols","r1","r2","columnNames","e","defline","field","refName","_a","_b","_c","_d","intervalTree","IntervalTree","ret1","ret2","obj","query","ObservableCreate","observer","start","end"],"mappings":"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","x_google_ignoreList":[0,1]}