{"version":3,"file":"doAfterAttach-CFyo8zTF.js","sources":["../../node_modules/@jbrowse/plugin-alignments/esm/LinearPileupDisplay/doAfterAttach.js"],"sourcesContent":["import { getContainingTrack, getContainingView, getSession, } from '@jbrowse/core/util';\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks';\nimport { isAlive } from 'mobx-state-tree';\nimport { getUniqueModifications } from '../shared/getUniqueModifications';\nimport { createAutorun } from '../util';\nexport function doAfterAttach(model) {\n    createAutorun(model, async () => {\n        const view = getContainingView(model);\n        if (!model.autorunReady) {\n            return;\n        }\n        model.setCurrSortBpPerPx(view.bpPerPx);\n    }, { delay: 1000 });\n    createAutorun(model, async () => {\n        const { rpcManager } = getSession(model);\n        const view = getContainingView(model);\n        if (!model.autorunReady) {\n            return;\n        }\n        const { sortedBy, adapterConfig, rendererType, sortReady } = model;\n        const { bpPerPx } = view;\n        if (sortedBy && (!sortReady || model.currSortBpPerPx === view.bpPerPx)) {\n            const { pos, refName, assemblyName } = sortedBy;\n            await model.rendererType.renderInClient(rpcManager, {\n                assemblyName,\n                regions: [\n                    {\n                        start: pos,\n                        end: pos + 1,\n                        refName,\n                        assemblyName,\n                    },\n                ],\n                adapterConfig,\n                rendererType: rendererType.name,\n                sessionId: getRpcSessionId(model),\n                layoutId: getContainingTrack(model).id,\n                timeout: 1000000,\n                statusCallback: (arg) => {\n                    if (isAlive(model)) {\n                        model.setMessage(arg);\n                    }\n                },\n                ...model.renderPropsPre(),\n            });\n        }\n        if (isAlive(model)) {\n            model.setCurrSortBpPerPx(bpPerPx);\n            model.setSortReady(true);\n        }\n    }, { delay: 1000 });\n    createAutorun(model, async () => {\n        if (!model.autorunReady) {\n            return;\n        }\n        const { adapterConfig } = model;\n        const { staticBlocks } = getContainingView(model);\n        const vals = await getUniqueModifications({\n            model,\n            adapterConfig,\n            blocks: staticBlocks,\n        });\n        if (isAlive(model)) {\n            model.updateVisibleModifications(vals);\n            model.setModificationsReady(true);\n        }\n    }, { delay: 1000 });\n}\n"],"names":["doAfterAttach","model","createAutorun","view","getContainingView","rpcManager","getSession","sortedBy","adapterConfig","rendererType","sortReady","bpPerPx","pos","refName","assemblyName","getRpcSessionId","getContainingTrack","arg","isAlive","staticBlocks","vals","getUniqueModifications"],"mappings":"oEAKO,SAASA,EAAcC,EAAO,CACjCC,EAAcD,EAAO,SAAY,CAC7B,MAAME,EAAOC,EAAAA,kBAAkBH,CAAK,EAC/BA,EAAM,cAGXA,EAAM,mBAAmBE,EAAK,OAAO,CACzC,EAAG,CAAE,MAAO,IAAM,EAClBD,EAAcD,EAAO,SAAY,CAC7B,KAAM,CAAE,WAAAI,CAAU,EAAKC,EAAAA,WAAWL,CAAK,EACjCE,EAAOC,EAAAA,kBAAkBH,CAAK,EACpC,GAAI,CAACA,EAAM,aACP,OAEJ,KAAM,CAAE,SAAAM,EAAU,cAAAC,EAAe,aAAAC,EAAc,UAAAC,CAAS,EAAKT,EACvD,CAAE,QAAAU,CAAO,EAAKR,EACpB,GAAII,IAAa,CAACG,GAAaT,EAAM,kBAAoBE,EAAK,SAAU,CACpE,KAAM,CAAE,IAAAS,EAAK,QAAAC,EAAS,aAAAC,CAAY,EAAKP,EACvC,MAAMN,EAAM,aAAa,eAAeI,EAAY,CAChD,aAAAS,EACA,QAAS,CACL,CACI,MAAOF,EACP,IAAKA,EAAM,EACX,QAAAC,EACA,aAAAC,CACxB,CACA,EACgB,cAAAN,EACA,aAAcC,EAAa,KAC3B,UAAWM,EAAAA,gBAAgBd,CAAK,EAChC,SAAUe,EAAAA,mBAAmBf,CAAK,EAAE,GACpC,QAAS,IACT,eAAiBgB,GAAQ,CACjBC,EAAQjB,CAAK,GACbA,EAAM,WAAWgB,CAAG,CAE5B,EACA,GAAGhB,EAAM,eAAc,CACvC,CAAa,CACL,CACIiB,EAAQjB,CAAK,IACbA,EAAM,mBAAmBU,CAAO,EAChCV,EAAM,aAAa,EAAI,EAE/B,EAAG,CAAE,MAAO,IAAM,EAClBC,EAAcD,EAAO,SAAY,CAC7B,GAAI,CAACA,EAAM,aACP,OAEJ,KAAM,CAAE,cAAAO,CAAa,EAAKP,EACpB,CAAE,aAAAkB,CAAY,EAAKf,EAAAA,kBAAkBH,CAAK,EAC1CmB,EAAO,MAAMC,EAAuB,CACtC,MAAApB,EACA,cAAAO,EACA,OAAQW,CACpB,CAAS,EACGD,EAAQjB,CAAK,IACbA,EAAM,2BAA2BmB,CAAI,EACrCnB,EAAM,sBAAsB,EAAI,EAExC,EAAG,CAAE,MAAO,IAAM,CACtB","x_google_ignoreList":[0]}